<?xml version="1.0" encoding="utf-8"?><logs><log type="Controllers"><c y="NodeSet" t="2021-07-26T15:07:30"><controller name="Etiqueta_Perfil_Material_V" /><field name="Etiqueta_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-07-26T15:07:48"><controller name="Etiqueta_Perfil_Material_V" /><field name="Mostrar_Codigo_Material" /><update><Label>Mostrar Codigo Material ?</Label><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-07-26T15:07:57"><controller name="Etiqueta_Perfil_Material_V" /><field name="Mostar_Codigo_Cantidad" /><update><Label>Mostar Codigo Cantidad?</Label><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-07-26T15:08:05"><controller name="Etiqueta_Perfil_Material_V" /><field name="Mostrar_Codigo_Orden" /><update><Label>Mostrar Codigo Orden?</Label><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-07-26T15:08:14"><controller name="Etiqueta_Perfil_Material_V" /><view id="grid1" /><dataField fieldName="Etiqueta_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:08:19"><controller name="Etiqueta_Perfil_Material_V" /><view id="grid1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:08:37"><controller name="Etiqueta_Perfil_Material_V" /><field name="Solicitud_Id" /><update><Label>Folio de Solicitud</Label></update></c><c y="NodeSet" t="2021-07-26T15:08:52"><controller name="Etiqueta_Perfil_Material_V" /><view id="grid1" /><update><Label>Etiqueta Perfil Material </Label><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2021-07-26T15:08:56"><controller name="Etiqueta_Perfil_Material_V" /><view id="editForm1" /><update><Label>Review Etiqueta Perfil Material </Label></update></c><c y="NodeSet" t="2021-07-26T15:09:02"><controller name="Etiqueta_Perfil_Material_V" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Etiqueta Perfil Material </HeaderText></update></c><c y="NodeSet" t="2021-07-26T15:09:07"><controller name="Etiqueta_Perfil_Material_V" /><view id="editForm1" /><dataField fieldName="Etiqueta_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:09:12"><controller name="Etiqueta_Perfil_Material_V" /><view id="editForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:09:26"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:31"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag1" /><action id="a3" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:37"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:42"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:46"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag1" /><action id="a10" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:52"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:09:56"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag2" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:10:04"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:10:10"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:10:14"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag4" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:11:08"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:11:13"><controller name="Etiqueta_Perfil_Material_V" /><actionGroup id="ag9" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:13:03"><controller name="Etiqueta_Perfil_Material_V" /><clone /></c><c y="NodeSet" t="2021-07-26T15:16:24"><controller name="Etiqueta_Perfil_Material_V1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Select</CommandName><Phase>After</Phase><Script>  console.log('Iniciar libreria');
JsBarcode(".codigo").init();
  console.log('Cargada imgs');
$(document).ready(
    function(){
        console.log('fsdfsdfs');
        //JsBarcode(".codigo").init();
       
const observer = new MutationObserver((mutationList) =&gt; {
            //mutationList.forEach((mutation) =&gt; {
            //    if(mutation.addedNodes.length){
            //        console.log('Se agregaron elementos y debo generar los nuevos codigos de barra');
            //    }
            //});
            if (mutationList.length &gt; 0 ){
                console.log('Se agregaron elementoso y debo generar los nuevos codigos de barra');
                JsBarcode(".codigo").init();
            }
        });

        const po = document.querySelector('.app-listview.app-style-dv-view1.app-style-c-Etiqueta_Perfil_Material_V1.app-style-cv-Etiqueta_Perfil_Material_V1-grid1');
        const observerOptions = {
            attributes: false,
            childList: true,
            subtree: false
        };

        observer.observe(po, observerOptions);        

    }

);
</Script></insert></c><c y="NodeSet" t="2021-07-26T15:16:39"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Material" /><update><HtmlEncode>false</HtmlEncode></update></c><c y="NodeSet" t="2021-07-26T15:16:47"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Cantidad" /><update><HtmlEncode>false</HtmlEncode></update></c><c y="NodeSet" t="2021-07-26T15:16:51"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Numero_Orden_Produccion" /><update><HtmlEncode>false</HtmlEncode></update></c><c y="NodeSet" t="2021-07-26T15:23:43"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Material" /><update><WriteRoles>UsuarioPerfilMaterial</WriteRoles></update></c><c y="NodeSet" t="2021-07-26T15:34:08"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>Mostrar_Codigo_Material==1</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:34:10"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:34:46"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>Mostrar_Codigo_Material==0</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:35:48"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:37:52"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Codigo_Material] ==0</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:37:54"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:39:19"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Codigo_Material] ==0</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:39:57"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Codigo_Material] ==1</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:39:59"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:40:23"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Cantidad" /><update><Hidden>false</Hidden><Visibility>[Mostar_Codigo_Cantidad] ==1</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:40:25"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Cantidad" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:40:54"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Numero_Orden_Produccion" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Codigo_Orden] ==1</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:40:56"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="URL_Codigo_Numero_Orden_Produccion" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:02"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Mostrar_Codigo_Material" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:06"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Mostar_Codigo_Cantidad" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:10"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Mostrar_Codigo_Orden" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:16"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="Mostrar_Codigo_Material" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:20"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="Mostar_Codigo_Cantidad" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:41:25"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><dataField fieldName="Mostrar_Codigo_Orden" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:42:16"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Material" /><update><Label>Codigo Material</Label></update></c><c y="NodeSet" t="2021-07-26T15:42:24"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Cantidad" /><update><Label>Codigo Cantidad</Label></update></c><c y="NodeSet" t="2021-07-26T15:42:33"><controller name="Etiqueta_Perfil_Material_V1" /><field name="URL_Codigo_Numero_Orden_Produccion" /><update><Label>Codigo Numero Orden Produccion</Label></update></c><c y="NodeSet" t="2021-07-26T15:54:49"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><CodeFilterOperator>Equal</CodeFilterOperator><CodeFilter>[Mostrar_Codigo_Material] ==0</CodeFilter><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:54:58"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><CodeFilterOperator /><CodeFilter /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:55:00"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:56:04"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility>[Material] =='000477W'</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:56:06"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-26T15:56:41"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="URL_Codigo_Material" /><update><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-07-28T12:02:39"><controller name="Etiqueta_Perfil_Material_V1" /><insert type="field"><Name>Codigo_QR</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>true</Computed><Formula>'&lt;img
src="https://chart.googleapis.com/chart?chs=150x150&amp;cht=qr&amp;chl='+ CONCAT('https://erslqa.azurewebsites.net/pages/Perfil_Material.apsx?_Controller=Perfil_Material_V1&amp;Etiqueta_Id=',CONVERT(varchar(250), +"Etiqueta_Perfil_Material_V"."Numero_Etiqueta") , '&amp;_commandName=Select&amp;_commandArgument=editForm1')+'&amp;choe=UTF-8"/&gt;'
</Formula><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Codigo QR</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>false</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-07-28T12:02:43"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><move><controller name="Etiqueta_Perfil_Material_V1" /><field name="Codigo_QR" /></move></c><c y="NodeSet" t="2021-07-28T12:02:52"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><move><controller name="Etiqueta_Perfil_Material_V1" /><field name="Codigo_QR" /></move></c><c y="NodeSet" t="2021-07-28T12:06:00"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Numero_Etiqueta" /><move><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Codigo_QR" /></move></c><c y="NodeSet" t="2021-07-28T12:06:35"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><move><controller name="Etiqueta_Perfil_Material_V1" /><field name="Codigo_QR" /></move></c><c y="NodeSet" t="2021-07-28T12:06:39"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><category id="c1" /><move><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><category id="c3" /><dataField fieldName="Codigo_QR" /></move></c><c y="NodeSet" t="2021-07-28T12:06:42"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Numero_Etiqueta" /><move><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Codigo_QR" /></move></c><c y="NodeSet" t="2021-08-02T17:01:02"><controller name="Etiqueta_Perfil_Material_V1" /><field name="UrlCodigoQREtiqueta" /><update><HtmlEncode>false</HtmlEncode></update></c><c y="NodeSet" t="2021-08-02T17:01:42"><controller name="Etiqueta_Perfil_Material_V1" /><view id="grid1" /><dataField fieldName="Codigo_QR" /><delete /></c><c y="NodeSet" t="2021-08-02T17:01:53"><controller name="Etiqueta_Perfil_Material_V1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Codigo_QR" /><delete /></c><c y="NodeSet" t="2022-03-09T14:15:00"><controller name="Escaneo_Validador_Embarque" /><clone /></c><c y="NodeSet" t="2022-03-09T14:19:56"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><insert type="category"><HeaderText>Primera Validación</HeaderText><Description>Se valida SO/Lin y Material de Etiqueta de Embarque y Etiqueta de Tarima</Description></insert></c><c y="NodeSet" t="2022-03-09T14:20:37"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><update><Collapsed>true</Collapsed></update></c><c y="NodeSet" t="2022-03-09T14:20:56"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></move></c><c y="NodeSet" t="2022-03-09T14:21:03"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="SOrde_SItem_Tarima" /></move></c><c y="NodeSet" t="2022-03-09T14:21:06"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Tarima" /></move></c><c y="NodeSet" t="2022-03-09T14:22:31"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /></move></c><c y="NodeSet" t="2022-03-09T14:23:01"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /></move></c><c y="NodeSet" t="2022-03-09T14:23:17"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /></move></c><c y="NodeSet" t="2022-03-09T14:23:28"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Bitacora_Validador_Embarques_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T14:23:36"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T14:24:19"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Delivery_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Delivery_Delivery" /></move></c><c y="NodeSet" t="2022-03-09T14:24:25"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Delivery_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Delivery_Delivery" /></move></c><c y="NodeSet" t="2022-03-09T14:25:10"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Bitacora_Validador_Embarques_Id" /></before></c><c y="NodeSet" t="2022-03-09T14:25:25"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Bitacora_Validador_Embarques_Id" /></before></c><c y="NodeSet" t="2022-03-09T14:25:29"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Mensaje_Sistema_Id" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Bitacora_Validador_Embarques_Id" /></before></c><c y="NodeSet" t="2022-03-09T14:26:48"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><insert type="category"><HeaderText>Segunda Validación</HeaderText></insert></c><c y="NodeSet" t="2022-03-09T14:27:24"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><update><Description>Se valida Delivery, SO/Lin y Material de Delivery Vs Etiqueta de Embarque Vs Etiqueta de Tarima</Description></update></c><c y="NodeSet" t="2022-03-09T14:27:30"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><update><Collapsed>true</Collapsed></update></c><c y="NodeSet" t="2022-03-09T14:28:32"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T14:31:40"><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Id" /><update><ItemsDataTextField>Delivery</ItemsDataTextField></update></c><c y="NodeSet" t="2022-03-09T14:54:52"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></copy></c><c y="NodeSet" t="2022-03-09T14:55:06"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="SOrde_SItem_Tarima" /></copy></c><c y="NodeSet" t="2022-03-09T14:55:11"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Material_Tarima" /></copy></c><c y="NodeSet" t="2022-03-09T14:56:34"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></copy></c><c y="NodeSet" t="2022-03-09T14:56:39"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="SOrde_SItem_Tarima" /></move></c><c y="NodeSet" t="2022-03-09T14:56:43"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Material_Tarima" /></move></c><c y="NodeSet" t="2022-03-09T14:57:44"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></copy></c><c y="NodeSet" t="2022-03-09T14:57:48"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></move></c><c y="NodeSet" t="2022-03-09T14:57:59"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></move></c><c y="NodeSet" t="2022-03-09T14:58:07"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="SOrde_SItem_Tarima" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /></before></c><c y="NodeSet" t="2022-03-09T15:12:34"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Etiqueta_Embarque</Name><Type>Int32</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Etiqueta Embarque</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><ItemsStyle>Lookup</ItemsStyle><ItemsDataController>Etiqueta_Embarque_Detalle</ItemsDataController><ItemsDataView>Etiqueta_Embarque_Detalle_LookUp_List</ItemsDataView><ItemsDataValueField>Etiqueta_Embarque_Detalle_Id</ItemsDataValueField><ItemsDataTextField>Folio_Etiqueta_Embarque_Detalle</ItemsDataTextField><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:12:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque" /></move></c><c y="NodeSet" t="2022-03-09T15:13:13"><controller name="Escaneo_Validador_Embarque1" /><field name="EtiquetaEmbarqueDetalleFolioEtiquetaEmbarqueDetalle" /><update><Label> Folio Etiqueta Embarque</Label></update></c><c y="NodeSet" t="2022-03-09T15:13:33"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque" /><update><Label> Folio Etiqueta Embarque</Label></update></c><c y="NodeSet" t="2022-03-09T15:14:53"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque" /><update><ItemsDataView>Etiqueta_Embarque_Detalle_LookUp</ItemsDataView></update></c><c y="NodeSet" t="2022-03-09T15:15:36"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Material_Tarima_Dos</Name><Type>String</Type><Length>250</Length><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Material Tarima Dos</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:16:17"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>SOrde_SItem_Tarima_Dos</Name><Type>String</Type><Length>250</Length><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>SOrde SItem Tarima</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:16:23"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Dos" /><update><Label>Material Tarima </Label></update></c><c y="NodeSet" t="2022-03-09T15:16:31"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-03-09T15:16:31"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-03-09T15:16:40"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-03-09T15:18:41"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:19:08"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:19:12"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:19:16"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:19:19"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:19:21"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /></move></c><c y="NodeSet" t="2022-03-09T15:23:22"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Material_Embarque" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:23:27"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="SOrde_SItem_Emabarque" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:23:33"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Delivery" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:23:38"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Material_Delivery" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:23:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="SOrde_SItem_Delivery" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:23:54"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Cantidad_Material" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:24:25"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><insert type="category"><HeaderText>Resultado</HeaderText></insert></c><c y="NodeSet" t="2022-03-09T15:24:28"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /></move></c><c y="NodeSet" t="2022-03-09T15:24:31"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /></move></c><c y="NodeSet" t="2022-03-09T15:24:36"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /></move></c><c y="NodeSet" t="2022-03-09T15:24:42"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><update><Collapsed>false</Collapsed></update></c><c y="NodeSet" t="2022-03-09T15:25:38"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:25:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Packing_List" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T15:30:34"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><insert type="category"><HeaderText>Tercera Validación</HeaderText><Collapsed>true</Collapsed></insert></c><c y="NodeSet" t="2022-03-09T15:30:55"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><update><Description>Se valida Delivery, SO/Lin y Material de Packing List Vs Delivery Vs Etiqueta de Embarque Vs Etiqueta de Tarima</Description></update></c><c y="NodeSet" t="2022-03-09T15:36:01"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-09T15:36:10"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-09T15:36:19"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-09T15:36:26"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-09T15:36:59"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-03-09T15:37:06"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /></before></c><c y="NodeSet" t="2022-03-09T15:37:50"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>SOrde_SItem_Packing_List</Name><Type>String</Type><Length>250</Length><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>SOrde SItem Packing List</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:39:04"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Etiqueta_Embarque_Tres</Name><Type>UInt32</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label> Folio Etiqueta Embarque </Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><ItemsStyle>Lookup</ItemsStyle><ItemsDataController>Etiqueta_Embarque_Detalle</ItemsDataController><ItemsDataView>Etiqueta_Embarque_Detalle_LookUp</ItemsDataView><ItemsDataValueField>Etiqueta_Embarque_Detalle_Id</ItemsDataValueField><ItemsDataTextField>Folio_Etiqueta_Embarque_Detalle</ItemsDataTextField><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:39:44"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Material_Tarima_Tres</Name><Type>String</Type><Length>250</Length><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Material Tarima</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T15:40:13"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>SOrde_SItem_Tarima_Tres</Name><Type>String</Type><Length>250</Length><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>SOrde SItem Tarima Tres</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T16:15:16"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /></move></c><c y="NodeSet" t="2022-03-09T16:15:26"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:15:37"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:15:41"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><dataField fieldName="SOrde_SItem_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:15:44"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Delivery_Packing_List" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:15:47"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:15:49"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Delivery_Packing_List" /></move></c><c y="NodeSet" t="2022-03-09T16:16:42"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Delivery_Dos</Name><Type>Int64</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Delivery Dos</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><ItemsStyle>Lookup</ItemsStyle><ItemsDataController>Delivery</ItemsDataController><ItemsDataView>Delivery_LookUp_List</ItemsDataView><ItemsDataValueField>Delivery_Id</ItemsDataValueField><ItemsDataTextField>Delivery</ItemsDataTextField><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-09T16:16:48"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Dos" /></move></c><c y="NodeSet" t="2022-03-09T16:17:43"><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Dos" /><update><Label>Delivery </Label></update></c><c y="NodeSet" t="2022-03-09T16:17:56"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_Tres" /></move></c><c y="NodeSet" t="2022-03-09T16:18:10"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Tres" /></move></c><c y="NodeSet" t="2022-03-09T16:18:13"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Tres" /></move></c><c y="NodeSet" t="2022-03-09T16:18:52"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Cantidad_Material" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T16:18:56"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Cantidad_Material" /></move></c><c y="NodeSet" t="2022-03-09T16:20:33"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Packing_List" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T16:21:08"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /></before></c><c y="NodeSet" t="2022-03-09T16:21:12"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /></before></c><c y="NodeSet" t="2022-03-09T16:23:52"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Tres" /><update><Label>SOrde SItem Tarima </Label></update></c><c y="NodeSet" t="2022-03-10T17:13:14"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>Code</Type><CommandName>Custom</CommandName><CommandArgument>ExecCS001</CommandArgument><Phase>After</Phase></insert></c><c y="NodeSet" t="2022-03-10T17:17:08"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecCS001</CommandArgument><HeaderText>"Validar"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-10T17:19:00"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /><update><CommandName>Insert</CommandName><WhenLastCommandName>Insert</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-10T17:19:40"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /><update><CommandName>New</CommandName><WhenLastCommandName /></update></c><c y="NodeSet" t="2022-03-10T17:21:18"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /><update><CommandName>Custom</CommandName><WhenLastCommandName>New</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-10T17:33:57"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_Tres" /><update><Type>Int32</Type></update></c><c y="NodeSet" t="2022-03-10T18:11:47"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a9" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-10T18:12:42"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-11T08:59:17"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><CommandArgument>ExecJS001</CommandArgument><Phase>Execute</Phase><Script>console.log('Prueba BR');</Script></insert></c><c y="NodeSet" t="2022-03-11T09:00:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS001</CommandArgument><HeaderText>ValidarJS</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>New</WhenLastCommandName></insert></c><c y="NodeSet" t="2022-03-11T09:31:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
obtenerModeloCompresor(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
     /*
     var formulaReplaceBCUCCoolingCapacityConversion = fieldValueFormulaBCUCCoolingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  		      	          
       conversionBCUCCoolingCapacityConversion = eval(formulaReplaceBCUCCoolingCapacityConversion);
     
     var formulaReplaceCondensingCapacityConversion = fieldValueFormulaCondensingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.Condensing_Capacity);  		      	          
       conversionCondensingCapacityConversion = eval(formulaReplaceCondensingCapacityConversion);
     
     var formulaReplaceReserveCapacity = fieldValueFormulaReserveCapacity.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  
     formulaReplaceReserveCapacity = formulaReplaceReserveCapacity.replace("{Cooling_Capacity_Requiered}", fieldValueCoolingCapacityRequiered);  
     console.log(formulaReplaceReserveCapacity);
       conversionReserveCapacity = eval(formulaReplaceReserveCapacity);
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: data.Seleccion.BCUC_Cooling_Capacity }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: conversionBCUCCoolingCapacityConversion }
         ,{ name: 'Condensing_Capacity', value: data.Seleccion.Condensing_Capacity }
         ,{ name: 'Condensing_Capacity_Conversion', value: conversionCondensingCapacityConversion }
         ,{ name: 'Reserve_Capacity', value: conversionReserveCapacity }
         ,{ name: 'Model', value: data.Seleccion.Model }
         ,{ name: 'Compresor_Id_Resultante_1', value: data.Seleccion.Compresor_Id_Resultante_1 }
         ,{ name: 'Compresor_Id_Resultante_2', value: data.Seleccion.Compresor_Id_Resultante_2 }
         ,{ name: 'Compresor_Capacity_QW_1', value: data.Seleccion.Compresor_Capacity_QW_1 }
         ,{ name: 'Compresor_Capacity_QW_2', value: data.Seleccion.Compresor_Capacity_QW_2 }
         ,{ name: 'Compresor_Cop_1', value: data.Seleccion.Compresor_Cop_1 }
         ,{ name: 'Compresor_Cop_2', value: data.Seleccion.Compresor_Cop_2 }
       ]
     });
     
     
     $app.touch.notify({ text: 'Modelo encontrado : ' + data.Seleccion.Model, duration: "medium" });   */
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:31:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
obtenerModeloCompresor(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
     /*
     var formulaReplaceBCUCCoolingCapacityConversion = fieldValueFormulaBCUCCoolingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  		      	          
       conversionBCUCCoolingCapacityConversion = eval(formulaReplaceBCUCCoolingCapacityConversion);
     
     var formulaReplaceCondensingCapacityConversion = fieldValueFormulaCondensingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.Condensing_Capacity);  		      	          
       conversionCondensingCapacityConversion = eval(formulaReplaceCondensingCapacityConversion);
     
     var formulaReplaceReserveCapacity = fieldValueFormulaReserveCapacity.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  
     formulaReplaceReserveCapacity = formulaReplaceReserveCapacity.replace("{Cooling_Capacity_Requiered}", fieldValueCoolingCapacityRequiered);  
     console.log(formulaReplaceReserveCapacity);
       conversionReserveCapacity = eval(formulaReplaceReserveCapacity);
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: data.Seleccion.BCUC_Cooling_Capacity }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: conversionBCUCCoolingCapacityConversion }
         ,{ name: 'Condensing_Capacity', value: data.Seleccion.Condensing_Capacity }
         ,{ name: 'Condensing_Capacity_Conversion', value: conversionCondensingCapacityConversion }
         ,{ name: 'Reserve_Capacity', value: conversionReserveCapacity }
         ,{ name: 'Model', value: data.Seleccion.Model }
         ,{ name: 'Compresor_Id_Resultante_1', value: data.Seleccion.Compresor_Id_Resultante_1 }
         ,{ name: 'Compresor_Id_Resultante_2', value: data.Seleccion.Compresor_Id_Resultante_2 }
         ,{ name: 'Compresor_Capacity_QW_1', value: data.Seleccion.Compresor_Capacity_QW_1 }
         ,{ name: 'Compresor_Capacity_QW_2', value: data.Seleccion.Compresor_Capacity_QW_2 }
         ,{ name: 'Compresor_Cop_1', value: data.Seleccion.Compresor_Cop_1 }
         ,{ name: 'Compresor_Cop_2', value: data.Seleccion.Compresor_Cop_2 }
       ]
     });
     
     
     $app.touch.notify({ text: 'Modelo encontrado : ' + data.Seleccion.Model, duration: "medium" });   */
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:32:59"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
     /*
     var formulaReplaceBCUCCoolingCapacityConversion = fieldValueFormulaBCUCCoolingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  		      	          
       conversionBCUCCoolingCapacityConversion = eval(formulaReplaceBCUCCoolingCapacityConversion);
     
     var formulaReplaceCondensingCapacityConversion = fieldValueFormulaCondensingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.Condensing_Capacity);  		      	          
       conversionCondensingCapacityConversion = eval(formulaReplaceCondensingCapacityConversion);
     
     var formulaReplaceReserveCapacity = fieldValueFormulaReserveCapacity.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  
     formulaReplaceReserveCapacity = formulaReplaceReserveCapacity.replace("{Cooling_Capacity_Requiered}", fieldValueCoolingCapacityRequiered);  
     console.log(formulaReplaceReserveCapacity);
       conversionReserveCapacity = eval(formulaReplaceReserveCapacity);
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: data.Seleccion.BCUC_Cooling_Capacity }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: conversionBCUCCoolingCapacityConversion }
         ,{ name: 'Condensing_Capacity', value: data.Seleccion.Condensing_Capacity }
         ,{ name: 'Condensing_Capacity_Conversion', value: conversionCondensingCapacityConversion }
         ,{ name: 'Reserve_Capacity', value: conversionReserveCapacity }
         ,{ name: 'Model', value: data.Seleccion.Model }
         ,{ name: 'Compresor_Id_Resultante_1', value: data.Seleccion.Compresor_Id_Resultante_1 }
         ,{ name: 'Compresor_Id_Resultante_2', value: data.Seleccion.Compresor_Id_Resultante_2 }
         ,{ name: 'Compresor_Capacity_QW_1', value: data.Seleccion.Compresor_Capacity_QW_1 }
         ,{ name: 'Compresor_Capacity_QW_2', value: data.Seleccion.Compresor_Capacity_QW_2 }
         ,{ name: 'Compresor_Cop_1', value: data.Seleccion.Compresor_Cop_1 }
         ,{ name: 'Compresor_Cop_2', value: data.Seleccion.Compresor_Cop_2 }
       ]
     });
     
     
     $app.touch.notify({ text: 'Modelo encontrado : ' + data.Seleccion.Model, duration: "medium" });   */
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:39:36"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Resultado_Validacion</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Resultado Validacion</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-11T09:39:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Resultado_Validacion" /></move></c><c y="NodeSet" t="2022-03-11T09:41:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
     /*
     var formulaReplaceBCUCCoolingCapacityConversion = fieldValueFormulaBCUCCoolingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  		      	          
       conversionBCUCCoolingCapacityConversion = eval(formulaReplaceBCUCCoolingCapacityConversion);
     
     var formulaReplaceCondensingCapacityConversion = fieldValueFormulaCondensingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.Condensing_Capacity);  		      	          
       conversionCondensingCapacityConversion = eval(formulaReplaceCondensingCapacityConversion);
     
     var formulaReplaceReserveCapacity = fieldValueFormulaReserveCapacity.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  
     formulaReplaceReserveCapacity = formulaReplaceReserveCapacity.replace("{Cooling_Capacity_Requiered}", fieldValueCoolingCapacityRequiered);  
     console.log(formulaReplaceReserveCapacity);
       conversionReserveCapacity = eval(formulaReplaceReserveCapacity);
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: data.Seleccion.BCUC_Cooling_Capacity }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: conversionBCUCCoolingCapacityConversion }
         ,{ name: 'Condensing_Capacity', value: data.Seleccion.Condensing_Capacity }
         ,{ name: 'Condensing_Capacity_Conversion', value: conversionCondensingCapacityConversion }
         ,{ name: 'Reserve_Capacity', value: conversionReserveCapacity }
         ,{ name: 'Model', value: data.Seleccion.Model }
         ,{ name: 'Compresor_Id_Resultante_1', value: data.Seleccion.Compresor_Id_Resultante_1 }
         ,{ name: 'Compresor_Id_Resultante_2', value: data.Seleccion.Compresor_Id_Resultante_2 }
         ,{ name: 'Compresor_Capacity_QW_1', value: data.Seleccion.Compresor_Capacity_QW_1 }
         ,{ name: 'Compresor_Capacity_QW_2', value: data.Seleccion.Compresor_Capacity_QW_2 }
         ,{ name: 'Compresor_Cop_1', value: data.Seleccion.Compresor_Cop_1 }
         ,{ name: 'Compresor_Cop_2', value: data.Seleccion.Compresor_Cop_2 }
       ]
     });
     
     
     $app.touch.notify({ text: 'Modelo encontrado : ' + data.Seleccion.Model, duration: "medium" });   */
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:43:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
     /*
     var formulaReplaceBCUCCoolingCapacityConversion = fieldValueFormulaBCUCCoolingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  		      	          
       conversionBCUCCoolingCapacityConversion = eval(formulaReplaceBCUCCoolingCapacityConversion);
     
     var formulaReplaceCondensingCapacityConversion = fieldValueFormulaCondensingCapacityConversion.replace("{Unidad_origen}", data.Seleccion.Condensing_Capacity);  		      	          
       conversionCondensingCapacityConversion = eval(formulaReplaceCondensingCapacityConversion);
     
     var formulaReplaceReserveCapacity = fieldValueFormulaReserveCapacity.replace("{Unidad_origen}", data.Seleccion.BCUC_Cooling_Capacity);  
     formulaReplaceReserveCapacity = formulaReplaceReserveCapacity.replace("{Cooling_Capacity_Requiered}", fieldValueCoolingCapacityRequiered);  
     console.log(formulaReplaceReserveCapacity);
       conversionReserveCapacity = eval(formulaReplaceReserveCapacity);
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: data.Seleccion.BCUC_Cooling_Capacity }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: conversionBCUCCoolingCapacityConversion }
         ,{ name: 'Condensing_Capacity', value: data.Seleccion.Condensing_Capacity }
         ,{ name: 'Condensing_Capacity_Conversion', value: conversionCondensingCapacityConversion }
         ,{ name: 'Reserve_Capacity', value: conversionReserveCapacity }
         ,{ name: 'Model', value: data.Seleccion.Model }
         ,{ name: 'Compresor_Id_Resultante_1', value: data.Seleccion.Compresor_Id_Resultante_1 }
         ,{ name: 'Compresor_Id_Resultante_2', value: data.Seleccion.Compresor_Id_Resultante_2 }
         ,{ name: 'Compresor_Capacity_QW_1', value: data.Seleccion.Compresor_Capacity_QW_1 }
         ,{ name: 'Compresor_Capacity_QW_2', value: data.Seleccion.Compresor_Capacity_QW_2 }
         ,{ name: 'Compresor_Cop_1', value: data.Seleccion.Compresor_Cop_1 }
         ,{ name: 'Compresor_Cop_2', value: data.Seleccion.Compresor_Cop_2 }
       ]
     });
     
     
     $app.touch.notify({ text: 'Modelo encontrado : ' + data.Seleccion.Model, duration: "medium" });   */
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:50:05"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
     
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }                       
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:54:45"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
     
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }  
  this.preventDefault();

  
 });</Script></update></c><c y="NodeSet" t="2022-03-11T09:56:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
       this.preventDefault();
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }  


  
 });</Script></update></c><c y="NodeSet" t="2022-03-11T10:01:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=1 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
  
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }  


  
 });</Script></update></c><c y="NodeSet" t="2022-03-11T10:05:10"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-11T10:05:15"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /><update><HeaderText>Validar</HeaderText></update></c><c y="NodeSet" t="2022-03-11T10:06:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
var Seccion_Capturada=2 //Falta dinamismo
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
  
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }  


  
 });</Script></update></c><c y="NodeSet" t="2022-03-11T10:09:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-11T10:23:33"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var Validar=1 //Determinar que se presiono el boton
validaretiquetas(
    [Etiqueta_Embarque_Detalle_Id]
   ,[Material_Tarima]
   ,[SOrde_SItem_Tarima]
   ,[Delivery_Id]
   ,[SOrde_SItem_Packing_List]
   ,[Delivery_Packing_List]
   ,[Delivery_Dos]
   ,[Cantidad]
   ,[Validar]
   ,[Seccion_Capturada]
 ).done(function(data)
 {
   
 // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
   if (data.rowsAffected == 1){     
     console.log(data);
     
   
     
    
     
     
     $app.input.execute({
       values: [
          { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
        
       ]
     });
     
  
    
   }
   else{
       console.log("ELSE");
       /*

       $app.input.execute({
       values: [
          { name: 'BCUC_Cooling_Capacity', value: null }
         ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
         ,{ name: 'Condensing_Capacity', value: null }
         ,{ name: 'Condensing_Capacity_Conversion', value: null }
         ,{ name: 'Reserve_Capacity', value: null }
         ,{ name: 'Model', value: null }
         ,{ name: 'Compresor_Id_Resultante_1', value: null }
         ,{ name: 'Compresor_Id_Resultante_2', value: null }
         ,{ name: 'Compresor_Capacity_QW_1', value: null }
         ,{ name: 'Compresor_Capacity_QW_2', value: null }
         ,{ name: 'Compresor_Cop_1', value: null }
         ,{ name: 'Compresor_Cop_2', value: null }
       ]
     });
   */ 
   }  


  
 });</Script></update></c><c y="NodeSet" t="2022-03-11T10:27:23"><controller name="Escaneo_Validador_Embarque1" /><field name="Resultado_Validacion" /><update><HtmlEncode>false</HtmlEncode></update></c><c y="NodeSet" t="2022-03-16T14:43:23"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-16T14:46:52"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
      alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt; Actualizar &lt;/h1&gt;&lt;/div&gt;').show();
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-16T14:59:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
      alertify.confirm().setHeader().show(data.Escaneo_Validador_Embarque1.Resultado_Validacion);
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-16T15:01:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
      //alertify.confirm().setHeader().show(data.Escaneo_Validador_Embarque1.Resultado_Validacion);
              alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-16T15:06:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Resultado Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-16T15:09:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-16T15:41:26"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>ExecJS002</CommandName><Phase>After</Phase><Script>g</Script></insert></c><c y="NodeSet" t="2022-03-16T15:41:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><CommandArgument>Calculate</CommandArgument></update></c><c y="NodeSet" t="2022-03-16T15:41:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>console.log('calculate');</Script></update></c><c y="NodeSet" t="2022-03-16T15:43:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><delete /></c><c y="NodeSet" t="2022-03-16T15:44:15"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Calculate</CommandName><Phase>Execute</Phase><Script>console.log('calculate');</Script></insert></c><c y="NodeSet" t="2022-03-16T15:45:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><CommandArgument>ExecJS005</CommandArgument></update></c><c y="NodeSet" t="2022-03-16T15:49:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><delete /></c><c y="NodeSet" t="2022-03-16T15:53:04"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-18T13:44:53"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="MensajeValidacionAplicada" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-18T14:43:36"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Calculate</CommandName><Phase>Execute</Phase><Script>console.log("prueba");</Script></insert></c><c y="NodeSet" t="2022-03-18T14:43:51"><controller name="Escaneo_Validador_Embarque1" /><field name="Seccion_Capturada" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:45:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T14:46:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T14:48:44"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>Code</Type><CommandName>Custom</CommandName><CommandArgument>ExecCS002</CommandArgument><Name>ImplicaSinValidarObligatoriedad</Name><Phase>After</Phase></insert></c><c y="NodeSet" t="2022-03-18T14:52:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T14:58:09"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:58:15"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:58:48"><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Delivery" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:59:03"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionDos" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:59:20"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Dos" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:59:27"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Dos" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T14:59:53"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Packing_List" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:01:23"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionUno" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:02:44"><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Packing_List" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:02:56"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionTres" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:03:10"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Tres" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:03:14"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Tres" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:03:22"><controller name="Escaneo_Validador_Embarque1" /><field name="Cantidad_Material" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-03-18T15:15:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

var _Valida_Campo_Null=0;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    console.log("prueba"+_Valida_Campo_Null);
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:16:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

var _Valida_Campo_Null=0;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
   
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:17:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

var _ValidaCampoNull=0;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
   
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:18:27"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>//console.log("prueba");
this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;



if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
   
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:20:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
   
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
       
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:20:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
  if(_Folio_Etiqueta_Embarque==null
     {_Valida_Campo_Null=1}
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
   
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 0;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
       
   }   });

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:21:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>h</Script></update></c><c y="NodeSet" t="2022-03-18T15:22:23"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:25:05"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

var _Validar = 1;

if(_Folio_Etiqueta_Embarque == null)
  {
console.log("es null");
}

validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-18T15:29:45"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null)
  	{
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}
if(_Validar=1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:31:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}
if(_Validar=1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:32:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:45:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null )
  	{console.log("null etiqueta t delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:49:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:55:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima==null ||_Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:57:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null &amp;&amp; (_SOrden_SItem_Tarima==null ||_Material_Tarima==null) )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:58:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null &amp;&amp; SOrden_SItem_Tarima==null ||_Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T15:59:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null &amp;&amp; _SOrden_SItem_Tarima==null ||_Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:13:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_SOrden_SItem_Tarima == null|| _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:17:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery==null  )
  	{console.log("null etiqueta y delivery");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:21:11"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _Delivery == null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:23:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:27:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null ||Delivery !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:29:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null ||_Delivery !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:31:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null ||_Delivery !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null )
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	else
       _Validar = 1;
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:34:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:36:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null )
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:38:13"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:43:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:46:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp; &amp;&amp; _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:46:52"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-18T16:56:08"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a3" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-18T16:57:41"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a8" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-18T16:57:53"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag6" /><action id="a4" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-18T16:58:42"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag8" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-22T11:06:49"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /><update><HeaderText>"Validar"</HeaderText></update></c><c y="NodeSet" t="2022-03-22T13:53:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");
       } else {
         console.log  ("No es numérico");
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-22T14:05:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");
    this.result.focus('_Folio_Etiqueta_Embarque', 'El tipo de dato requerido es númerico.');
       } else {
         console.log  ("No es numérico");
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-22T14:05:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('_Folio_Etiqueta_Embarque', 'El tipo de dato requerido es númerico.');
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-22T14:07:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque', 'El tipo de dato requerido es númerico.');
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-22T14:07:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque', 'El tipo de dato requerido es númerico.');
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-22T14:08:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:25:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/\b([0-9]{9})\b/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( _SOrden_SItem_Tarima.match(solin)
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:25:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/\b([0-9]{9})\b/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( _SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:28:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/([0-9]{9})/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( _SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:29:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}+$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( _SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:30:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( _SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:36:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (Folio_Etiqueta_Embarque_SeccionUno.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if( SOrde_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:37:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:38:48"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== null &amp;&amp; _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:40:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== null)
    {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:44:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:47:44"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^[0-9]{9}+\s +$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:48:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^([0-9]{9})+\s +$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:56:34"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^([0-9]{9}+)\s +$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T09:57:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var solin=/^([0-9]{9}) +$/;

if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }

    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
  if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
  	{console.log("null pack");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
}
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T10:04:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;


if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else 
    {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  
  if(_SOrden_SItem_Tarima.match=== undefined)
    {
      console.log ("Variable sin definir");
    }
  else
    {
      if(_SOrden_SItem_Tarima.includes('/')
      {
      console.log ("Contiene diagonal");
   	 }
  if(_SOrden_SItem_Tarima.match(solin)){
     
          console.log ("Es SO/Lin Valida");  
       } 
  else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
}
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

</Script></update></c><c y="NodeSet" t="2022-03-23T10:04:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;


if(_Seccion_Capturada === 1){
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }else 
    {
    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
          console.log ("Es numérico");  
       } else {
         console.log  ("No es numérico");
         this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
   }
  
  if(_SOrden_SItem_Tarima.match=== undefined)
    {
      console.log ("Variable sin definir");
    }
  else
    {
      if(_SOrden_SItem_Tarima.includes('/')
      {
      console.log ("Contiene diagonal");
   	 }
  if(_SOrden_SItem_Tarima.match(soloNumeros)){
     
          console.log ("Es SO/Lin Valida");  
       } 
  else {
         console.log  ("Errror");
        // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
      }
}
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}

</Script></update></c><c y="NodeSet" t="2022-03-23T10:07:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }
    else 
        {
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        }
  
  if(_SOrden_SItem_Tarima.match=== undefined)
    {
      console.log ("Variable sin definir");
    }
  else
    {
            if(_SOrden_SItem_Tarima.includes('/')===true)
            {
            console.log ("Contiene diagonal");
            }
        if(_SOrden_SItem_Tarima.match(soloNumeros)){
            
                console.log ("Es SO/Lin Valida");  
            } 
        else {
                console.log  ("Errror");
                // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}//if(_Seccion_Capturada === 1)



</Script></update></c><c y="NodeSet" t="2022-03-23T10:09:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }
    else 
        {
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        }
  
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
      console.log ("Variable sin definir");
    }
  else
    {
            if(_SOrden_SItem_Tarima.includes('/')===true)
            {
            console.log ("Contiene diagonal");
            }
        if(_SOrden_SItem_Tarima.match(soloNumeros)){
            
                console.log ("Es SO/Lin Valida");  
            } 
        else {
                console.log  ("Errror");
                // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}//if(_Seccion_Capturada === 1)



</Script></update></c><c y="NodeSet" t="2022-03-23T10:10:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque === undefined)
    { console.log ("Variable sin definir");
    }
    else 
        {
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        }
  
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
      console.log ("Variable dif definir");
    }
  else
    {
            if(_SOrden_SItem_Tarima.includes('/')===true)
            {
            console.log ("Contiene diagonal");
            }
        if(_SOrden_SItem_Tarima.match(soloNumeros)){
            
                console.log ("Es SO/Lin Valida");  
            } 
        else {
                console.log  ("Errror");
                // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    }
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}//if(_Seccion_Capturada === 1)



</Script></update></c><c y="NodeSet" t="2022-03-23T10:17:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
     // console.log ("Variable definida");
        if(_SOrden_SItem_Tarima.includes('/')===true )
        {
        console.log ("Contiene diagonal");
        console.log(_SOrden_SItem_Tarima.replace(/ /g, ""));
        console.log((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', ""));
        }
    if(_SOrden_SItem_Tarima.match(soloNumeros)){
        
            console.log ("Es SO/Lin Valida");  
        } 
    else {
            console.log  ("Errror");
            // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
        }
    }
  
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}//if(_Seccion_Capturada === 1)



</Script></update></c><c y="NodeSet" t="2022-03-23T10:20:12"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
     // console.log ("Variable definida");
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
        console.log ("Contiene diagonal");
        console.log(_SOrden_SItem_Tarima.replace(/ /g, ""));
        console.log("valido");
        }
    
    else {
            console.log  ("Errror");
            // this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
        }
    }
  
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  
}//if(_Seccion_Capturada === 1)

</Script></update></c><c y="NodeSet" t="2022-03-23T10:29:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima.match !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &gt;18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

</Script></update></c><c y="NodeSet" t="2022-03-23T10:29:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima.match !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

</Script></update></c><c y="NodeSet" t="2022-03-23T10:30:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima.match !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

</Script></update></c><c y="NodeSet" t="2022-03-23T10:32:44"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima.match !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima.match', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:33:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima.match', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:34:59"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
      console.log("material);
                  console.log(_Material_Tarima.lengh);
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima.match', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:36:11"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
      console.log("material");
                  console.log(_Material_Tarima.lengh);
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima.match', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:38:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
      console.log("material");
                  console.log("material " +_Material_Tarima.lengh);
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.lengh &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:41:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[a-zA-Z][0-9]$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
      console.log("material");
                  console.log("material " +_Material_Tarima.length);
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:44:05"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;

if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
      console.log("material");
                  console.log("material " +_Material_Tarima.length);
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            console.log  ("No es numérico");
            this.result.focus('_Material_Tarima', 'El tipo de dato requerido es alfanumerico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
</Script></update></c><c y="NodeSet" t="2022-03-23T10:46:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

</Script></update></c><c y="NodeSet" t="2022-03-23T11:14:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){

</Script></update></c><c y="NodeSet" t="2022-03-23T11:16:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){

</Script></update></c><c y="NodeSet" t="2022-03-23T11:20:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{
      $app.touch.notify('Last Name "Smith" is not allowed.');
     
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){

</Script></update></c><c y="NodeSet" t="2022-03-23T11:24:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{
      //$app.touch.notify('.');
     
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){

</Script></update></c><c y="NodeSet" t="2022-03-23T11:27:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{
      //$app.touch.notify('.');
      $app.alert ( 'No se permite el apellido "Smith".' );
     
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){

</Script></update></c><c y="NodeSet" t="2022-03-23T11:30:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
           
            this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){
</Script></update></c><c y="NodeSet" t="2022-03-23T11:35:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){
}</Script></update></c><c y="NodeSet" t="2022-03-23T11:37:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)
  	</Script></update></c><c y="NodeSet" t="2022-03-23T11:40:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){
  	</Script></update></c><c y="NodeSet" t="2022-03-23T11:49:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){
if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery .match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { //console.log ("Variable sin definir");
                    if(  _Delivery .match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
  	</Script></update></c><c y="NodeSet" t="2022-03-23T11:59:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){
if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery .match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery .match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
</Script></update></c><c y="NodeSet" t="2022-03-23T12:01:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List .match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery .match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
</Script></update></c><c y="NodeSet" t="2022-03-23T12:04:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery .match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List .match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery .match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
</Script></update></c><c y="NodeSet" t="2022-03-23T12:05:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
</Script></update></c><c y="NodeSet" t="2022-03-23T12:23:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   if(_Cantidad !== undefined)
            {
                if(_Cantidad.match(alfanumerico)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Cantidad es numerico.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
</Script></update></c><c y="NodeSet" t="2022-03-23T12:25:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   if(_Cantidad !== undefined)
            {
                if(_Cantidad.match(alfanumerico)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Cantidad es numerico.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T12:27:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   if(_Cantidad !== undefined)
            {
                if(_Cantidad.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Cantidad es numerico.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T12:38:04"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T14:27:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>//hh</Script></update></c><c y="NodeSet" t="2022-03-23T14:29:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-23T14:31:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
     else{
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:32:22"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:34:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque !== null &amp;&amp;_SOrden_SItem_Tarima !== null&amp;&amp; _Material_Tarima!==null)
  	{
      _Validar = 1;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:37:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
  else  _Validar = 0;
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque !== null &amp;&amp;_SOrden_SItem_Tarima !== null&amp;&amp; _Material_Tarima!==null)
  	{
      _Validar = 1;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:38:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
  
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque !== undefined &amp;&amp;_SOrden_SItem_Tarima !== undefined&amp;&amp; _Material_Tarima!==undefined)
  	{
      _Validar = 1;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:39:48"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
  
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
   if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-23T14:51:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;

if(_Seccion_Capturada !== undefined)
{
if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
  
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
   if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,1
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)
else
    {
       $app.alert ( '´Capture la información requerida para la validación.');  
        
   }  
}//if(_Seccion_Capturada !== undefined)
else
    {
       $app.alert ( 'Indique la validación que desea aplicar.');  
        
   }  </Script></update></c><c y="NodeSet" t="2022-03-24T15:00:48"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T15:02:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-24T15:44:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              ,{ name: 'Resultado_Validacion', value: null }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              ,{ name: 'Resultado_Validacion', value: null }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              ,{ name: 'Resultado_Validacion', value: null }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-24T15:48:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-24T15:51:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                                  $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-24T16:32:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-25T10:44:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 3.- Generar la transacción
// 
// var Nueva_Transaccion = eaton.createGuid();

/*
$app.execute({
  controller: 'Escaneo_Validador_Embarque1'
  ,command: 'Insert'
  ,values: [            
      { name: 'Escaneo_Validador_Embarque_Id', value: null }
      ,{ name: 'Seccion_Capturada', newValue: 1 }
      ,{ name: 'Material_Tarima', newValue: '' } 
      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
      ,{ name: 'Transaccion_Escaneo', newValue: Nueva_Transaccion }
  ]
  ,done: function (result) {
      fnDebug(result);
      // $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
      $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
          ,{ name: 'Transaccion_Escaneo', value: Nueva_Transaccion }
          ,{ name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
        ]
      });
  }
});

*/

$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', null);

$app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });


fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-25T10:57:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 3.- Generar la transacción
// 
// var Nueva_Transaccion = eaton.createGuid();

/*
$app.execute({
  controller: 'Escaneo_Validador_Embarque1'
  ,command: 'Insert'
  ,values: [            
      { name: 'Escaneo_Validador_Embarque_Id', value: null }
      ,{ name: 'Seccion_Capturada', newValue: 1 }
      ,{ name: 'Material_Tarima', newValue: '' } 
      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
      ,{ name: 'Transaccion_Escaneo', newValue: Nueva_Transaccion }
  ]
  ,done: function (result) {
      fnDebug(result);
      // $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
      $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
          ,{ name: 'Transaccion_Escaneo', value: Nueva_Transaccion }
          ,{ name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
        ]
      });
  }
});

*/
var Nueva_Transaccion = eaton.createGuid();
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', Nueva_Transaccion);

$app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });


fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-25T11:11:42"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   -- AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-25T11:13:46"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists_Transaccion = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   -- AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-25T11:15:11"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists_Transaccion = 0 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   -- AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-25T11:21:45"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-25T11:21:50"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-25T11:48:56"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-25T12:02:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                                  $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
                    	*/

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                         $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                                  ]
                                });
                        /*
                    	$app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                                  ]
                                });
                            }
                        });
						*/
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
						*/
                    
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-25T12:05:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Folio_Escaneo_Id', value: null }

                                  ]
                                });
                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                                  $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
                    	*/

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                         $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Folio_Escaneo_Id', value: null }

                                  ]
                                });
                        /*
                    	$app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                                  ]
                                });
                            }
                        });
						*/
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;
$app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }
                                   , { name: 'Folio_Escaneo_Id', value: null }

                                  ]
                                });
                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
						*/
                    
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-25T14:59:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 &amp;&amp; data.Escaneo_Validador_Embarque1.Resultado_Validacion==='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;'
      {
         console.log("Termino");
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:00:30"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 &amp;&amp; data.Escaneo_Validador_Embarque1.Resultado_Validacion==='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;')
      {
         console.log("Termino");
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:02:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 )
      {
         console.log("Termino");
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:04:48"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 )
      {
         console.log("Termino");
        if(data.Escaneo_Validador_Embarque1.Resultado_Validacion=='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;' )
          {
           }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:08:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 )
      {
         console.log("Termino");
        var msj='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
        console.log(msj);
        if(data.Escaneo_Validador_Embarque1.Resultado_Validacion==msj)
           {
               console.log("Termino comparativa");
        }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:10:30"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 )
      {
         console.log("Termino");
        var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion;
        console.log(msj);
        if(data.Escaneo_Validador_Embarque1.Resultado_Validacion==msj)
           {
               console.log("Termino comparativa");
        }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:13:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjS1='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1 &amp;&amp; data.Escaneo_Validador_Embarque1.Resultado_Validacion==msjS1 )
      {
         console.log("Termino Seccion 1");
       
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:15:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjS1='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1)
      {
        if( data.Escaneo_Validador_Embarque1.Resultado_Validacion==msjS1)
         { 
         console.log("Termino Seccion 1");
       }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:17:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjS1='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1)
      {
        console.log("Termino 1");
        if( msj==msjS1)
         { 
         console.log("Termino Seccion 1");
       }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:21:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){    
      console.log(data);
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjS1='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1)
      {
        console.log("Termino 1");
        if( msj==msjS1)
         { 
         console.log("Termino Seccion 1");
       }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:24:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){    
      console.log(data);
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjSuno='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 1 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
console.log(msj);
      
      console.log(msjSuno);
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1)
      {
        console.log("Termino 1");
        if( msj==msjSuno)
         { 
         console.log("Termino Seccion 1");
       }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:26:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){    
      console.log(data);
         var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; //Msj de BD
      var msjSuno='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;
Validación 1 completada exitosamente.
&lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
console.log(msj);
      
      console.log(msjSuno);
       var msjS2='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 2 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
       var msjS3='&lt;div id="rcorrecto" style="background-color: #96d074;"&gt; &lt;strong&gt; &lt;ul&gt;  Validación 3 completada exitosamente.  &lt;/ul&gt; &lt;/strong&gt; &lt;/div&gt;';
      
      if(data.Escaneo_Validador_Embarque1.Seccion_Capturada===1)
      {
        console.log("Termino 1");
        if( msj==msjSuno)
         { 
         console.log("Termino Seccion 1");
       }
      }
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:30:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; 
      if(msj.includes('exitosamente')
       {
         console.log("exitosamente");
      }// if(msj.includes('/')
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:32:44"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; 
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:33:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; 
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:33:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; 
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:34:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      var msj=data.Escaneo_Validador_Embarque1.Resultado_Validacion; 
      console.log(data);
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:35:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:36:40"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Mensaje_Sistema_Id" /></move></c><c y="NodeSet" t="2022-03-25T15:39:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
     console.log(data);
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:40:52"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
     console.log(data);
      
      if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           console.log("limpiar");
        }
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:47:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
     console.log(data);
      
      if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           //console.log("limpiar");
        }
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-25T15:48:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
     console.log(data);
      
      if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           //console.log("limpiar");
           $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });

        }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
      else
        {
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
          
        }
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-28T14:43:34"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                         { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                      	,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                		,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-28T14:44:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
          _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { //console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                     // console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {//console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){
     console.log(data);
      
      if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           //console.log("limpiar");
           $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });

        }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
      else
        {
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
          
        }
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-28T14:50:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
              /*  console.log(data);
                $app.input.execute({
                    values: [
                         { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                      	,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                		,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();*/
                   if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           //console.log("limpiar");
           $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });

        }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
      else
        {
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
          
        }
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }//if (data.rowsAffected==!)
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-28T15:11:57"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T15:13:10"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T15:15:09"><controller name="Escaneo_Validador_Embarque1" /><field name="Etiqueta_Embarque_Detalle_Id" /><update><ItemsNewDataView /></update></c><c y="NodeSet" t="2022-03-28T15:23:56"><controller name="Escaneo_Validador_Embarque1" /><field name="Resultado_Validacion_Embarque_Id" /><update><ItemsNewDataView /></update></c><c y="NodeSet" t="2022-03-28T15:24:54"><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Id" /><update><ItemsNewDataView /></update></c><c y="NodeSet" t="2022-03-28T15:36:21"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><HeaderText>Evidencias y comentarios</HeaderText><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T15:38:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T11:30:23"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T11:31:39"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><insert type="category"><HeaderText>Evidencias</HeaderText></insert></c><c y="NodeSet" t="2022-03-30T11:31:49"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T11:37:48"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T11:37:58"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T11:38:35"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T11:44:18"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><HeaderText>Evidencias y comentarios</HeaderText><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T11:47:30"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T11:47:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T11:54:11"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>//$app.touch.contextDataView().discard();
$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T11:56:27"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>$app.touch.contextDataView().discard();
//$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T12:04:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /></move></c><c y="NodeSet" t="2022-03-30T12:05:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /></move></c><c y="NodeSet" t="2022-03-30T12:05:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /></move></c><c y="NodeSet" t="2022-03-30T12:05:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /></move></c><c y="NodeSet" t="2022-03-30T12:20:20"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS007</CommandArgument><HeaderText>"Regresar"</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>Edit</WhenLastCommandName></insert></c><c y="NodeSet" t="2022-03-30T12:21:21"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><WhenLastCommandArgument>editForm1</WhenLastCommandArgument></update></c><c y="NodeSet" t="2022-03-30T12:22:46"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><Roles>UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-30T12:25:22"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><Roles>Administrador,AdministradorEmbarques,UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-30T12:27:06"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandName>Edit</CommandName></update></c><c y="NodeSet" t="2022-03-30T12:27:41"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><delete /></c><c y="NodeSet" t="2022-03-30T12:28:12"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Edit</CommandName><HeaderText>"Regresar"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-30T12:28:51"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandArgument>ExecJS007</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T12:30:58"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><CommandArgument>ExecJS008</CommandArgument><Phase>Execute</Phase><Script>ww</Script></insert></c><c y="NodeSet" t="2022-03-30T12:31:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T12:31:24"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandArgument>ExecJS008</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T12:31:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>$app.touch.contextDataView().cancel();
console.log("prueba");</Script></update></c><c y="NodeSet" t="2022-03-30T12:32:57"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><delete /></c><c y="NodeSet" t="2022-03-30T12:33:37"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Edit</CommandName><CommandArgument>ExecJS008</CommandArgument><HeaderText>"Regresar"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-30T12:34:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>//$app.touch.contextDataView().cancel();
console.log("prueba");</Script></update></c><c y="NodeSet" t="2022-03-30T12:37:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2022-03-30T12:38:29"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><delete /></c><c y="NodeSet" t="2022-03-30T12:38:47"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Edit</CommandName><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-30T12:39:06"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandArgument>ExecJS007</CommandArgument><HeaderText>regresar</HeaderText></update></c><c y="NodeSet" t="2022-03-30T12:47:16"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandName>Cancel</CommandName><WhenLastCommandName>Edit</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-30T12:48:00"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandArgument /></update></c><c y="NodeSet" t="2022-03-30T12:48:39"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandName>Edit</CommandName></update></c><c y="NodeSet" t="2022-03-30T12:48:45"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><WhenLastCommandName /></update></c><c y="NodeSet" t="2022-03-30T12:49:37"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandName>Custom</CommandName><WhenLastCommandName>Edit</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-30T12:50:20"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><WhenLastCommandArgument>editForm1</WhenLastCommandArgument></update></c><c y="NodeSet" t="2022-03-30T12:50:41"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><WhenLastCommandName>Select</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-30T12:51:34"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><CommandArgument>ExecJS007</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T12:52:55"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a105" /><update><HeaderText>"regresar"</HeaderText></update></c><c y="NodeSet" t="2022-04-01T14:26:40"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm1" /><copy><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm1" /></copy></c><c y="NodeSet" t="2022-04-01T14:26:53"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="v100" /><rename>editForm2</rename></c><c y="NodeSet" t="2022-04-01T14:27:04"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm2" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-04-01T14:27:37"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="EscaneoValidadorEmbarqueId" /><update><Label>Escaneo Validador Embarque</Label><ItemsStyle>Lookup</ItemsStyle><ItemsDataController>Escaneo_Validador_Embarque1</ItemsDataController><ItemsDataView>Escaneo_Validador_Embarque_LookUp_List</ItemsDataView><ItemsDataValueField>Escaneo_Validador_Embarque_Id</ItemsDataValueField><ItemsDataTextField>Escaneo_Validador_Embarque_Id</ItemsDataTextField></update></c><c y="NodeSet" t="2022-04-01T14:28:47"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Creado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:47"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:47"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:47"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:47"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:48"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:48"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Transaccion_Escaneo" /><delete /></c><c y="NodeSet" t="2022-04-01T14:28:58"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id" /></move></c><c y="NodeSet" t="2022-04-01T14:29:03"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Seccion_Capturada" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /></before></c><c y="NodeSet" t="2022-04-01T14:29:30"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm1',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
//Calculate</Script></update></c><c y="NodeSet" t="2022-04-01T14:29:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm1',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
//Calculate</Script></update></c><c y="NodeSet" t="2022-04-01T14:29:51"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm2" /><delete /></c><c y="NodeSet" t="2022-04-01T14:29:53"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><copy><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /></copy></c><c y="NodeSet" t="2022-04-01T14:30:04"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="v100" /><rename>createForm2</rename></c><c y="NodeSet" t="2022-04-01T14:30:07"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-04-01T14:30:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
//Calculate</Script></update></c><c y="NodeSet" t="2022-04-01T14:30:29"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><category id="c1" /><dataField fieldName="Comentario" /><before><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><category id="c1" /><dataField fieldName="EscaneoValidadorEmbarqueId" /></before></c><c y="NodeSet" t="2022-04-01T14:30:38"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><dataField fieldName="EscaneoValidadorEmbarqueId" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-01T14:38:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm1',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T14:38:52"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><dataField fieldName="EscaneoValidadorEmbarqueId" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-01T14:39:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T14:41:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
//Calculate</Script></update></c><c y="NodeSet" t="2022-04-01T14:42:52"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><dataField fieldName="EscaneoValidadorEmbarqueId" /><update><ReadOnly /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-01T14:45:11"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><dataField fieldName="EscaneoValidadorEmbarqueId" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-01T14:50:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T14:53:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T14:55:48"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Comentario" /><before><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="EscaneoValidadorEmbarqueId" /></before></c><c y="NodeSet" t="2022-04-01T15:06:15"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Comentario" /><before><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="EscaneoValidadorEmbarqueId" /></before></c><c y="NodeSet" t="2022-04-20T13:49:20"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Order_Uno</Name><Type>Int16</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Order</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T13:49:51"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Item_Uno</Name><Type>Int16</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Item</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T13:50:53"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /></move></c><c y="NodeSet" t="2022-04-20T13:50:55"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /></move></c><c y="NodeSet" t="2022-04-20T13:52:54"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Sales_Order_Uno" /><delete /></c><c y="NodeSet" t="2022-04-20T13:52:55"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Sales_Item_Uno" /><delete /></c><c y="NodeSet" t="2022-04-20T13:53:04"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /></move></c><c y="NodeSet" t="2022-04-20T13:53:04"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /></move></c><c y="NodeSet" t="2022-04-20T13:54:54"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Label>Sales Order (Tarima)</Label></update></c><c y="NodeSet" t="2022-04-20T13:55:03"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Label>Sales Item (Tarima)</Label></update></c><c y="NodeSet" t="2022-04-20T13:55:43"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-04-20T13:55:50"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-04-20T14:08:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Uno' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Uno' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:16:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order];
        _Sales_Item_Uno=[Sales_Item];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:20:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order];
        _Sales_Item_Uno=[Sales_Item];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:24:30"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order];
        _Sales_Item_Uno=[Sales_Item];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:26:14"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Type>String</Type><Length>250</Length></update></c><c y="NodeSet" t="2022-04-20T14:26:23"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Type>String</Type><Length>250</Length></update></c><c y="NodeSet" t="2022-04-20T14:28:56"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Length /></update></c><c y="NodeSet" t="2022-04-20T14:29:03"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Length /></update></c><c y="NodeSet" t="2022-04-20T14:30:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:30:35"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Type>UInt64</Type></update></c><c y="NodeSet" t="2022-04-20T14:30:45"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Type>Int64</Type></update></c><c y="NodeSet" t="2022-04-20T14:30:50"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Type>UInt64</Type></update></c><c y="NodeSet" t="2022-04-20T14:30:53"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-04-20T14:33:52"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Uno" /><update><Type>String</Type></update></c><c y="NodeSet" t="2022-04-20T14:35:15"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Type>String</Type></update></c><c y="NodeSet" t="2022-04-20T14:35:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:52:12"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-20T14:53:00"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-20T14:57:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:58:44"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T14:58:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:00:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            console.log(_Sales_Order_Uno);
            console.log(_Sales_Item_Uno);
            console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:02:35"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Order_Dos</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Order (Tarima)</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:02:57"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Item_Dos</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>true</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Item Dos</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:03:06"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Dos" /><update><IsVirtual>true</IsVirtual><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2022-04-20T15:03:20"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Dos" /><update><Label>Sales Item (Tarima)</Label></update></c><c y="NodeSet" t="2022-04-20T15:03:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Dos" /></move></c><c y="NodeSet" t="2022-04-20T15:03:41"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Dos" /></move></c><c y="NodeSet" t="2022-04-20T15:04:46"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Sales_Item_Dos" /></move></c><c y="NodeSet" t="2022-04-20T15:10:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Uno=[Sales_Item_Dos];
        _Sales_Order_Uno=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:15:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Order");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                console.log("Es numérica la Sales Item");
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined )
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:19:37"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-20T15:22:01"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Order_Tres</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>true</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Order (Tarima)</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:22:22"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Item_Tres</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>true</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Item (Tarima)</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:22:54"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima_Tres" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-20T15:22:59"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Tres" /></move></c><c y="NodeSet" t="2022-04-20T15:22:59"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Tres" /></move></c><c y="NodeSet" t="2022-04-20T15:28:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:28:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:29:21"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Order_Packing</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>true</CausesCalculate><OnDemand>false</OnDemand><Label>Sales Order Packing</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:30:07"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Sales_Item_Packing</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>true</CausesCalculate><OnDemand>false</OnDemand><Label>Sales_Item_Packing</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-20T15:30:15"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:15"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Order_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:20"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Sales_Order_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:20"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Sales_Item_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:27"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Packing_List" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-20T15:30:30"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:34"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Packing" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Item_Packing" /></move></c><c y="NodeSet" t="2022-04-20T15:30:42"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="SOrde_SItem_Tarima_Tres" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Tres" /></move></c><c y="NodeSet" t="2022-04-20T15:30:45"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Tres" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Item_Tres" /></move></c><c y="NodeSet" t="2022-04-20T15:35:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-20T15:49:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

       /*     if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
           /* if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-20T15:50:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

       /*     if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
           /* if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-23T16:03:47"><controller name="Escaneo_Validador_Embarque1" /><clone /></c><c y="NodeSet" t="2022-05-23T16:07:13"><controller name="Escaneo_Validador_Embarque1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Seccion_Capturada &gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r102" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r103" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r104" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r105" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r106" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r107" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:34"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r110" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:35"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:35"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r108" /><delete /></c><c y="NodeSet" t="2022-05-23T16:15:56"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a101" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:16:04"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a103" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:16:10"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a102" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:16:21"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a106" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:16:34"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a109" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:16:49"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag3" /><action id="a300" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:20:35"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a1" /><update><WhenClientScript /></update></c><c y="NodeSet" t="2022-05-23T16:20:44"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript /></update></c><c y="NodeSet" t="2022-05-23T16:20:55"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript /></update></c><c y="NodeSet" t="2022-05-23T16:21:03"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag1" /><action id="a2" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:21:25"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag4" /><action id="a1" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:21:29"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript /></update></c><c y="NodeSet" t="2022-05-23T16:21:41"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag9" /><action id="a1" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:21:48"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript /></update></c><c y="NodeSet" t="2022-05-23T16:29:45"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag3" /><action id="a1" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:30:59"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a14" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:32:11"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:34:43"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a4" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-23T16:36:11"><controller name="Escaneo_Validador_Embarque1_1" /><copy><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /></copy></c><c y="NodeSet" t="2022-05-23T16:36:15"><controller name="Escaneo_Validador_Embarque1_1" /><copy><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /></copy></c><c y="NodeSet" t="2022-05-23T16:41:39"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2022-05-23T16:41:44"><controller name="Escaneo_Validador_Embarque1_1" /><rule id="r108" /><delete /></c><c y="NodeSet" t="2022-05-23T16:58:00"><controller name="Escaneo_Validador_Embarque1_1" /><field name="Folio_Etiqueta_Embarque_SeccionTres" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-05-23T16:58:09"><controller name="Escaneo_Validador_Embarque1_1" /><field name="Delivery_SeccionTres" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-05-23T17:04:57"><controller name="Escaneo_Validador_Embarque1_1" /><copy><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /></copy></c><c y="NodeSet" t="2022-05-23T17:04:57"><controller name="Escaneo_Validador_Embarque1_1" /><copy><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /></copy></c><c y="NodeSet" t="2022-05-23T17:05:12"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T17:05:24"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a4" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T17:05:30"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T17:05:39"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T17:05:45"><controller name="Escaneo_Validador_Embarque1_1" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T17:14:34"><controller name="Escaneo_Validador_Embarque" /><insert type="field"><Name>Folio_Escaneo_Validador_Embarque</Name><Type>Int64</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Formula>"Escaneo_Validador_Embarque"."Escaneo_Validador_Embarque_Id"</Formula><Calculated>true</Calculated><CodeFormula>"Escaneo_Validador_Embarque"."Escaneo_Validador_Embarque_Id"</CodeFormula><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Escaneo Validador Embarque</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-05-23T17:14:39"><controller name="Escaneo_Validador_Embarque" /><move><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-05-23T17:14:45"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-05-23T17:14:49"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Folio_Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-05-23T17:14:54"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /><before><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Folio_Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-05-23T17:15:06"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-05-23T17:15:09"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Seccion_Capturada" /><before><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Folio_Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-05-23T17:16:17"><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2022-05-23T17:16:40"><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /><update><AllowNulls>false</AllowNulls><Computed>true</Computed><Calculated>false</Calculated></update></c><c y="NodeSet" t="2022-05-23T17:18:13"><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /><update><IsVirtual>false</IsVirtual></update></c><c y="NodeSet" t="2022-05-23T17:19:14"><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo_Validador_Embarque" /><delete /></c><c y="NodeSet" t="2022-05-23T17:20:09"><controller name="Escaneo_Validador_Embarque" /><copy><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Escaneo" /></copy></c><c y="NodeSet" t="2022-05-23T17:20:41"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo" /></move></c><c y="NodeSet" t="2022-05-23T17:20:45"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /><before><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Folio_Escaneo" /></before></c><c y="NodeSet" t="2022-05-23T17:21:31"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><move><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /></move></c><c y="NodeSet" t="2022-05-23T17:21:48"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><move><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo" /></move></c><c y="NodeSet" t="2022-05-23T17:21:54"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Seccion_Capturada" /><before><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Folio_Escaneo" /></before></c><c y="NodeSet" t="2022-05-23T17:23:05"><controller name="Escaneo_Validador_Embarque" /><field name="Folio_Escaneo" /><update><Label>Folio Escaneo Validador Embarque</Label></update></c><c y="NodeSet" t="2022-05-30T15:57:33"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Cantidad==null||_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

            if(_Cantidad==null||_Cantidad==0)
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
            }//
        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-30T15:57:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Cantidad==null||_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

            if(_Cantidad==null||_Cantidad==0)
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
            }//
        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-30T16:13:22"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-30T16:13:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-30T16:17:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
        }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-30T16:24:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
        }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-30T16:27:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
        }//
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:10:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:33:05"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; SOrden_SItem_PackingLIst!==null &amp;&amp; _Sales_Item_Packing !==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null|| _Cantidad==0)
                {
                console.log('Falta cantidad');
                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:41:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; SOrden_SItem_PackingLIst!==null &amp;&amp; _Sales_Item_Packing !==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null|| _Cantidad==0)
                {
                console.log('Falta cantidad');
                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:45:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null|| _Cantidad==0)
                {
                console.log('Falta cantidad');
                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:51:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==!undefined)
                {
                console.log('Falta cantidad');
                if(_Cantidad==null)
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad para finalizar el escaneo en curso.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                }
                
                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T09:54:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad para finalizar el escaneo en curso.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-31T11:46:12"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T13:40:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T13:40:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T13:59:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt; &lt;br&gt;&lt;strong&gt;Para iniciar un nuevo escaneo favor de cerrar esta ventana.&lt;/strong&gt;&lt;/strong&gt;&lt;/br&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T13:59:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt; &lt;br&gt;&lt;strong&gt;Para iniciar un nuevo escaneo favor de cerrar esta ventana.&lt;/strong&gt;&lt;/strong&gt;&lt;/br&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T14:04:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt;Para generar un nuevo escaneo cierre ventana y vuelva a dar clic en Nuevo escaneo &lt;/strong&gt;'+' &lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T14:06:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre ventana y vuelva a dar clic en Nuevo escaneo &lt;/strong&gt;&lt;/br&gt;'+' &lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T14:22:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        var txt;

                        if(viewName == 'FormNuevo') {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo favor de dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }
                        else
                        {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre la ventana y vuelva a dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion +txt+' &lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T14:22:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

        if(_Cantidad==!undefined &amp;&amp; _Cantidad!==null)
        {
        if(_Cantidad==null||_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        }
        if(_Cantidad==0)
        {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'La cantidad especificada no puede ser cero.');
            $app.input.focus({ fieldName: 'Cantidad_Material' });
        }//
        //Ultimo filtro determinar si solo le falta capturar la cantidad
        if(_Folio_Etiqueta_Embarque !==null &amp;&amp; _Folio_Etiqueta_Embarque !==undefined
            &amp;&amp; _Material_Tarima !==null &amp;&amp; _Material_Tarima!==undefined
            &amp;&amp;  _SOrden_SItem_Tarima!==null &amp;&amp; _SOrden_SItem_Tarima !==undefined
            &amp;&amp; _Delivery !==null &amp;&amp; _Delivery!==undefined
            &amp;&amp; _SOrden_SItem_PackingLIst!==null &amp;&amp; _SOrden_SItem_PackingLIst!==undefined 
            &amp;&amp; _Delivery_Packing_List !==null &amp;&amp; _Delivery_Packing_List !==undefined
            )
            {
               console.log('IF de todo completo?');
                //Significa que ya todos los canmpos contienen info falta cantidad
                if(_Cantidad==undefined ||_Cantidad==null )
                {
                
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad.');
                    $app.input.focus({ fieldName: 'Cantidad_Material' });
                

                }
            }

            if(_SOrden_SItem_PackingLIst==null|| _SOrden_SItem_PackingLIst==undefined &amp;&amp; _Delivery==null || _Delivery==undefined)
            {
                // si los datos no estan completos debe impedir que ejecute el sp 
                _Validar = 0;
            }
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        var txt;

                        if(viewName == 'FormNuevo') {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo favor de dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }
                        else
                        {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre la ventana y vuelva a dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion +txt+' &lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-06-02T15:22:43"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Cantidad==null||_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

            if(_Cantidad==null||_Cantidad==0)
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
            }//
        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        var txt;

                        if(viewName == 'FormNuevo') {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo favor de dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }
                        else
                        {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre la ventana y vuelva a dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion +txt+ '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-06-02T15:22:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Cantidad==null||_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

            if(_Cantidad==null||_Cantidad==0)
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
            }//
        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        var txt;

                        if(viewName == 'FormNuevo') {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo favor de dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }
                        else
                        {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre la ventana y vuelva a dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion +txt+ '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-06-02T15:26:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Cantidad==null||_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

            if(_Cantidad==null||_Cantidad==0)
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Favor de especificar la cantidad de packing list');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
            }//
        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        var txt;

                        if(viewName == 'FormNuevo') {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo favor de dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }
                        else
                        {
                            txt='&lt;br&gt;&lt;strong&gt;Para generar un nuevo escaneo cierre la ventana y vuelva a dar clic en "Nuevo escaneo". &lt;/strong&gt;&lt;/br&gt;'
                        }

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion +txt+ '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-06-06T16:16:50"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editForm1</CommandArgument></update></c><c y="NodeSet" t="2022-06-06T16:20:08"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><HeaderText /></update></c><c y="NodeSet" t="2022-06-06T16:24:22"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editBatch</CommandArgument></update></c><c y="NodeSet" t="2022-06-06T16:24:31"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><HeaderText>"Editar"</HeaderText></update></c></log><log type="Application"><c y="NodeSet" t="2021-07-26T15:04:50"><pages /><insert type="page"><Name>Etiqueta_Perfil_Material</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Etiqueta Perfil Material</Path><Title>Etiqueta Perfil Material</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2021-07-26T15:05:02"><page name="Etiqueta_Perfil_Material_V" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-07-26T15:06:28"><page name="Etiqueta_Perfil_Material_V" /><update><Title>Perfil Material V</Title><Description>View  Perfil Material V</Description></update></c><c y="NodeSet" t="2021-07-26T15:06:38"><page name="Etiqueta_Perfil_Material" /><rename>Perfil Material</rename></c><c y="NodeSet" t="2021-07-26T15:06:51"><page name="Etiqueta_Perfil_Material" /><delete /></c><c y="NodeSet" t="2021-07-26T15:07:09"><pages /><insert type="page"><Name>Perfil_Material</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Perfil Material</Path><Title>Perfil Material</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2021-07-26T15:10:25"><page name="Etiqueta_Perfil_Material_V" /><update><Roles /></update></c><c y="NodeSet" t="2021-07-26T15:12:53"><page name="Perfil_Material" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2021-07-26T15:13:14"><page name="Perfil_Material" /><container id="c101" /><copyRef type="controller"><Controller>Etiqueta_Perfil_Material_V1</Controller><View>grid1</View></copyRef></c><c y="NodeSet" t="2021-07-26T15:13:37"><page name="Perfil_Material" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-07-26T15:15:33"><page name="Perfil_Material" /><update><Generate>FirstTimeOnly</Generate></update></c><c y="NodeSet" t="2021-07-26T15:24:51"><page name="Perfil_Material" /><update><Roles>UsuarioPerfilMaterial</Roles></update></c><c y="NodeSet" t="2021-07-26T15:29:05"><page name="Etiqueta_Perfil_Material_V" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-09T14:14:31"><pages /><insert type="page" context="/page/garantias"><Name>Validar_Etiquetas</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Validar Etiquetas</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2022-03-09T14:14:46"><page name="Validar_Etiquetas" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2022-03-09T14:15:10"><page name="Validar_Etiquetas" /><container id="c101" /><copyRef type="controller"><Controller>Escaneo_Validador_Embarque1</Controller><View>grid1</View></copyRef></c><c y="NodeSet" t="2022-03-09T14:15:27"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><ShowInSummary>true</ShowInSummary></update></c><c y="NodeSet" t="2022-03-09T14:15:38"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Activator>None</Activator></update></c><c y="NodeSet" t="2022-03-09T14:16:05"><page name="Validar_Etiquetas" /><update><Roles>UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-18T13:41:13"><page name="Validar_Etiquetas" /><container id="c101" /><copyRef type="controller"><Controller>Evidencia_Escaneo_Validador_Embarque</Controller><View>grid1</View></copyRef></c><c y="NodeSet" t="2022-03-18T13:41:33"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Activator>Tab</Activator><Text>Evidencias</Text></update></c><c y="NodeSet" t="2022-03-18T13:41:43"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><FilterSource>view1</FilterSource><FilterFields>Escaneo_Validador_Embarque_Id</FilterFields></update></c><c y="NodeSet" t="2022-03-18T13:43:19"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Sequence>10</Sequence></update></c><c y="NodeSet" t="2022-03-18T13:43:36"><page name="Validar_Etiquetas" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2022-03-18T13:43:41"><page name="Validar_Etiquetas" /><container id="c102" /><move><page name="Validar_Etiquetas" /><dataView id="view2" /></move></c><c y="NodeSet" t="2022-03-18T13:45:26"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><StartCommandName>New</StartCommandName></update></c><c y="NodeSet" t="2022-03-18T13:50:04"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><ShowInSummary>true</ShowInSummary></update></c><c y="NodeSet" t="2022-03-18T13:51:17"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><StartCommandName /></update></c><c y="NodeSet" t="2022-03-18T17:13:02"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>modal-buttons-more-none
view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-18T17:13:18"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>modal-buttons-more-none
view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-18T17:13:51"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>modal-buttons-close-none
view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-18T17:14:27"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>modal-buttons-cancel-none
view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-18T17:15:30"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-28T15:25:44"><page name="garantias" /><update><Title>Embarques</Title></update></c><c y="NodeSet" t="2022-03-28T15:26:29"><page name="Resultado_Validacion_Embarque" /><move><page name="Log_Delivery_Procesamiento" /></move></c><c y="NodeSet" t="2022-03-28T15:26:34"><page name="Resultado_Validacion_Embarque" /><before><page name="Log_Delivery_Procesamiento" /></before></c><c y="NodeSet" t="2022-03-28T15:26:46"><page name="Resultado_Validacion_Embarque" /><before><page name="Delivery" /></before></c><c y="NodeSet" t="2022-03-28T15:26:59"><page name="Delivery" /><before><page name="Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-03-28T15:27:04"><page name="Delivery" /><before><page name="Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-03-28T15:27:09"><page name="Resultado_Validacion_Embarque" /><before><page name="Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-03-28T15:27:17"><page name="Resultado_Validacion_Embarque" /><before><page name="Bitacora_Validador_Embarques" /></before></c><c y="NodeSet" t="2022-03-28T15:27:45"><page name="Log_Delivery_Procesamiento" /><before><page name="Escaneo_Validador_Embarque" /></before></c><c y="NodeSet" t="2022-03-28T15:27:53"><page name="Escaneo_Validador_Embarque" /><move><page name="Bitacora_Validador_Embarques" /></move></c><c y="NodeSet" t="2022-03-28T15:27:57"><page name="Escaneo_Validador_Embarque" /><before><page name="Bitacora_Validador_Embarques" /></before></c><c y="NodeSet" t="2022-03-28T15:28:05"><page name="Log_Delivery_Procesamiento" /><before><page name="Bitacora_Validador_Embarques" /></before></c><c y="NodeSet" t="2022-03-28T15:28:22"><page name="Validar_Etiquetas" /><update><Title>Validador de Embarques</Title></update></c><c y="NodeSet" t="2022-03-28T15:29:04"><page name="garantias" /><update><Name>Embarques</Name></update></c><c y="NodeSet" t="2022-03-28T15:29:12"><page name="Embarques" /><rename>Embarques</rename></c><c y="NodeSet" t="2022-03-28T15:30:15"><page name="Validar_Etiquetas" /><rename>Validador de Embarques</rename></c><c y="NodeSet" t="2022-03-28T15:38:25"><page name="Log_Delivery_Procesamiento" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-23T16:02:57"><pages /><insert type="page" context="/page/Embarques"><Name>ValidadorEmbarque</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Validador de Embarque</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2022-05-23T16:03:12"><page name="ValidadorEmbarque" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-05-23T16:04:01"><page name="ValidadorEmbarque" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2022-05-23T16:04:08"><page name="ValidadorEmbarque" /><container id="c101" /><copyRef type="controller"><Controller>Escaneo_Validador_Embarque1_1</Controller><View>grid1</View></copyRef></c><c y="NodeSet" t="2022-05-23T16:04:28"><page name="ValidadorEmbarque" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none,
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-05-23T17:26:35"><page name="ValidadorEmbarque" /><rename>Consultar Evidencias de Escaneo</rename></c><c y="NodeSet" t="2022-05-23T17:27:39"><page name="ValidadorEmbarque" /><update><Name>Consultar_Evidencias_de_escaneo</Name><Title>Consultar Evidencias de escaneo</Title></update></c></log></logs>