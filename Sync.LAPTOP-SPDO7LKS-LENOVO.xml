<?xml version="1.0" encoding="utf-8"?><logs><log type="Controllers"><c y="NodeSet" t="2020-02-27T14:21:50"><controller name="Log_eaton_app" />
<view id="grid1" />
<update>
  <Label>Log cooper app</Label>
</update></c><c y="NodeSet" t="2020-02-27T14:22:36"><controller name="Log_eaton_app" />
<view id="editForm1" />
<update>
  <Label>Review Log cooper app</Label>
</update></c><c y="NodeSet" t="2020-02-27T14:23:11"><controller name="Log_eaton_app" />
<view id="createForm1" />
<update>
  <Label>New Log cooper app</Label>
</update></c><c y="NodeSet" t="2020-02-27T14:23:38"><controller name="Log_eaton_app" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Log cooper app</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T14:50:13"><controller name="Estatus_Etiqueta" />
<field name="Estatus_Registro_Id" />
<update>
  <CodeDefault>1</CodeDefault>
</update></c><c y="NodeSet" t="2020-09-10T14:50:49"><controller name="Estatus_Etiqueta" />
<field name="Es_Con_Error" />
<update>
  <Label>Es Con Error?</Label>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-09-10T14:51:05"><controller name="Estatus_Etiqueta" />
<field name="Es_Cancelado" />
<update>
  <Label>Es Cancelado?</Label>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-09-10T14:51:26"><controller name="Estatus_Etiqueta" />
<field name="Es_Impreso" />
<update>
  <Label>Es Impreso?</Label>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-09-10T14:51:38"><controller name="Estatus_Etiqueta" />
<field name="Es_Pendiente" />
<update>
  <Label>Es Pendiente?</Label>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-09-10T14:55:41"><controller name="Etiqueta" />
<field name="Estatus_Registro_Id" />
<update>
  <CodeDefault>1</CodeDefault>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-10T14:56:38"><controller name="Estatus_Etiqueta" />
<view id="grid1" />
<copy>
  <controller name="Estatus_Etiqueta" />
  <view id="grid1" />
</copy></c><c y="NodeSet" t="2020-09-10T14:57:03"><controller name="Estatus_Etiqueta" />
<view id="v100" />
<rename>Estatus_Etiqueta_LookUp_List</rename></c><c y="NodeSet" t="2020-09-10T14:57:58"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T14:57:58"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T14:57:58"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T14:57:58"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T14:58:02"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:00:07"><controller name="Etiqueta" />
<field name="Estatus_Etiqueta_Id" />
<update>
  <ItemsDataView>Estatus_Etiqueta_LookUp_List</ItemsDataView>
</update></c><c y="NodeSet" t="2020-09-10T15:00:33"><controller name="Etiqueta" />
<field name="Estatus_Registro_Id" />
<update>
  <ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView>
</update></c><c y="NodeSet" t="2020-09-10T15:02:59"><controller name="Tamanio_Etiqueta" />
<field name="Estatus_Registro_Id" />
<update>
  <CodeDefault>1</CodeDefault>
  <ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-10T15:05:12"><controller name="Estatus_Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T15:06:54"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T15:07:22"><controller name="Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T15:07:38"><controller name="Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T15:10:59"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T15:15:06"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<update>
  <Label>NuevoTamaño Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:15:16"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:15:16"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:15:16"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:15:21"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:15:28"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:16:25"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<update>
  <Label>Tamanio Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:20:39"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Tamaño Etiqueta</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T15:34:34"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:34:35"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:34:35"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:34:35"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:35:35"><controller name="Etiqueta" />
<view id="createForm1" />
<update>
  <Label>Nueva Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:36:05"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:36:06"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:36:06"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:36:07"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:36:07"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:36:44"><controller name="Etiqueta" />
<view id="editForm1" />
<update>
  <Label>Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:37:08"><controller name="Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:37:10"><controller name="Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:37:11"><controller name="Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:37:11"><controller name="Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:39:12"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<update>
  <Label>Tamaño Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:39:35"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<update>
  <Label>Nuevo Tamaño Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:41:44"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:41:44"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:41:44"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:41:44"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:41:45"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:42:06"><controller name="Estatus_Etiqueta" />
<view id="createForm1" />
<update>
  <Label>Nuevo Estatus Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:42:27"><controller name="Estatus_Etiqueta" />
<view id="editForm1" />
<update>
  <Label>Estatus Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-10T15:42:38"><controller name="Estatus_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:42:40"><controller name="Estatus_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:42:40"><controller name="Estatus_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:42:40"><controller name="Estatus_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-09-10T15:43:46"><controller name="Estatus_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>Before</Phase>
  <Script>DECLARE @Already_Exists BIT 

SET @Already_Exists = 0 

SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Estatus_Etiqueta 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Estatus_Etiqueta ))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Estatus_Etiqueta )) 

IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1246,1,178,@Estatus_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1246,1,178,@Estatus_Etiqueta ) 
   RETURN 
END</Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:44:33"><controller name="Estatus_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>After</Phase>
  <Script>UPDATE  
   APP.Estatus_Etiqueta
SET 
    Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id </Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:45:06"><controller name="Estatus_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>Before</Phase>
  <Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT 
    TOP 1 @Already_Exists  = 1 
FROM 
   APP.Estatus_Etiqueta
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Estatus_Etiqueta))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Estatus_Etiqueta)) 
AND Estatus_Etiqueta_Id &lt;&gt; @Estatus_Etiqueta_Id 
 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1247,1,179,@Estatus_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1247,1,179,@Estatus_Etiqueta) 
   RETURN 
END</Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:45:36"><controller name="Estatus_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>After</Phase>
  <Script>UPDATE  
   APP.Estatus_Etiqueta
SET 
    Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
WHERE 
   Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:45:42"><controller name="Estatus_Etiqueta" />
<rule id="r103" />
<update>
  <Script>UPDATE  
   APP.Estatus_Etiqueta
SET 
    Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
WHERE 
   Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Script>
</update></c><c y="NodeSet" t="2020-09-10T15:48:04"><controller name="Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>Before</Phase>
  <Script>DECLARE @Already_Exists BIT 

SET @Already_Exists = 0 

SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Etiqueta 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Etiqueta ))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Etiqueta)) 

IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1248,1,180,@Numero_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1248,1,180,@Numero_Etiqueta) 
   RETURN 
END</Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:48:36"><controller name="Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>After</Phase>
  <Script> UPDATE  
   APP.Etiqueta
SET 
    Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Etiqueta_Id = @Etiqueta_Id </Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:49:01"><controller name="Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>Before</Phase>
  <Script> UPDATE  
   APP.Etiqueta
SET 
    Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Etiqueta_Id = @Etiqueta_Id </Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:49:48"><controller name="Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>After</Phase>
  <Script>UPDATE  
   APP.Etiqueta
SET 
    Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
WHERE 
  Etiqueta_Id = @Etiqueta_Id</Script>
</insert></c><c y="NodeSet" t="2020-09-10T15:50:11"><controller name="Etiqueta" />
<rule id="r102" />
<update>
  <Script> DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT 
    TOP 1 @Already_Exists  = 1 
FROM 
   APP.Etiqueta
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Etiqueta))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Etiqueta)) 
AND Etiqueta_Id &lt;&gt; @Etiqueta_Id 
 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1249,1,181,@Numero_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1249,1,181,@Numero_Etiqueta) 
   RETURN 
END  </Script>
</update></c><c y="NodeSet" t="2020-09-10T15:52:00"><controller name="Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:52:34"><controller name="Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:53:42"><controller name="Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:54:12"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
</update></c><c y="NodeSet" t="2020-09-10T15:55:33"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:56:49"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:57:16"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:57:56"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T15:58:04"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-10T16:37:18"><controller name="Tamanio_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>Before</Phase>
  <Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Tamanio_Etiqueta 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Tamanio_Etiqueta)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Tamanio_Etiqueta)) -- Verificar si aplica campo
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   RETURN 
END
--</Script>
</insert></c><c y="NodeSet" t="2020-09-10T16:37:56"><controller name="Tamanio_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>After</Phase>
  <Script>-- Insert/After
UPDATE  
   APP.Tamanio_Etiqueta 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-09-10T16:38:27"><controller name="Tamanio_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>Before</Phase>
  <Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Tamanio_Etiqueta 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Tamanio_Etiqueta)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Tamanio_Etiqueta)) -- Verificar si aplica campo
   
AND Tamanio_Etiqueta_Id &lt;&gt; @Tamanio_Etiqueta_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   RETURN 
END
--</Script>
</insert></c><c y="NodeSet" t="2020-09-10T16:38:35"><controller name="Tamanio_Etiqueta" />
<rule id="r102" />
<update>
  <Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Tamanio_Etiqueta 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Tamanio_Etiqueta)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Tamanio_Etiqueta)) -- Verificar si aplica campo
   
AND Tamanio_Etiqueta_Id &lt;&gt; @Tamanio_Etiqueta_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1264,1,184,@Tamanio_Etiqueta) 
   RETURN 
END
--</Script>
</update></c><c y="NodeSet" t="2020-09-10T16:39:04"><controller name="Tamanio_Etiqueta" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>After</Phase>
  <Script>--- Update/After
UPDATE  
   APP.Tamanio_Etiqueta 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-09-10T16:39:45"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T16:40:15"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T16:40:50"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T16:42:50"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
</update></c><c y="NodeSet" t="2020-09-10T16:46:17"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-09-10T16:55:43"><controller name="Estatus_Etiqueta" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-10T17:02:31"><controller name="Etiqueta" />
<field name="Captura_Id" />
<update>
  <Roles>hidden</Roles>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-10T17:03:13"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <Roles>hidden</Roles>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-10T17:03:29"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <Roles>hidden</Roles>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-10T17:05:16"><controller name="Tamanio_Etiqueta" />
<field name="Es_Default" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-09-10T17:09:22"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-10T17:09:51"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-10T17:10:10"><controller name="Estatus_Etiqueta" />
<view id="grid1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-10T17:13:38"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<update>
  <HeaderText>Esta es la lista de tamaños de etiquetas</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T17:14:25"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<update>
  <HeaderText>Estos son los campos del registro de tamaño etiqueta que se pueden editar.</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T17:16:09"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<update>
  <Description>Estos son los campos del registro de tamaño etiqueta que se pueden editar.</Description>
</update></c><c y="NodeSet" t="2020-09-10T17:18:27"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<update>
  <HeaderText>Por favor revise la información de Tamaño de etiqueta.  a continuación. Haga clic en Editar  para cambiar este registro, haga clic en Borrar  para eliminar el registro, o haga clic en Cancelar/Cerrar para volver a la página anterior.</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T17:19:32"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<update>
  <HeaderText>Por favor revise la información de Tamaño de etiqueta.  a continuación. Haga clic en Editar  para cambiar este registro, haga clic en Borrar  para eliminar el registro, o haga clic en Cancelar/Cerrar para volver a la página anterior.</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T17:19:56"><controller name="Tamanio_Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<update>
  <Description>Estos son los campos del registro de tamaño etiqueta que se pueden editar.</Description>
</update></c><c y="NodeSet" t="2020-09-10T17:22:27"><controller name="Tamanio_Etiqueta" />
<view id="createForm1" />
<update>
  <HeaderText>Por favor, llene este formato y haga clic en el botón Aceptar  para crear un registro nuevo de Tamaño etiqueta. Haga clic en Cancelar/Cerrar para volver a la página anterior.</HeaderText>
</update></c><c y="NodeSet" t="2020-09-10T17:30:55"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:31:53"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:32:06"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:32:33"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:33:04"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:33:21"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:33:45"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:34:20"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:34:52"><controller name="Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:35:06"><controller name="Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:35:25"><controller name="Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:35:45"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Estatus_Id = @Estatus_Id</Data>
  <Roles>Administrators,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:43:00"><controller name="Tamanio_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T22:10:17"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Estatus_Etiqueta_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-10T22:35:39"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <Copy>[Ubicacion_Almacenamiento_Origen] = [Origen]</Copy>
</update></c><c y="NodeSet" t="2020-09-10T22:38:24"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <ItemsDataView>Ubicacion_Almacenamiento_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
  <Roles />
  <WriteRoles />
</update></c><c y="NodeSet" t="2020-09-10T22:39:00"><controller name="Etiqueta" />
<field name="Estatus_Etiqueta_Id" />
<update>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-10T22:39:46"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <Roles />
  <WriteRoles />
</update></c><c y="NodeSet" t="2020-09-10T22:40:11"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <Copy>[Ubicacion_Almacenamiento_Destino] = [Destino]</Copy>
</update></c><c y="NodeSet" t="2020-09-11T09:10:32"><controller name="Etiqueta" />
<view id="createForm1" />
<dataField fieldName="Numero_Etiqueta" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T09:10:51"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Etiqueta" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-11T09:10:57"><controller name="Etiqueta" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Captura_Id" />
<move>
  <controller name="Etiqueta" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-11T09:13:30"><controller name="Etiqueta" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <ItemsDataView>grid1</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-11T09:28:41"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <ItemsDataView>Ubicacion_Almacenamiento_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-11T09:30:52"><controller name="Etiqueta" />
<field name="Material_Id" />
<update>
  <ItemsDataView>Material_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-11T09:42:44"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T09:42:54"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T09:43:07"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T09:43:39"><controller name="Etiqueta" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Captura_Id" />
<move>
  <controller name="Etiqueta" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-11T09:45:24"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <Copy>Ubicacion_Almacenamiento_Origen=Origen</Copy>
</update></c><c y="NodeSet" t="2020-09-11T09:46:04"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <Copy>Ubicacion_Almacenamiento_Destino=Destino</Copy>
</update></c><c y="NodeSet" t="2020-09-11T09:46:44"><controller name="Etiqueta" />
<field name="Material_Id" />
<update>
  <Copy>Material=Material_Material</Copy>
</update></c><c y="NodeSet" t="2020-09-11T10:03:26"><controller name="Etiqueta" />
<field name="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Etiqueta" />
  <field name="Material_Material" />
</move></c><c y="NodeSet" t="2020-09-11T10:03:26"><controller name="Etiqueta" />
<field name="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Etiqueta" />
  <field name="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-11T10:04:48"><controller name="Etiqueta" />
<field name="Captura_Id" />
<move>
  <controller name="Etiqueta" />
  <field name="Material_Material" />
</move></c><c y="NodeSet" t="2020-09-11T10:04:50"><controller name="Etiqueta" />
<field name="Captura_Id" />
<move>
  <controller name="Etiqueta" />
  <field name="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-11T10:06:03"><controller name="Etiqueta" />
<field name="Material_Id" />
<update>
  <Copy>Material_Material=Material</Copy>
</update></c><c y="NodeSet" t="2020-09-11T10:08:31"><controller name="Etiqueta" />
<field name="Material_Id" />
<update>
  <CausesCalculate>true</CausesCalculate>
</update></c><c y="NodeSet" t="2020-09-11T10:09:15"><controller name="Etiqueta" />
<insert type="rule">
  <Type>JavaScript</Type>
  <CommandName>Calculate</CommandName>
  <Phase>After</Phase>
  <Script>[Material] = [Material_Material]</Script>
</insert></c><c y="NodeSet" t="2020-09-11T10:11:14"><controller name="Etiqueta" />
<rule id="r104" />
<update>
  <Script>[Material] = [Material_Material];</Script>
</update></c><c y="NodeSet" t="2020-09-11T10:14:43"><controller name="Etiqueta" />
<rule id="r104" />
<update>
  <Phase>Execute</Phase>
</update></c><c y="NodeSet" t="2020-09-11T10:19:29"><controller name="Etiqueta" />
<rule id="r104" />
<update>
  <Script>[Material] = [Material_Material];
[Ubicacion_Almacenamiento_Origen] = [Origen]
[Ubicacion_Almacenamiento_Destino] = [Destino]
</Script>
</update></c><c y="NodeSet" t="2020-09-11T10:19:39"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <CausesCalculate>true</CausesCalculate>
</update></c><c y="NodeSet" t="2020-09-11T10:19:52"><controller name="Etiqueta" />
<field name="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <CausesCalculate>true</CausesCalculate>
</update></c><c y="NodeSet" t="2020-09-11T10:24:56"><controller name="Etiqueta" />
<rule id="r104" />
<update>
  <Script>[Material] = [Material_Material];
[Ubicacion_Almacenamiento_Origen] = [Origen];
[Ubicacion_Almacenamiento_Destino] = [Destino];
</Script>
</update></c><c y="NodeSet" t="2020-09-11T10:40:11"><controller name="Etiqueta" />
<clone /></c><c y="NodeSet" t="2020-09-11T10:41:18"><controller name="Etiqueta1" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-11T10:41:43"><controller name="Etiqueta1" />
<field name="Material_Id" />
<update>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-11T10:42:20"><controller name="Etiqueta1" />
<field name="Material" />
<update>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-11T10:42:33"><controller name="Etiqueta1" />
<field name="Cantidad" />
<update>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-11T10:43:30"><controller name="Etiqueta1" />
<field name="Ubicacion_Almacenamiento_Origen_Id" />
<update>
  <WriteRoles>hidden</WriteRoles>
</update></c><c y="NodeSet" t="2020-09-11T10:44:16"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Transaccion_Captura" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:44:28"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Usuario_Surtidor" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:44:38"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Mensaje_Sistema_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:44:48"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Error" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:44:56"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Equipo_Impresion" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:45:05"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Fecha_Impresion" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:45:16"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Impreso_Por" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:45:23"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Codigo_De_Barra" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:45:32"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Html_QR" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:45:42"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Ubicacion_Almacenamiento_Destino_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:46:16"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Cantidad" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:46:27"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Material" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:46:38"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Material_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:46:47"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Captura_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T10:46:55"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T11:01:35"><controller name="Etiqueta1" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Surtidor = @Bussines_Rule_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-11T11:02:17"><controller name="Etiqueta1" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Surtidor = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-11T11:03:59"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Mensaje_Sistema_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T11:04:25"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Mensaje_Sistema_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T11:09:20"><controller name="Etiqueta1" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND @BusinessRules_UserId =  Usuario_Surtidor </FilterExpression>
</update></c><c y="NodeSet" t="2020-09-11T11:19:50"><controller name="Etiqueta1" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND CONVERT(VARCHAR(50), @BusinessRules_UserId) =  Usuario_Surtidor </FilterExpression>
</update></c><c y="NodeSet" t="2020-09-11T11:30:04"><controller name="Etiqueta1" />
<view id="grid1" />
<update>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND CONVERT(VARCHAR(50), @BusinessRules_UserId) =  UsuarioSurtidor </FilterExpression>
</update></c><c y="NodeSet" t="2020-09-11T11:47:29"><controller name="Etiqueta1" />
<view id="createForm1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T11:47:44"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:34:07"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Ubicacion_Almacenamiento_Origen" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:34:27"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Ubicacion_Almacenamiento_Destino" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:34:58"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Ubicacion_Almacenamiento_Origen" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:35:11"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Ubicacion_Almacenamiento_Destino" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:35:30"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-11T16:36:06"><controller name="Etiqueta1" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-09-11T16:36:19"><controller name="Etiqueta1" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-09-12T23:18:11"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Es_Pendiente" />
<delete /></c><c y="NodeSet" t="2020-09-12T23:18:12"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Es_Impreso" />
<delete /></c><c y="NodeSet" t="2020-09-12T23:18:12"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Es_Cancelado" />
<delete /></c><c y="NodeSet" t="2020-09-12T23:18:17"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<dataField fieldName="Es_Con_Error" />
<delete /></c><c y="NodeSet" t="2020-09-12T23:18:55"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<update>
  <ShowInSelector>false</ShowInSelector>
</update></c><c y="NodeSet" t="2020-09-13T15:33:35"><controller name="Etiqueta1" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-09-13T15:44:24"><controller name="Etiqueta1" />
<field name="Estatus_Etiqueta_Id" />
<update>
  <ItemsNewDataView />
</update></c><c y="NodeSet" t="2020-09-13T15:47:54"><controller name="Estatus_Etiqueta" />
<view id="grid1" />
<update>
  <ShowInSelector>false</ShowInSelector>
</update></c><c y="NodeSet" t="2020-09-13T15:51:52"><controller name="Estatus_Etiqueta" />
<view id="Estatus_Etiqueta_LookUp_List" />
<update>
  <FilterExpression>Estatus_Registro_Id IN (01)</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-13T15:55:23"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<update>
  <Label>Tamañoo Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-13T16:00:36"><controller name="Tamanio_Etiqueta" />
<view id="grid1" />
<update>
  <Label>Tamaño Etiqueta</Label>
</update></c><c y="NodeSet" t="2020-09-13T16:03:09"><controller name="Etiqueta" />
<field name="Mensaje_Sistema_Id" />
<update>
  <ItemsDataView>Mensaje_Sistema_LookUp_List</ItemsDataView>
  <ItemsNewDataView />
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-13T16:03:47"><controller name="Etiqueta1" />
<field name="Mensaje_Sistema_Id" />
<update>
  <ItemsDataView>Mensaje_Sistema_LookUp_List</ItemsDataView>
  <ItemsDataTextField>Mensaje_Amigable_Usuario</ItemsDataTextField>
  <ItemsNewDataView />
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-13T16:06:09"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_LookUp_List" />
<copy>
  <controller name="Mensaje_Sistema" />
  <view id="Mensaje_Sistema_LookUp_List" />
</copy></c><c y="NodeSet" t="2020-09-13T16:06:32"><controller name="Mensaje_Sistema" />
<view id="v100" />
<rename>Mensaje_Sistema_Lookup_List_Etiqueta</rename></c><c y="NodeSet" t="2020-09-13T16:06:44"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:44"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:44"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Actualizado_Por_Id" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:44"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:44"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Creado_Por_Id" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:45"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Enviar_Correo" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:45"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="No_Http_Estatus" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:45"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="No_Reintentar" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:50"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Tipo_Mensaje_Sistema_Id" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:06:58"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Mensaje_Sistema" />
<delete /></c><c y="NodeSet" t="2020-09-13T16:07:07"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<dataField fieldName="Mensaje_Sistema_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-13T16:07:30"><controller name="Mensaje_Sistema" />
<view id="Mensaje_Sistema_Lookup_List_Etiqueta" />
<update>
  <FilterExpression>Estatus_Registro_Id IN (0,1)</FilterExpression>
</update></c><c y="NodeSet" t="2020-09-13T16:08:01"><controller name="Etiqueta" />
<field name="Mensaje_Sistema_Id" />
<update>
  <ItemsDataView>Mensaje_Sistema_Lookup_List_Etiqueta</ItemsDataView>
</update></c><c y="NodeSet" t="2020-09-13T16:08:19"><controller name="Etiqueta1" />
<field name="Mensaje_Sistema_Id" />
<update>
  <ItemsDataView>Mensaje_Sistema_Lookup_List_Etiqueta</ItemsDataView>
</update></c><c y="NodeSet" t="2020-09-15T14:02:49"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Html_QR" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:03:01"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Codigo_De_Barra" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:08:58"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Html_QR" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:09:08"><controller name="Etiqueta1" />
<view id="editForm1" />
<dataField fieldName="Codigo_De_Barra" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:09:25"><controller name="Etiqueta1" />
<view id="createForm1" />
<dataField fieldName="Html_QR" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:09:33"><controller name="Etiqueta1" />
<view id="createForm1" />
<dataField fieldName="Codigo_De_Barra" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:13:03"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:17:33"><controller name="Etiqueta1" />
<view id="grid1" />
<dataField fieldName="Material_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:36:42"><controller name="Etiqueta1" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:37:05"><controller name="Etiqueta1" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:37:56"><controller name="Etiqueta1" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:38:17"><controller name="Etiqueta1" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:38:29"><controller name="Etiqueta1" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:38:49"><controller name="Etiqueta1" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:38:58"><controller name="Etiqueta1" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:39:38"><controller name="Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:39:49"><controller name="Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:40:05"><controller name="Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:40:25"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = GETDATE() 
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T14:45:53"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:46:00"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Cantidad" />
<move>
  <controller name="Etiqueta" />
  <view id="grid1" />
  <dataField fieldName="Material_Id" />
</move></c><c y="NodeSet" t="2020-09-15T14:46:09"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Material_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:46:21"><controller name="Etiqueta" />
<view id="grid1" />
<dataField fieldName="Material_Id" />
<update>
  <HyperlinkFormatString />
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:47:37"><controller name="Etiqueta" />
<view id="createForm1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:48:18"><controller name="Etiqueta" />
<view id="editForm1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:49:13"><controller name="Etiqueta1" />
<view id="createForm1" />
<dataField fieldName="UsuarioSurtidor" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T14:51:42"><controller name="Etiqueta1" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-09-15T15:11:10"><controller name="Etiqueta" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-09-15T15:12:51"><controller name="Bitacora_Captura_Sap1" />
<view id="grid1" />
<move>
  <controller name="Bitacora_Captura_Sap1" />
  <field name="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:13:02"><controller name="Bitacora_Captura_Sap1" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<move>
  <controller name="Bitacora_Captura_Sap1" />
  <view id="grid1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:13:04"><controller name="Bitacora_Captura_Sap1" />
<view id="grid1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Bitacora_Captura_Sap1" />
  <view id="grid1" />
  <dataField fieldName="Ruta_Optima_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:13:24"><controller name="Bitacora_Captura_Sap1" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:13:57"><controller name="Bitacora_Captura_Sap" />
<view id="grid1" />
<move>
  <controller name="Bitacora_Captura_Sap" />
  <field name="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:14:03"><controller name="Bitacora_Captura_Sap" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<move>
  <controller name="Bitacora_Captura_Sap" />
  <view id="grid1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:14:06"><controller name="Bitacora_Captura_Sap" />
<view id="grid1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Bitacora_Captura_Sap" />
  <view id="grid1" />
  <dataField fieldName="Ruta_Optima_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:14:21"><controller name="Bitacora_Captura_Sap" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:15:44"><controller name="Etiqueta" />
<field name="Equipo_Impresion" />
<update>
  <Label>Equipo que solicita impresión</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:16:03"><controller name="Etiqueta1" />
<field name="Equipo_Impresion" />
<update>
  <Label>Equipo que solicita impresión</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:20:39"><controller name="Etiqueta1" />
<field name="Equipo_Impresion" />
<update>
  <Label>Equipo que solicitó impresión</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:21:01"><controller name="Etiqueta" />
<field name="Equipo_Impresion" />
<update>
  <Label>Equipo que solicitó impresión</Label>
</update></c><c y="NodeSet" t="2020-09-15T15:27:28"><controller name="Bitacora_Captura_Sap" />
<view id="editForm1" />
<category id="c1" />
<copy>
  <controller name="Bitacora_Captura_Sap" />
  <view id="grid1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</copy></c><c y="NodeSet" t="2020-09-15T15:27:35"><controller name="Bitacora_Captura_Sap" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<move>
  <controller name="Bitacora_Captura_Sap" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:27:38"><controller name="Bitacora_Captura_Sap" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Bitacora_Captura_Sap" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Ruta_Optima_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:27:50"><controller name="Bitacora_Captura_Sap" />
<view id="editForm1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T15:28:08"><controller name="Bitacora_Captura_Sap1" />
<view id="editForm1" />
<category id="c1" />
<copy>
  <controller name="Bitacora_Captura_Sap1" />
  <view id="grid1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</copy></c><c y="NodeSet" t="2020-09-15T15:28:11"><controller name="Bitacora_Captura_Sap1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<move>
  <controller name="Bitacora_Captura_Sap1" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Bitacora_Captura_Sap_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:28:14"><controller name="Bitacora_Captura_Sap1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<move>
  <controller name="Bitacora_Captura_Sap1" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Ruta_Optima_Id" />
</move></c><c y="NodeSet" t="2020-09-15T15:28:27"><controller name="Bitacora_Captura_Sap1" />
<view id="editForm1" />
<dataField fieldName="Bitacora_Captura_Sap_Id" />
<update>
  <ReadOnly>true</ReadOnly>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-09-15T18:59:29"><controller name="Estatus_Etiqueta" />
<field name="Estatus_Registro_Id" />
<update>
  <ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-09-15T19:15:23"><controller name="Etiqueta1" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:15:34"><controller name="Etiqueta1" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:15:45"><controller name="Etiqueta1" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:16:03"><controller name="Etiqueta1" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:16:22"><controller name="Etiqueta" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:16:35"><controller name="Etiqueta" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:16:51"><controller name="Etiqueta" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:17:09"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:17:25"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:17:36"><controller name="Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
  WHERE 
Etiqueta_Id = @Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-09-15T19:18:51"><controller name="Estatus_Etiqueta" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Estatus_Etiqueta
SET 
Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
  WHERE 
Estatus_Etiqueta_Id = @Estatus_Etiqueta_Id</Data>
</update></c><c y="NodeSet" t="2020-10-17T13:11:33"><controller name="Solicitud2" />
<view id="createForm1" />
<dataField fieldName="Motivo_Solicitud" />
<update>
  <Watermark>Necesario (Ingrese Máx. 30 caracteres)</Watermark>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T13:11:56"><controller name="Solicitud2" />
<view id="editForm1" />
<dataField fieldName="Motivo_Solicitud" />
<update>
  <Watermark>Necesario (Ingrese Máx. 30 caracteres)</Watermark>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T13:22:15"><controller name="Solicitud2" />
<rule id="r107" />
<update>
  <Script>var fieldValue = [Motivo_Solicitud];
if ([Motivo_Solicitud_Es_Otro] == true || [Es_Solicitud_Rollo]==true){
  if (fieldValue == null) {
      // prevent the default action processing
      this.preventDefault();
      // set the focus on the field and display an error
      this.result.focus('Motivo_Solicitud', 'Ingrese comentario, máximo 15 caracteres.');
  }
  else
    if (fieldValue.length &gt; 30) {
      // prevent the default action processing
      this.preventDefault();
      // set the focus on the field and display an error
      this.result.focus('Motivo_Solicitud', 'Ingrese máximo 15 caracteres');
  }
}</Script>
</update></c><c y="NodeSet" t="2020-10-17T13:25:39"><controller name="Solicitud2" />
<rule id="r107" />
<update>
  <Script>var fieldValue = [Motivo_Solicitud];
if ([Motivo_Solicitud_Es_Otro] == true || [Es_Solicitud_Rollo]==true){
  if (fieldValue == null) {
      // prevent the default action processing
      this.preventDefault();
      // set the focus on the field and display an error
      this.result.focus('Motivo_Solicitud', 'Ingrese comentario, máximo 30 caracteres.');
  }
  else
    if (fieldValue.length &gt; 30) {
      // prevent the default action processing
      this.preventDefault();
      // set the focus on the field and display an error
      this.result.focus('Motivo_Solicitud', 'Ingrese máximo 30 caracteres');
  }
}</Script>
</update></c><c y="NodeSet" t="2020-10-17T13:29:39"><controller name="Solicitud2" />
<view id="editForm1" />
<dataField fieldName="Motivo_Solicitud" />
<update>
  <Hidden>false</Hidden>
  <Visibility>[Motivo_Solicitud_Es_Otro] == true || [Es_Solicitud_Rollo]==true

</Visibility>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:06:05"><controller name="Solicitud2" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Solicitud" />
<move>
  <controller name="Solicitud2" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:06:32"><controller name="Solicitud2" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:06:48"><controller name="Solicitud2" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>false</Hidden>
  <Visibility>[Motivo_Solicitud_Es_Otro] == true</Visibility>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:07:22"><controller name="Solicitud2" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:07:38"><controller name="Solicitud2" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>false</Hidden>
  <Visibility>[Motivo_Solicitud_Es_Otro] == true</Visibility>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:08:24"><controller name="Solicitud2" />
<view id="grid1" />
<dataField fieldName="Creado_Por" />
<move>
  <controller name="Solicitud2" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:08:35"><controller name="Solicitud2" />
<view id="grid1" />
<dataField fieldName="Fecha_Entrega" />
<after>
  <controller name="Solicitud2" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</after></c><c y="NodeSet" t="2020-10-17T16:08:38"><controller name="Solicitud2" />
<view id="grid1" />
<dataField fieldName="Unidad_Material_Entregado_Id" />
<move>
  <controller name="Solicitud2" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:14:38"><controller name="Solicitud1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Unidad_Material_Solicitado_Id" />
<move>
  <controller name="Solicitud1" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:15:01"><controller name="Solicitud1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud1" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:15:22"><controller name="Solicitud1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud1" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:15:36"><controller name="Solicitud1" />
<view id="grid1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud1" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:16:38"><controller name="Solicitud2_1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_1" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:16:46"><controller name="Solicitud2_1" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:17:19"><controller name="Solicitud2_1" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:17:30"><controller name="Solicitud2_1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_1" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:17:52"><controller name="Solicitud2_1" />
<view id="grid1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_1" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:18:18"><controller name="Solicitud2_2" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_2" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:18:24"><controller name="Solicitud2_2" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:18:36"><controller name="Solicitud2_2" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_2" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:18:52"><controller name="Solicitud2_2" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:19:04"><controller name="Solicitud2_2" />
<view id="grid1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud2_2" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:19:26"><controller name="Solicitud3" />
<view id="Solicitud_LookUp_List" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:19:39"><controller name="Solicitud3" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud3" />
  <view id="createForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:19:47"><controller name="Solicitud3" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:20:01"><controller name="Solicitud3" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud3" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:20:07"><controller name="Solicitud3" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:20:20"><controller name="Solicitud3" />
<view id="grid1" />
<dataField fieldName="Solicitud_Numero_Orden_Produccion" />
<move>
  <controller name="Solicitud3" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:20:25"><controller name="Solicitud3" />
<view id="grid1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:24:37"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<command id="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_En_Proceso_De_Surtido_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Estatus_Orden_Produccion_Id]
      ,[Estatus_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Familia_Descripcion]
      ,[Solicitud_Id]
	  ,[Tipo_Solicitud_Id]
	  ,[Tipo_Solicitud]
      ,[Cantidad_Solicitado]
      ,[Cantidad_Entregado]
      ,[Fecha_Entrega]
      ,[Material_Solicitado_Id]
      ,[Material_Id]
      ,[Material]
      ,[Material_Descripcion]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Significa_Pendiente]
      ,[Significa_Enviada_A_Surtir]
      ,[Significa_Entregada]
      ,[Significa_Surtida_Completa]
      ,[Significa_Surtida_Parcial]
      ,[Label_Estatus_Solicitud]
      ,[Motivo_Cancelacion]
      ,[Ultimo_Comentario_Surtidor]
      ,[Area_Entrega_Familia_Id]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Fecha_Solicitud]
      ,[Tiempo_Transcurrido]
      ,[Label_Tiempo_Transcurrido]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Ultimo_Comentario_Solicitante]
	  ,[Categoria_Solicitud_Id]
	  ,[Categoria_Solicitud]
	  ,[Dato_Solicitud_Urgencia_Compras]
  FROM [dbo].[Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_En_Proceso_De_Surtido_V]</Text>
</update></c><c y="NodeSet" t="2020-10-17T16:24:48"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<command id="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Pendiente_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Estatus_Orden_Produccion_Id]
      ,[Estatus_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Familia_Descripcion]
      ,[Solicitud_Id]
	  ,[Tipo_Solicitud_Id]
	  ,[Tipo_Solicitud]
      ,[Fecha_Solicitud]
      ,[Material_Solicitado_Id]
      ,[Cantidad_Solicitado]
      ,[Cantidad_Entregado]
      ,[Fecha_Entrega]
      ,[Material_Id]
      ,[Material]
      ,[Material_Descripcion]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Significa_Pendiente]
      ,[Significa_Enviada_A_Surtir]
      ,[Significa_Entregada]
      ,[Significa_Surtida_Completa]
      ,[Significa_Surtida_Parcial]
      ,[Label_Estatus_Solicitud]
      ,[Motivo_Cancelacion]
      ,[Ultimo_Comentario_Surtidor]
      ,[Area_Entrega_Familia_Id]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Tiempo_Transcurrido]
      ,[Label_Tiempo_Transcurrido]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Ultimo_Comentario_Solicitante]
	  ,[Categoria_Solicitud_Id]
	  ,[Categoria_Solicitud]
	  ,[Dato_Solicitud_Urgencia_Compras]
  FROM [dbo].[Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Pendiente_V]</Text>
</update></c><c y="NodeSet" t="2020-10-17T16:24:59"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<command id="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Surtido_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Estatus_Orden_Produccion_Id]
      ,[Estatus_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Familia_Descripcion]
      ,[Solicitud_Id]
	  ,[Tipo_Solicitud_Id]
	  ,[Tipo_Solicitud]
      ,[Fecha_Solicitud]
      ,[Cantidad_Solicitado]
      ,[Cantidad_Entregado]
      ,[Fecha_Entrega]
      ,[Material_Solicitado_Id]
      ,[Material_Id]
      ,[Material]
      ,[Material_Descripcion]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Significa_Pendiente]
      ,[Significa_Enviada_A_Surtir]
      ,[Significa_Entregada]
      ,[Significa_Surtida_Completa]
      ,[Significa_Surtida_Parcial]
      ,[Label_Estatus_Solicitud]
      ,[Motivo_Cancelacion]
      ,[Ultimo_Comentario_Surtidor]
      ,[Area_Entrega_Familia_Id]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Tiempo_Transcurrido]
      ,[Label_Tiempo_Transcurrido]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Ultimo_Comentario_Solicitante]
	  ,[Categoria_Solicitud_Id]
	  ,[Categoria_Solicitud]
	  ,[Dato_Solicitud_Urgencia_Compras]
  FROM [dbo].[Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Surtido_V]</Text>
</update></c><c y="NodeSet" t="2020-10-17T16:25:10"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<command id="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Cancelado_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Estatus_Orden_Produccion_Id]
      ,[Estatus_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Familia_Descripcion]
      ,[Solicitud_Id]
	  ,[Tipo_Solicitud_Id]
	  ,[Tipo_Solicitud]
      ,[Fecha_Solicitud]
      ,[Cantidad_Solicitado]
      ,[Cantidad_Entregado]
      ,[Fecha_Entrega]
      ,[Material_Solicitado_Id]
      ,[Material_Id]
      ,[Material]
      ,[Material_Descripcion]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Significa_Pendiente]
      ,[Significa_Enviada_A_Surtir]
      ,[Significa_Entregada]
      ,[Significa_Surtida_Completa]
      ,[Significa_Surtida_Parcial]
      ,[Label_Estatus_Solicitud]
      ,[Motivo_Cancelacion]
      ,[Ultimo_Comentario_Surtidor]
      ,[Area_Entrega_Familia_Id]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Tiempo_Transcurrido]
      ,[Label_Tiempo_Transcurrido]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Ultimo_Comentario_Solicitante]
	  ,[Categoria_Solicitud_Id]
	  ,[Categoria_Solicitud]
	  ,[Dato_Solicitud_Urgencia_Compras]
  FROM [dbo].[Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_Estatus_Solicitud_Cancelado_V]</Text>
</update></c><c y="NodeSet" t="2020-10-17T16:25:39"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<view id="solicitudesPendientes" />
<dataField fieldName="Numero_Orden_Produccion" />
<move>
  <controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
  <view id="solicitudesPendientes" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:25:53"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<view id="solicitudesEnProcesoDeSurtido" />
<dataField fieldName="Numero_Orden_Produccion" />
<move>
  <controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
  <view id="solicitudesEnProcesoDeSurtido" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:26:08"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<view id="solicitudesSurtidosYEntregados" />
<dataField fieldName="Numero_Orden_Produccion" />
<move>
  <controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
  <view id="solicitudesSurtidosYEntregados" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:26:22"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<view id="solicitudesCancelados" />
<dataField fieldName="Numero_Orden_Produccion" />
<move>
  <controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
  <view id="solicitudesCancelados" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:26:47"><controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
<view id="grid1" />
<dataField fieldName="Numero_Orden_Produccion" />
<move>
  <controller name="Grid_Consulta_Entrega_Semaforizada_Para_Retro_A_Solicitante_Admin_V" />
  <view id="grid1" />
  <dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
</move></c><c y="NodeSet" t="2020-10-17T16:44:20"><controller name="Solicitud2" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>false</Hidden>
  <Visibility>[Es_Urgencia_Compra] == true</Visibility>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:54:32"><controller name="Solicitud2" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>false</Hidden>
  <Visibility>[Es_Urgencia_Compra] == true</Visibility>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T16:54:42"><controller name="Solicitud2" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T17:13:36"><controller name="Solicitud2" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
</update></c><c y="NodeSet" t="2020-10-17T17:13:41"><controller name="Solicitud2" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Default />
</update></c><c y="NodeSet" t="2020-10-17T17:33:48"><controller name="Solicitud" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
  <Default />
</update></c><c y="NodeSet" t="2020-10-17T17:34:06"><controller name="Solicitud1" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
  <Default />
</update></c><c y="NodeSet" t="2020-10-17T17:34:22"><controller name="Solicitud1" />
<view id="createForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T17:34:34"><controller name="Solicitud1" />
<view id="editForm1" />
<dataField fieldName="Dato_Solicitud_Urgencia_Compras" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-10-17T17:34:58"><controller name="Solicitud2_1" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
  <Default />
</update></c><c y="NodeSet" t="2020-10-17T17:35:11"><controller name="Solicitud2_2" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
  <Default />
</update></c><c y="NodeSet" t="2020-10-17T17:35:24"><controller name="Solicitud3" />
<field name="Dato_Solicitud_Urgencia_Compras" />
<update>
  <AllowNulls>true</AllowNulls>
  <Default />
</update></c><c y="NodeSet" t="2020-12-01T15:18:17"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
        view-style-list, 
        view-style-charts-disabled,
        view-style-cards-disabled,
        view-style-calendar-disabled,
        inline-editing-none,
        inline-editing-option-none </Tags>
</update></c><c y="NodeSet" t="2020-12-01T15:18:27"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
        view-style-list, 
        view-style-charts-disabled,
        view-style-cards-disabled,
        view-style-calendar-disabled,
        inline-editing-none,
        inline-editing-option-none </Tags>
  <Label>Solicitudes Pendientes Por Entregar Cadista</Label>
</update></c><c y="NodeSet" t="2020-12-01T15:20:27"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:20:37"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:20:48"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:20:56"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Material_Surtido_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:21:05"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Solicitado_Por_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:21:13"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Material_Solicitado_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:21:18"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Material_Solicitado_Id" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:21:36"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Unidad_Material_Solicitado_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:24:01"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Estatus_Solicitud_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:24:54"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:25:05"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Usuario_Surtidor_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T15:25:12"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Area_Entrega_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:45:09"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Solicitud Pendiente por Entregar</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T17:46:07"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<field name="Solicitud_Id" />
<update>
  <IsPrimaryKey>true</IsPrimaryKey>
</update></c><c y="NodeSet" t="2020-12-01T17:46:31"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:46:41"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:46:54"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:47:38"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:47:48"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:48:02"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:48:20"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:48:30"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:48:42"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:48:54"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:49:13"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:49:21"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-01T17:52:18"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<field name="Solicitud_Id" />
<update>
  <Label>Solicitud</Label>
</update></c><c y="NodeSet" t="2020-12-01T17:53:11"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Orden_Produccion_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:53:20"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:53:29"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:53:38"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Material_Surtido_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:53:50"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Solicitado_Por_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:53:59"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Material_Solicitado_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:54:07"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Unidad_Material_Solicitado_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:54:35"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Etiqueta_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:54:44"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:55:01"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Usuario_Surtidor_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:55:10"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Area_Entrega_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:55:28"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Area_Entrega_Id" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:58:37"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Estatus_Solicitud_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T17:59:09"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora de Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-12-01T18:44:24"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Etiqueta_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T20:06:55"><controller name="Rol_Logico" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
</update></c><c y="NodeSet" t="2020-12-01T20:15:57"><controller name="Rol_Logico" />
<field name="Es_Supervisor_Lider" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:08"><controller name="Rol_Logico" />
<field name="Es_Gerente_Area" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:15"><controller name="Rol_Logico" />
<field name="Es_Gerente_Planta" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:27"><controller name="Rol_Logico" />
<field name="Es_Contralor" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:35"><controller name="Rol_Logico" />
<field name="Es_Administrador_It" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:43"><controller name="Rol_Logico" />
<field name="Es_Administrador_Almacen" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:16:53"><controller name="Rol_Logico" />
<field name="Es_Despachador" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:17:03"><controller name="Rol_Logico" />
<field name="Es_Empleado_Planta" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:17:11"><controller name="Rol_Logico" />
<field name="Es_Cadista" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:17:19"><controller name="Rol_Logico" />
<field name="Es_Personal_QA" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:17:29"><controller name="Rol_Logico" />
<field name="Es_Comprador" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-01T20:19:33"><controller name="Rol_Logico" />
<field name="Estatus_Registro_Id" />
<update>
  <CodeDefault>1</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-01T20:20:10"><controller name="Rol_Logico" />
<field name="Estatus_Registro_Id" />
<update>
  <ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-12-01T20:21:19"><controller name="Rol_Logico" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
  <ShowInSelector>false</ShowInSelector>
</update></c><c y="NodeSet" t="2020-12-01T20:21:50"><controller name="Rol_Logico" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-01T20:22:01"><controller name="Rol_Logico" />
<view id="grid1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T20:22:20"><controller name="Rol_Logico" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
  <Label>Rol Lógico</Label>
</update></c><c y="NodeSet" t="2020-12-01T20:22:48"><controller name="Rol_Logico" />
<copy>
  <controller name="Rol_Logico" />
  <view id="grid1" />
</copy></c><c y="NodeSet" t="2020-12-01T20:23:11"><controller name="Rol_Logico" />
<view id="v100" />
<rename>Rol_Logico_LookUp_List</rename></c><c y="NodeSet" t="2020-12-01T20:26:23"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<update>
  <Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
  <FilterExpression>Estatus_Registro_Id IN (0,1) </FilterExpression>
</update></c><c y="NodeSet" t="2020-12-01T20:27:18"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<update>
  <HeaderText>Nuevo Rol Lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T20:27:33"><controller name="Rol_Logico" />
<view id="createForm1" />
<update>
  <Label>Nuevo Rol Lógico</Label>
  <HeaderText>Nuevo Rol Lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T20:28:35"><controller name="Rol_Logico" />
<view id="editForm1" />
<update>
  <Label>Rol Lógico</Label>
  <HeaderText>Rol Lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T20:28:58"><controller name="Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Rol Lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T20:29:18"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:18"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:18"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:19"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:35"><controller name="Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:35"><controller name="Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:35"><controller name="Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:29:40"><controller name="Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T20:54:58"><controller name="Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>Before</Phase>
  <Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Rol_Logico 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Rol_Logico)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Rol_Logico)) -- Verificar si aplica campo
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   RETURN 
END</Script>
</insert></c><c y="NodeSet" t="2020-12-01T20:55:29"><controller name="Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>After</Phase>
  <Script>-- Insert/After
UPDATE  
   APP.Rol_Logico 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T20:55:57"><controller name="Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>Before</Phase>
  <Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Rol_Logico 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Rol_Logico)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Rol_Logico)) -- Verificar si aplica campo
   
AND Rol_Logico_Id &lt;&gt; @Rol_Logico_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   RETURN 
END
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T20:56:22"><controller name="Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>After</Phase>
  <Script>--- Update/After
UPDATE  
   APP.Rol_Logico 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T20:56:30"><controller name="Rol_Logico" />
<rule id="r103" />
<update>
  <Script>--- Update/After
UPDATE  
   APP.Rol_Logico 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id
--</Script>
</update></c><c y="NodeSet" t="2020-12-01T20:58:24"><controller name="Rol_Logico" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
</update></c><c y="NodeSet" t="2020-12-01T21:04:10"><controller name="Rol_Logico" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:04:59"><controller name="Rol_Logico" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T21:05:12"><controller name="Rol_Logico" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T21:05:52"><controller name="Rol_Logico" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T21:06:32"><controller name="Rol_Logico" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T21:51:34"><controller name="Rol_Logico" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Data>-- "Borrar"
UPDATE MRO.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:51:48"><controller name="Rol_Logico" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE MRO.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:51:59"><controller name="Rol_Logico" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE MRO.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:52:16"><controller name="Rol_Logico" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE MRO.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:52:33"><controller name="Rol_Logico" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE MRO.Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T21:52:52"><controller name="Rol_Logico" />
<rule id="r100" />
<update>
  <Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   MRO.Rol_Logico 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Rol_Logico)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Rol_Logico)) -- Verificar si aplica campo
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   RETURN 
END</Script>
</update></c><c y="NodeSet" t="2020-12-01T21:53:01"><controller name="Rol_Logico" />
<rule id="r101" />
<update>
  <Script>-- Insert/After
UPDATE  
   MRO.Rol_Logico 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id
--</Script>
</update></c><c y="NodeSet" t="2020-12-01T21:53:12"><controller name="Rol_Logico" />
<rule id="r102" />
<update>
  <Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   MRO.Rol_Logico 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Rol_Logico)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Rol_Logico)) -- Verificar si aplica campo
   
AND Rol_Logico_Id &lt;&gt; @Rol_Logico_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1286,1,185,@Rol_Logico) 
   RETURN 
END
--</Script>
</update></c><c y="NodeSet" t="2020-12-01T21:54:03"><controller name="Rol_Logico" />
<rule id="r103" />
<update>
  <Script>--- Update/After
UPDATE  
   MRO.Rol_Logico 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Rol_Logico_Id = @Rol_Logico_Id
--</Script>
</update></c><c y="NodeSet" t="2020-12-01T21:58:35"><controller name="Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:05:20"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="Estatus_Registro_Id" />
<update>
  <CodeDefault>1</CodeDefault>
  <ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-12-01T22:07:58"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="Rol_Logico_Id" />
<update>
  <ItemsDataView>Rol_Logico_LookUp_List</ItemsDataView>
  <ItemsNewDataView />
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-12-01T22:08:33"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="Usuario_Aplicacion_Id" />
<update>
  <ItemsDataView>Usuario_Aplicacion_LookUp_List</ItemsDataView>
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-12-01T22:10:04"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="CreadoPor" />
<rename>Creado_Por</rename></c><c y="NodeSet" t="2020-12-01T22:10:16"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="ActualizadoPor" />
<rename>Actualizado_Por</rename></c><c y="NodeSet" t="2020-12-01T22:11:40"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="grid1" />
<update>
  <Label>Usuario Aplicacion vs Rol Logico</Label>
  <ShowInSelector>false</ShowInSelector>
  <FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-01T22:12:55"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="grid1" />
<dataField fieldName="Rol_Logico_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T22:13:06"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="grid1" />
<dataField fieldName="Usuario_Aplicacion_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T22:13:17"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="grid1" />
<dataField fieldName="Estatus_Registro_Id" />
<update>
  <HyperlinkFormatString />
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-01T22:14:45"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<update>
  <Label>Nuevo Usuario Aplicación vs Rol lógico</Label>
  <HeaderText>Nuevo Usuario Aplicación vs Rol lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T22:14:53"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<update>
  <HeaderText>Nuevo Usuario Aplicación vs Rol lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T22:15:00"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:15:00"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:15:00"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:15:01"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:15:05"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:16:51"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<update>
  <Label>Usuario Aplicación vs Rol lógico</Label>
  <HeaderText>Usuario Aplicación vs Rol lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T22:17:00"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Usuario Aplicación vs Rol lógico</HeaderText>
</update></c><c y="NodeSet" t="2020-12-01T22:17:14"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:17:15"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:17:15"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:17:19"><controller name="Usuario_Aplicacion_Rol_Logico" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:25:02"><controller name="Usuario_Aplicacion_Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>Before</Phase>
  <Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Usuario_Aplicacion_Rol_Logico 
WHERE 
    Usuario_Aplicacion_Id = @Usuario_Aplicacion_Id
   AND Rol_Logico_Id = @Rol_Logico_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   RETURN 
END
</Script>
</insert></c><c y="NodeSet" t="2020-12-01T22:25:15"><controller name="Usuario_Aplicacion_Rol_Logico" />
<rule id="r100" />
<update>
  <Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Usuario_Aplicacion_Rol_Logico 
WHERE 
    Usuario_Aplicacion_Id = @Usuario_Aplicacion_Id
   AND Rol_Logico_Id = @Rol_Logico_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   RETURN 
END
</Script>
</update></c><c y="NodeSet" t="2020-12-01T22:26:43"><controller name="Usuario_Aplicacion_Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Insert</CommandName>
  <Phase>After</Phase>
  <Script>-- Insert/After
UPDATE  
   APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T22:27:08"><controller name="Usuario_Aplicacion_Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>Before</Phase>
  <Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Usuario_Aplicacion_Rol_Logico 
WHERE 
    Usuario_Aplicacion_Id = @Usuario_Aplicacion_Id
   AND Rol_Logico_Id = @Rol_Logico_Id
AND Usuario_Aplicacion_Rol_Logico_Id &lt;&gt; @Usuario_Aplicacion_Rol_Logico_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1287,1,186,@Nombre_Completo + ' vs ' + @Rol_Logico) 
   RETURN 
END
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T22:27:38"><controller name="Usuario_Aplicacion_Rol_Logico" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>Update</CommandName>
  <Phase>After</Phase>
  <Script>--- Update/After
UPDATE  
   APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id
--</Script>
</insert></c><c y="NodeSet" t="2020-12-01T22:27:59"><controller name="Usuario_Aplicacion_Rol_Logico" />
<rule id="r103" />
<update>
  <Script>--- Update/After
UPDATE  
   APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id
--</Script>
</update></c><c y="NodeSet" t="2020-12-01T22:29:53"><controller name="Usuario_Aplicacion_Rol_Logico" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T22:30:29"><controller name="Usuario_Aplicacion_Rol_Logico" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T22:31:19"><controller name="Usuario_Aplicacion_Rol_Logico" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T22:32:06"><controller name="Usuario_Aplicacion_Rol_Logico" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <CommandName>SQL</CommandName>
  <HeaderText>"Borrar"</HeaderText>
  <Data>-- "Borrar"
UPDATE APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id</Data>
  <CssClass>material-icon-delete</CssClass>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T22:32:20"><controller name="Usuario_Aplicacion_Rol_Logico" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>-- "Borrar"
UPDATE APP.Usuario_Aplicacion_Rol_Logico 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Usuario_Aplicacion_Rol_Logico_Id = @Usuario_Aplicacion_Rol_Logico_Id</Data>
</update></c><c y="NodeSet" t="2020-12-01T22:38:50"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="Usuario_Sistema_Id" />
<update>
  <ItemsDataView>grid1</ItemsDataView>
  <ItemsNewDataView />
  <SearchOnStart>false</SearchOnStart>
  <ItemsPageSize>15</ItemsPageSize>
</update></c><c y="NodeSet" t="2020-12-01T22:42:05"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Supervisor_Lider" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:06"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Gerente_Area" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:06"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Gerente_Planta" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:06"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Contralor" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:06"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Administrador_It" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Administrador_Almacen" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Despachador" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Empleado_Planta" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Cadista" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Personal_QA" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:07"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Es_Comprador" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:08"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Creado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:08"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Fecha_Creacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:08"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Actualizado_Por" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:08"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Fecha_Ultima_Actualizacion" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:42:13"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-12-01T22:46:43"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<update>
  <Tags>view-style-grid-none, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
</update></c><c y="NodeSet" t="2020-12-01T22:46:52"><controller name="Rol_Logico" />
<view id="Rol_Logico_LookUp_List" />
<update>
  <Tags>view-style-grid-none, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags>
</update></c><c y="NodeSet" t="2020-12-01T23:02:51"><controller name="Usuario_Aplicacion_Rol_Logico" />
<field name="Usuario_Sistema_Id" />
<rename>Usuario_Id</rename></c><c y="NodeSet" t="2020-12-02T11:17:40"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-02T11:19:41"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<insert type="rule">
  <Type>Code</Type>
  <CommandName>Custom</CommandName>
  <CommandArgument>ExecCS01</CommandArgument>
  <Name>Entregar_Solicitud</Name>
  <Phase>Before</Phase>
</insert></c><c y="NodeSet" t="2020-12-02T11:21:35"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<actionGroup id="ag2" />
<insert type="action">
  <CommandName>Custom</CommandName>
  <CommandArgument>ExecCS01</CommandArgument>
  <HeaderText>"Entregar Material"</HeaderText>
  <CausesValidation>true</CausesValidation>
</insert></c><c y="NodeSet" t="2020-12-02T12:27:31"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
        view-style-list, 
        view-style-charts-disabled,
        view-style-cards-disabled,
        view-style-calendar-disabled,
        inline-editing-none,
        inline-editing-option-none </Tags>
  <FilterExpression>Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-03T13:05:57"><controller name="Documento_Comentario" />
<actionGroup id="ag3" />
<insert type="action">
  <CommandName>New</CommandName>
  <CommandArgument>CreateForm3</CommandArgument>
  <HeaderText>"Efrain"</HeaderText>
  <CausesValidation>true</CausesValidation>
</insert></c><c y="NodeSet" t="2020-12-03T13:15:26"><controller name="Documento_Comentario" />
<actionGroup id="ag3" />
<action id="a100" />
<update>
  <CommandArgument>createForm3</CommandArgument>
</update></c><c y="NodeSet" t="2020-12-03T13:28:21"><controller name="Documento_Comentario" />
<view id="editForm1" />
<copy>
  <controller name="Documento_Comentario" />
  <view id="editForm1" />
</copy></c><c y="NodeSet" t="2020-12-03T13:28:56"><controller name="Documento_Comentario" />
<view id="v100" />
<rename>createFormDcoumentoComentarioSolicitudCadista</rename></c><c y="NodeSet" t="2020-12-03T13:37:34"><controller name="Documento_Comentario" />
<insert type="actionGroup">
  <Scope>ActionBar</Scope>
  <HeaderText>"Ejrmplo efrea"</HeaderText>
  <Flat>false</Flat>
</insert></c><c y="NodeSet" t="2020-12-03T13:38:28"><controller name="Documento_Comentario" />
<actionGroup id="ag100" />
<insert type="action">
  <CommandName>New</CommandName>
  <CommandArgument>createFormDcoumentoComentarioSolicitudCadista</CommandArgument>
  <HeaderText>"Efr@"</HeaderText>
  <CausesValidation>true</CausesValidation>
</insert></c><c y="NodeSet" t="2020-12-03T13:40:26"><controller name="Documento_Comentario" />
<view id="createFormDcoumentoComentarioSolicitudCadista" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:40:35"><controller name="Documento_Comentario" />
<actionGroup id="ag100" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:40:43"><controller name="Documento_Comentario" />
<actionGroup id="ag3" />
<action id="a100" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:40:53"><controller name="Documento_Comentario" />
<copy>
  <controller name="Documento_Comentario" />
</copy></c><c y="NodeSet" t="2020-12-03T13:41:01"><controller name="Documento_Comentario" />
<field name="Documento_Comentario" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:18"><controller name="Documento_Comentario" />
<clone /></c><c y="NodeSet" t="2020-12-03T13:41:37"><controller name="Documento_Comentario1" />
<view id="createForm2" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:37"><controller name="Documento_Comentario1" />
<view id="createForm3" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:37"><controller name="Documento_Comentario1" />
<view id="createFormCancelarSurtidoDesdeRutaOptima" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:37"><controller name="Documento_Comentario1" />
<view id="createFormCancelarSurtidoDesdeMatSurtiAEjec" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:44"><controller name="Documento_Comentario1" />
<view id="createFormCancelarTransferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:54"><controller name="Documento_Comentario1" />
<rule id="r100" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:41:59"><controller name="Documento_Comentario1" />
<rule id="r104" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:42:03"><controller name="Documento_Comentario1" />
<rule id="r105" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:42:26"><controller name="Documento_Comentario1" />
<rule id="r107" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:42:26"><controller name="Documento_Comentario1" />
<rule id="r106" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:42:30"><controller name="Documento_Comentario1" />
<rule id="r103" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:49:00"><controller name="Documento_Comentario1" />
<field name="Orden_Produccion_Id" />
<update>
  <Default>((0))</Default>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:49:11"><controller name="Documento_Comentario1" />
<field name="Orden_Produccion_Detalle_Id" />
<update>
  <Default>((0))</Default>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:49:24"><controller name="Documento_Comentario1" />
<field name="Producto_Id" />
<update>
  <Default>((0))</Default>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:49:32"><controller name="Documento_Comentario1" />
<field name="Material_Id" />
<update>
  <Default>((0))</Default>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:49:57"><controller name="Documento_Comentario1" />
<field name="Motivo_Cancelacion_Id" />
<update>
  <Default>((0))</Default>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:50:38"><controller name="Documento_Comentario1" />
<field name="Motivo_Movimiento_Id" />
<update>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:50:48"><controller name="Documento_Comentario1" />
<field name="Movimiento_Ruta_Optima_Id" />
<update>
  <CodeDefault>0</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-03T13:53:55"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:53:55"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:53:58"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Producto_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:01"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Material_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:10"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Es_Motivo_Cancelacion" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Cancelacion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Material_Surtido_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:21"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:22"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:22"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:22"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:22"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Movimiento_Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:32"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<category id="c1" />
<dataField fieldName="Registrado_Desde_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:48"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:48"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:54:48"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Producto_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:09"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:10"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Registrado_Desde_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:17"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Material_Surtido_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:17"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Tipo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:17"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:18"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:18"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Motivo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:18"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:18"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:21"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Movimiento_Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:27"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Material_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:43"><controller name="Documento_Comentario1" />
<actionGroup id="ag2" />
<action id="a100" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:43"><controller name="Documento_Comentario1" />
<actionGroup id="ag2" />
<action id="a102" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:55:47"><controller name="Documento_Comentario1" />
<actionGroup id="ag2" />
<action id="a103" />
<delete /></c><c y="NodeSet" t="2020-12-03T13:58:03"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Motivo_Cancelacion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:01:44"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:01:44"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:01:44"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Producto_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:01:51"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Material_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:19"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Movimiento_Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:19"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:19"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Aplica_A_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:19"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Transferencia" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Es_Solicitud_Devolucion" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Movimiento_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Material_Surtido_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Estatus_Registro_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Registrado_Desde" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:20"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Registrado_Desde_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:23"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Motivo_Cancelacion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T14:02:28"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Es_Motivo_Cancelacion" />
<delete /></c><c y="NodeSet" t="2020-12-03T20:43:59"><controller name="Grid_Desglose_Captura_Cadista_V" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <IsPrimaryKey>true</IsPrimaryKey>
</update></c><c y="NodeSet" t="2020-12-03T20:44:24"><controller name="Grid_Desglose_Captura_Cadista_V" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-12-03T20:44:41"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:44:49"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Material_Surtido_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:44:59"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Material_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:45:15"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Usuario_Surtidor_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:45:25"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:45:35"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<dataField fieldName="Solicitud_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:46:34"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<update>
  <FilterExpression>Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-03T20:47:07"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="grid1" />
<update>
  <Label>Desglose Captura</Label>
</update></c><c y="NodeSet" t="2020-12-03T20:47:58"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<update>
  <Label>Revisar Desglose Captura</Label>
</update></c><c y="NodeSet" t="2020-12-03T20:48:11"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Desglose Captura</HeaderText>
</update></c><c y="NodeSet" t="2020-12-03T20:48:33"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Solicitud_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T20:48:42"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Usuario_Cadista_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T20:48:45"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Usuario_Surtidor_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T20:48:52"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Material_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T20:48:56"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Material_Surtido_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T20:49:22"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:49:31"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:49:44"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:49:53"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:50:06"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:50:14"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:50:26"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:50:47"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:50:57"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:51:06"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:51:40"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:51:48"><controller name="Grid_Desglose_Captura_Cadista_V" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T21:01:51"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T21:01:56"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T21:06:33"><controller name="Solicitud" />
<clone /></c><c y="NodeSet" t="2020-12-03T22:10:28"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<update>
  <Label>Solicitud </Label>
</update></c><c y="NodeSet" t="2020-12-03T22:11:59"><controller name="Grid_Solicitud_BCS_V" />
<view id="createForm1" />
<update>
  <Label>Nueva Solicitud</Label>
</update></c><c y="NodeSet" t="2020-12-03T22:12:29"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<update>
  <Label>Solicitud</Label>
  <HeaderText>Ver Soliictud</HeaderText>
</update></c><c y="NodeSet" t="2020-12-03T22:12:38"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Solicitud</HeaderText>
</update></c><c y="NodeSet" t="2020-12-03T22:37:15"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<move>
  <controller name="Grid_Desglose_Captura_Cadista_V" />
  <field name="Material_Surtido_Id" />
</move></c><c y="NodeSet" t="2020-12-03T22:37:23"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<move>
  <controller name="Grid_Desglose_Captura_Cadista_V" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Material_Surtido_Id" />
</move></c><c y="NodeSet" t="2020-12-03T22:37:30"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Material_Surtido_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T22:59:33"><controller name="Grid_Solicitud_BCS_V" />
<field name="Solicitud_Id" />
<update>
  <IsPrimaryKey>true</IsPrimaryKey>
</update></c><c y="NodeSet" t="2020-12-03T23:08:27"><controller name="Etiqueta1" />
<clone /></c><c y="NodeSet" t="2020-12-03T23:11:29"><controller name="Etiqueta1_1" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:11:38"><controller name="Etiqueta" />
<clone /></c><c y="NodeSet" t="2020-12-03T23:13:17"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:13:26"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:13:37"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:13:47"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:02"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:10"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:21"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:33"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:43"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:14:51"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:15:07"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:15:18"><controller name="Grid_Solicitud_BCS_V" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:16:08"><controller name="Etiqueta2" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:16:25"><controller name="Etiqueta2" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:16:38"><controller name="Etiqueta2" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:16:54"><controller name="Etiqueta2" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:17:07"><controller name="Etiqueta2" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:17:17"><controller name="Etiqueta2" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:17:37"><controller name="Etiqueta2" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T23:19:56"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T23:20:04"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-03T23:20:16"><controller name="Grid_Solicitud_BCS_V" />
<field name="Solicitud_Id" />
<update>
  <Label>Solicitud</Label>
</update></c><c y="NodeSet" t="2020-12-03T23:20:49"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:20:53"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Orden_Produccion_Detalle_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:21:01"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Producto_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:21:06"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:21:14"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Producto_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:21:19"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Material_Surtido_Id" />
<delete /></c><c y="NodeSet" t="2020-12-03T23:21:22"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<delete /></c><c y="NodeSet" t="2020-12-04T08:26:34"><controller name="Grid_Desglose_Captura_Cadista_V" />
<view id="editForm1" />
<update>
  <Label>Desglose Captura</Label>
</update></c><c y="NodeSet" t="2020-12-04T08:38:38"><controller name="Documento_Comentario1" />
<field name="Tipo_Comentario_Id" />
<update>
  <Default>((3))</Default>
  <CodeDefault>3</CodeDefault>
</update></c><c y="NodeSet" t="2020-12-04T08:39:31"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<dataField fieldName="Tipo_Archivo_Id" />
<update>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:39:51"><controller name="Documento_Comentario1" />
<view id="createForm1" />
<dataField fieldName="Tipo_Comentario_Id" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:40:54"><controller name="Documento_Comentario1" />
<view id="grid1" />
<dataField fieldName="Tipo_Comentario_Id" />
<update>
  <Hidden>false</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:41:47"><controller name="Documento_Comentario1" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Data>UPDATE 
APP.Documento_Comentario
SET Estatus_Registro_Id = 3
, Actualizado_Por_Id = @BusinessRules_UserId 
,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Documento_Comentario_Id = @Documento_Comentario_Id</Data>
</update></c><c y="NodeSet" t="2020-12-04T08:43:49"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:44:56"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="grid1" />
<update>
  <Tags>view-style-grid, 
        view-style-list, 
        view-style-charts-disabled,
        view-style-cards-disabled,
        view-style-calendar-disabled,
        inline-editing-none,
        inline-editing-option-none </Tags>
  <Label>Solicitudes Pendientes Por Entregar</Label>
</update></c><c y="NodeSet" t="2020-12-04T08:47:26"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:53:09"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<move>
  <controller name="Grid_Solicitud_BCS_V" />
  <field name="Ruta_Optima_Id" />
</move></c><c y="NodeSet" t="2020-12-04T08:53:15"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<move>
  <controller name="Grid_Solicitud_BCS_V" />
  <field name="Material_Surtido_Id" />
</move></c><c y="NodeSet" t="2020-12-04T08:53:24"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Material_Surtido_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T08:53:32"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Ruta_Optima_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T09:32:10"><controller name="Documento_Comentario1" />
<view id="editForm1" />
<dataField fieldName="Tipo_Comentario_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T09:33:27"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<move>
  <controller name="Grid_Solicitud_BCS_V" />
  <view id="grid1" />
  <dataField fieldName="Entregado_Por_Usuario_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T09:33:34"><controller name="Grid_Solicitud_BCS_V" />
<view id="grid1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T09:33:47"><controller name="Grid_Solicitud_BCS_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<move>
  <controller name="Grid_Solicitud_BCS_V" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Entregado_Por_Usuario_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:21:50"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Solicitud_Hora_Completa]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:22:25"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Solicitud_Hora_Completa]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:22:54"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Solicitud_Mes_Actual]
      ,[Fecha_Solicitud_Mes_Actual1]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Solicitud_Hora_Completa]
	  -----
	,[Tiempo_Transcurrido_Entrega_Cadista]
	,[Caso_Tiempo_Transcurrido_Cadista]
	,[Entregado_Por_Usuario_Cadista_Id]
	,[Entregado_Por_Usuario_Cadista]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V]
  
  </Text>
</update></c><c y="NodeSet" t="2020-12-04T16:25:54"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Solicitud_Mes_Actual]
      ,[Fecha_Solicitud_Mes_Actual1]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Solicitud_Hora_Completa]
	  -----
	,[Tiempo_Transcurrido_Entrega_Cadista]
	,[Caso_Tiempo_Transcurrido_Cadista]
	,[Entregado_Por_Usuario_Cadista_Id]
	,[Entregado_Por_Usuario_Cadista]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V]
  
  </Text>
</update></c><c y="NodeSet" t="2020-12-04T16:31:39"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:31:56"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
	  
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:32:10"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Solicitud_Mes_Actual]
      ,[Fecha_Solicitud_Mes_Actual1]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Solicitud_Hora_Completa]
	  -----
	,[Tiempo_Transcurrido_Entrega_Cadista]
	,[Caso_Tiempo_Transcurrido_Cadista]
	,[Entregado_Por_Usuario_Cadista_Id]
	,[Entregado_Por_Usuario_Cadista]
	,[Fecha_Entrega_Cadista]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Actual_V]
  
  </Text>
</update></c><c y="NodeSet" t="2020-12-04T16:32:25"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGrafPastel" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaAntGrafPastel" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:32:37"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGrafPastel" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:32:47"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGrafPastelSegmentPorArea" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaAntGrafPastelSegmentPorArea" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:32:55"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGrafPastelSegmentPorArea" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:33:04"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaAntGráfPastelSegmentPorAreaComp" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:33:13"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:33:22"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGraficaColumna" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaAntGraficaColumna" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:33:37"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaAntGraficaColumna" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:33:49"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActualGrafPastel" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaActualGrafPastel" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:34:24"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActualGrafPastel" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:34:34"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActGráfPastelSegmentPorArea" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaActGráfPastelSegmentPorArea" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:34:43"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActGráfPastelSegmentPorArea" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:34:52"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaActGráfPastelSegmentPorAreaComp" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:35:00"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:35:10"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActualGrafColumna" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridDiaActualGrafColumna" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:35:18"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridDiaActualGrafColumna" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:35:29"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGrafPastel" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesAntGrafPastel" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:35:37"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGrafPastel" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:35:46"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGráfPastelSegmentPorArea" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesAntGráfPastelSegmentPorArea" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:35:54"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGráfPastelSegmentPorArea" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:36:04"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesAntGráfPastelSegmentPorAreaComp" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:36:11"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:36:22"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGrafColumna" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesAntGrafColumna" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:36:30"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesAntGrafColumna" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:36:38"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActualGrafPastel" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesActualGrafPastel" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:36:46"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActualGrafPastel" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:39:08"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActualGrafPastel" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:39:18"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActGráfPastelSegmentPorArea" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesActGráfPastelSegmentPorArea" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:39:27"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActGráfPastelSegmentPorArea" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:39:35"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesActGráfPastelSegmentPorAreaComp" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:39:42"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActGráfPastelSegmentPorAreaComp" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:39:51"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActualGrafColumna" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="gridMesActualGrafColumna" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:39:58"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="gridMesActualGrafColumna" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:40:08"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Tipo_Solicitud" />
<move>
  <controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Fecha_Entrega_Cadista" />
</move></c><c y="NodeSet" t="2020-12-04T16:40:15"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<view id="editForm1" />
<dataField fieldName="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-04T16:47:50"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
	  
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:51:18"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
	  
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V]</Text>
</update></c><c y="NodeSet" t="2020-12-04T16:56:35"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V" />
<update>
  <Text>SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
      ,[Tiempo_Transcurrido_Entrega_Cadista]
      ,[Caso_Tiempo_Transcurrido_Cadista]
      ,[Entregado_Por_Usuario_Cadista_Id]
      ,[Entregado_Por_Usuario_Cadista]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Mes_Anterior_V]</Text>
</update></c><c y="NodeSet" t="2020-12-21T14:31:04"><controller name="Documento_Comentario1" />
<insert type="rule">
  <Type>Sql</Type>
  <CommandName>New</CommandName>
  <Phase>Execute</Phase>
  <Script>SELECT TOP 1
    @Tipo_Archivo_Id = Tipo_Archivo_Id
    ,@Tipo_Archivo = Tipo_Archivo
FROM APP.Tipo_Archivo
WHERE Es_Evidencia_De_Cadista = 1
AND Estatus_Registro_Id = 1 -- Que este activo</Script>
</insert></c><c y="NodeSet" t="2020-12-21T14:31:49"><controller name="Documento_Comentario1" />
<field name="Tipo_Archivo_Id" />
<update>
  <Default>((0))</Default>
</update></c><c y="NodeSet" t="2020-12-21T19:42:39"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <Label>Solicitudes Entregadas</Label>
  <HeaderText>Solicitudes Entregadas</HeaderText>
</update></c><c y="NodeSet" t="2020-12-21T19:42:46"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Solicitudes Entregadas</HeaderText>
</update></c><c y="NodeSet" t="2020-12-21T19:45:30"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="grid1" />
<update>
  <Label>Solicitudes Entregadas Por Cadista Dia Actual</Label>
</update></c><c y="NodeSet" t="2020-12-21T19:46:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <Label>Solicitudes Entregadas Por Cadista</Label>
  <HeaderText>Ver Solicitudes Entregadas Por Cadista</HeaderText>
</update></c><c y="NodeSet" t="2020-12-21T19:46:25"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <Label>Solicitud Entregada Por Cadista</Label>
  <HeaderText>Ver Solicitud Entregad Por Cadista</HeaderText>
</update></c><c y="NodeSet" t="2020-12-21T19:46:40"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="editForm1" />
<category id="c1" />
<update>
  <HeaderText>Solicitud Entregada Por Cadista</HeaderText>
</update></c><c y="NodeSet" t="2020-12-21T19:49:09"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="grid1" />
<update>
  <Label>Solicitudes Entregadas Dia Actual</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:04:07"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Dia_Anterior</CommandId>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Anterior_V"
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:04:18"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="grid1" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
  <view id="grid1" />
</copy></c><c y="NodeSet" t="2020-12-21T20:09:25"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Mes_Actual</CommandId>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Actual_V"
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:14:08"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitude_Entregadas_Mes_Anterior</CommandId>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Mes_Anterior_V"
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:18:24"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Todo</CommandId>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_V"
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:18:34"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<command id="Solicitude_Entregadas_Mes_Anterior" />
<rename>Solicitudes_Entregadas_Mes_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:18:45"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v100" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
  <view id="v100" />
</copy></c><c y="NodeSet" t="2020-12-21T20:18:50"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v101" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
  <view id="v101" />
</copy></c><c y="NodeSet" t="2020-12-21T20:19:12"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="grid1" />
<rename>Solicitude_Entregadas_Dia_Actual</rename></c><c y="NodeSet" t="2020-12-21T20:19:24"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitude_Entregadas_Dia_Actual" />
<rename>Solicitudes_Entregadas_Dia_Actual</rename></c><c y="NodeSet" t="2020-12-21T20:19:33"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v100" />
<rename>Solicitudes_Entregadas_Dia_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:19:43"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v101" />
<rename>Solicitudes_Entregadas_Mes_Actual</rename></c><c y="NodeSet" t="2020-12-21T20:19:54"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v102" />
<rename>Solicitudes_Entregadas_Mes_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:20:27"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Mes_Anterior" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Mes_Anterior" />
</copy></c><c y="NodeSet" t="2020-12-21T20:20:44"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="v100" />
<rename>Solicitude_Entregadas</rename></c><c y="NodeSet" t="2020-12-21T20:20:51"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitude_Entregadas" />
<rename>Solicitudes_Entregadas</rename></c><c y="NodeSet" t="2020-12-21T20:21:17"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Dia_Anterior" />
<update>
  <CommandId>Solicitudes_Entregadas_Dia_Anterior</CommandId>
  <Label>Solicitudes Entregadas Dia Anterior</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:21:32"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Mes_Actual" />
<update>
  <CommandId>Solicitudes_Entregadas_Mes_Actual</CommandId>
  <Label>Solicitudes Entregadas Mes Actual</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:21:51"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Mes_Anterior" />
<update>
  <CommandId>Solicitudes_Entregadas_Mes_Anterior</CommandId>
  <Label>Solicitudes Entregadas Mes Anterior</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:22:04"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas" />
<update>
  <CommandId>Solicitudes_Entregadas_Todo</CommandId>
  <Label>Solicitudes Entregadas</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:25:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitude_Entregadas_Por_Cadista_Dia_Anterior</CommandId>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Anterior_V"
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:25:16"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<command id="Solicitude_Entregadas_Por_Cadista_Dia_Anterior" />
<rename>Solicitudes_Entregadas_Por_Cadista_Dia_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:25:37"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Mes_Actual</CommandId>
  <Text>Select</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:25:56"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Mes_Anterior</CommandId>
  <Text>Select</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:26:12"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<insert type="command">
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Todo</CommandId>
  <Text>SELECT
</Text>
  <Custom>false</Custom>
  <Type>Text</Type>
</insert></c><c y="NodeSet" t="2020-12-21T20:27:03"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<command id="Solicitudes_Entregadas_Por_Cadista_Mes_Actual" />
<update>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Actual_V"
</Text>
</update></c><c y="NodeSet" t="2020-12-21T20:27:30"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<command id="Solicitudes_Entregadas_Por_Cadista_Mes_Anterior" />
<update>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V" "Grid_Solicitudes_Entregadas_Por_Cadista_Mes_Anterior_V"
</Text>
</update></c><c y="NodeSet" t="2020-12-21T20:28:00"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<command id="Solicitudes_Entregadas_Por_Cadista_Todo" />
<update>
  <Text>select
	"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Solicitud_Id" "Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Orden_Produccion_Id" "Orden_Produccion_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Orden_Produccion_Detalle_Id" "Orden_Produccion_Detalle_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Ruta_Optima_Id" "Ruta_Optima_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Material_Surtido_Id" "Material_Surtido_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Solicitado_Por_Id" "Solicitado_Por_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Solicitado_Por" "Solicitado_Por"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Material_Solicitado_Id" "Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Material_Solicitado" "Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Material_Descripcion_Solicitado" "Material_Descripcion_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Cantidad_Solicitado" "Cantidad_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Unidad_Material_Solicitado_Id" "Unidad_Material_Solicitado_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Unidad_Material_Solicitado" "Unidad_Material_Solicitado"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Fecha_Solicitud" "Fecha_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Estatus_Solicitud_Id" "Estatus_Solicitud_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Estatus_Solicitud" "Estatus_Solicitud"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Fecha_Surtido" "Fecha_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Bitacora_Captura_Sap_Id" "Bitacora_Captura_Sap_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Material_Surtido" "Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Cantidad_Surtido" "Cantidad_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Unidad_Material_Surtido" "Unidad_Material_Surtido"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Fecha_Captura" "Fecha_Captura"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Estatus_Captura_Sap" "Estatus_Captura_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Tipo_Operacion_Sap" "Tipo_Operacion_Sap"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Etiqueta_Id" "Etiqueta_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Numero_Etiqueta" "Numero_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Estatus_Etiqueta" "Estatus_Etiqueta"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Fecha_Impresion" "Fecha_Impresion"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Fecha_Entrega_Cadista" "Fecha_Entrega_Cadista"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Entregado_Por_Usuario_Cadista_Id" "Entregado_Por_Usuario_Cadista_Id"
	,"Grid_Solicitudes_Entregadas_Por_Cadista_V"."Entregado_Por_Usuario_Cadista" "Entregado_Por_Usuario_Cadista"
from "dbo"."Grid_Solicitudes_Entregadas_Por_Cadista_V" "Grid_Solicitudes_Entregadas_Por_Cadista_V"
</Text>
</update></c><c y="NodeSet" t="2020-12-21T20:29:38"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="grid1" />
<rename>Solicitudes_Entregadas_Por_Cadista_Dia_Actual</rename></c><c y="NodeSet" t="2020-12-21T20:29:47"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
</copy></c><c y="NodeSet" t="2020-12-21T20:29:49"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v100" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
</copy></c><c y="NodeSet" t="2020-12-21T20:29:50"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v101" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
</copy></c><c y="NodeSet" t="2020-12-21T20:29:52"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v102" />
<copy>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
</copy></c><c y="NodeSet" t="2020-12-21T20:30:16"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v100" />
<rename>Solicitudes_Entregadas_Por_Cadista_Dia_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:30:28"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v101" />
<rename>Solicitudes_Entregadas_Por_Cadista_Mes_Anterior</rename></c><c y="NodeSet" t="2020-12-21T20:31:09"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v102" />
<rename>Solicitudes_Entregadas_Por_Cadista_Mes_Actual</rename></c><c y="NodeSet" t="2020-12-21T20:31:19"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="v103" />
<rename>Solicitudes_Entregadas_Por_Cadista</rename></c><c y="NodeSet" t="2020-12-21T20:33:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Anterior" />
<update>
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Dia_Anterior</CommandId>
  <Label>Solicitudes Entregadas Por Cadista Dia Anterior</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:33:17"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Anterior" />
<update>
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Mes_Anterior</CommandId>
  <Label>Solicitudes Entregadas Por Cadista Mes Anterior</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:33:19"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Actual" />
<move>
  <controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
  <view id="Solicitudes_Entregadas_Por_Cadista_Mes_Anterior" />
</move></c><c y="NodeSet" t="2020-12-21T20:33:30"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Actual" />
<update>
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Mes_Actual</CommandId>
  <Label>Solicitudes Entregadas Por Cadista Mes Actual</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:33:42"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista" />
<update>
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Todo</CommandId>
  <Label>Solicitudes Entregadas Por Cadista</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:38:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Ruta_Optima_Id" />
<update>
  <Label>Ruta Optima</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:38:17"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Material_Surtido_Id" />
<update>
  <Label>Material Surtido</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:38:33"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Material_Surtido_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:38:43"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Ruta_Optima_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:38:53"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Solicitado_Por_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:40:50"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Material_Solicitado_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:41:00"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Unidad_Material_Solicitado_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:41:09"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Estatus_Solicitud_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:41:36"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:41:56"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Etiqueta_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:42:14"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:42:27"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Solicitud_Id" />
<update>
  <AllowNulls>true</AllowNulls>
</update></c><c y="NodeSet" t="2020-12-21T20:45:09"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<field name="Solicitud_Id" />
<update>
  <IsPrimaryKey>true</IsPrimaryKey>
</update></c><c y="NodeSet" t="2020-12-21T20:45:21"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Solicitud_Id" />
<update>
  <IsPrimaryKey>true</IsPrimaryKey>
</update></c><c y="NodeSet" t="2020-12-21T20:45:45"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Ruta_Optima_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:45:55"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Material_Surtido_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:46:07"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Solicitado_Por_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:46:26"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Material_Solicitado_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:46:38"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Unidad_Material_Solicitado_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:46:56"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Estatus_Solicitud_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:47:16"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Bitacora_Captura_Sap_Id" />
<update>
  <Label>Bitacora Captura Sap</Label>
</update></c><c y="NodeSet" t="2020-12-21T20:47:32"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Etiqueta_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-21T20:47:47"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<field name="Entregado_Por_Usuario_Cadista_Id" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:23:31"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:24:04"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <CommandId>Solicitudes_Entregadas_Por_Cadista_Todo</CommandId>
</update></c><c y="NodeSet" t="2020-12-22T08:24:57"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:25:10"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:25:21"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:25:37"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:25:46"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:25:59"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:26:12"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:26:24"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:26:36"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:27:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:27:11"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:29:11"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <CommandId>Solicitudes_Entregadas_Todo</CommandId>
</update></c><c y="NodeSet" t="2020-12-22T08:29:26"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:29:35"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a3" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:29:44"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a7" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:29:52"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag1" />
<action id="a8" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:30:03"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:30:13"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:30:29"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag2" />
<action id="a14" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:30:42"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag3" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:30:55"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag4" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:31:03"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag4" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:31:43"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag9" />
<action id="a1" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:31:53"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<actionGroup id="ag9" />
<action id="a2" />
<update>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:48:27"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
<update>
  <FilterExpression>Entregado_Por_Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-22T08:48:47"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Anterior" />
<update>
  <FilterExpression>Entregado_Por_Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-22T08:48:54"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Actual" />
<update>
  <FilterExpression>Entregado_Por_Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-22T08:49:01"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Anterior" />
<update>
  <FilterExpression>Entregado_Por_Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-22T08:49:08"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista" />
<update>
  <FilterExpression>Entregado_Por_Usuario_Cadista_Id = @BusinessRules_UserId</FilterExpression>
</update></c><c y="NodeSet" t="2020-12-22T17:39:05"><controller name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<view id="editForm1" />
<update>
  <Label>Solicitud Pendiente Por Entregar</Label>
</update></c><c y="NodeSet" t="2020-12-22T18:35:32"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="editForm1" />
<update>
  <HeaderText>Ver Solicitud Entregada Por Cadista</HeaderText>
</update></c><c y="NodeSet" t="2020-12-22T19:08:42"><controller name="Documento_Comentario1" />
<view id="grid1" />
<update>
  <Label>Comentarios y documentos de la solicitud entregada</Label>
</update></c><c y="NodeSet" t="2020-12-22T19:14:26"><controller name="Documento_Comentario1" />
<view id="grid1" />
<copy>
  <controller name="Documento_Comentario1" />
  <view id="grid1" />
</copy></c><c y="NodeSet" t="2020-12-22T19:14:53"><controller name="Documento_Comentario1" />
<view id="v100" />
<rename>Documento_Comentario_Solicitud_Entregado</rename></c><c y="NodeSet" t="2020-12-22T19:15:09"><controller name="Documento_Comentario1" />
<view id="grid1" />
<update>
  <Label>Documento Comentario</Label>
</update></c><c y="NodeSet" t="2020-12-23T15:29:13"><controller name="Estatus_Solicitud" />
<view id="Estatus_Solicitud_LookUp_List" />
<dataField fieldName="Significa_Pendiente_Por_Entregar" />
<update>
  <Hidden>true</Hidden>
  <DataViewShowInSummary>false</DataViewShowInSummary>
</update></c><c y="NodeSet" t="2020-12-23T15:34:46"><controller name="Estatus_Solicitud" />
<field name="Significa_Pendiente_Por_Entregar" />
<update>
  <ItemsStyle>CheckBox</ItemsStyle>
</update></c><c y="NodeSet" t="2020-12-23T15:34:57"><controller name="Estatus_Solicitud" />
<view id="grid1" />
<dataField fieldName="Significa_Surtida_Parcial" />
<move>
  <controller name="Estatus_Solicitud" />
  <view id="grid1" />
  <dataField fieldName="Significa_Pendiente_Por_Entregar" />
</move></c><c y="NodeSet" t="2020-12-23T15:35:03"><controller name="Estatus_Solicitud" />
<view id="editForm1" />
<category id="c1" />
<dataField fieldName="Significa_Surtida_Parcial" />
<move>
  <controller name="Estatus_Solicitud" />
  <view id="editForm1" />
  <category id="c1" />
  <dataField fieldName="Significa_Pendiente_Por_Entregar" />
</move></c><c y="NodeSet" t="2020-12-23T15:35:46"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Actual" />
<update>
  <HeaderText>Solicitudes Entregadas Por Cadista Dia Actual</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:00"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Dia_Anterior" />
<update>
  <HeaderText>Solicitudes Entregadas Por Cadista Dia Anterior</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:10"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Actual" />
<update>
  <HeaderText>Solicitudes Entregadas Por Cadista Mes Actual</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:16"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista_Mes_Anterior" />
<update>
  <HeaderText>Solicitudes Entregadas Por Cadista Mes Actual</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:24"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Por_Cadista" />
<update>
  <HeaderText>Solicitudes Entregadas Por Cadista Mes Actual</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:36"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Dia_Actual" />
<update>
  <HeaderText>Solicitudes Entregadas Dia Actual</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:49"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Dia_Anterior" />
<update>
  <HeaderText>Solicitudes Entregadas Dia Anterior</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:36:55"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Mes_Actual" />
<update>
  <HeaderText>Solicitudes Entregadas Dia Anterior</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:37:06"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas_Mes_Anterior" />
<update>
  <HeaderText>Solicitudes Entregadas Mes Anterior</HeaderText>
</update></c><c y="NodeSet" t="2020-12-23T15:37:14"><controller name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<view id="Solicitudes_Entregadas" />
<update>
  <HeaderText>Solicitudes Entregadas</HeaderText>
</update></c><c y="NodeSet" t="2021-01-04T14:14:12"><controller name="Grid_Grafica_Tiempo_De_Surtido_V" />
<command id="Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V" />
<update>
  <Text>
SELECT [Orden_Produccion_Id]
      ,[Numero_Orden_Produccion]
      ,[Familia_Id]
      ,[Familia_Clave]
      ,[Categoria_Id]
      ,[Categoria_Clave]
      ,[Solicitud_Id]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Estatus_Solicitud_Id]
      ,[Estatus_Solicitud]
      ,[Fecha_Solicitud]
      ,[Fecha_Entrega]
      ,[Solicitud_Fecha_Ultima_Actualizacion]
      ,[Ruta_Optima_Id]
      ,[Material_Surtido_Id]
      ,[Tiempo_Transcurrido]
      ,[Caso_Tiempo_Transcurrido]
      ,[Solicitud_Antiguedad_Dia]
      ,[Solicitud_Hora_De_Solicitud]
      ,[Entregado_Por_Id]
      ,[Entregado_Por]
      ,[Area_Entrega_Id]
      ,[Area_Entrega]
      ,[Surtidor_Responsable_Id]
      ,[Surtidor_Responsable]
      ,[Solicitado_Por_Id]
      ,[Solicitado_Por]
      ,[Tipo_Solicitud_Id]
      ,[Tipo_Solicitud]
	  ,[Area_Servicio_Id]
	  ,[Area_Servicio]
	  ,[Fecha_Solicitud_Dia]
	  ,[Solicitud_Hora]
	  ,[Fecha_Entrega_Cadista]
	  ,[Solicitud_Hora_Completa]
      ----- 
      ,[Tiempo_Transcurrido_Entrega_Cadista]
	,[Caso_Tiempo_Transcurrido_Cadista]
	,[Entregado_Por_Usuario_Cadista_Id]
	,[Entregado_Por_Usuario_Cadista]
	,[Fecha_Entrega_Cadista]
  FROM [dbo].[Grid_Grafica_Tiempo_De_Surtido_Dia_Actual_V]</Text>
</update></c><c y="NodeSet" t="2021-01-15T02:44:26"><controller name="Grid_Etiqueta_Proveedor_V" /><field name="Etiqueta_Proveedor_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-01-15T02:49:02"><controller name="Grid_Etiqueta_Proveedor_V" /><insert type="command"><CommandId>Etiqueta_Provedor</CommandId><Text>select
	"Grid_Etiqueta_Proveedor_V"."Etiqueta_Proveedor_Id" "Etiqueta_Proveedor_Id"
	,"Grid_Etiqueta_Proveedor_V"."Folio" "Folio"
	,"Grid_Etiqueta_Proveedor_V"."Proveedor_ERSL_Id" "Proveedor_ERSL_Id"
	,"Proveedor_ERSL"."Proveedor_ERSL" "Proveedor_Ersl"
	,"Grid_Etiqueta_Proveedor_V"."Orden_Compra" "Orden_Compra"
	,"Grid_Etiqueta_Proveedor_V"."Factura" "Factura"
	,"Grid_Etiqueta_Proveedor_V"."Material_Id" "Material_Id"
	,"Material"."Material" "Material"
	,"Material"."Material_Descripcion" "Material_Descripcion"
	,"Grid_Etiqueta_Proveedor_V"."Unidad_Total_Id" "Unidad_Total_Id"
	,"Unidad_Total"."Unidad_Material" "Unidad_Total"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Total" "Cantidad_Total"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Entrega" "Cantidad_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Unidad_Material_Entrega_Id" "Unidad_Material_Entrega_Id"
	,"Unidad_Entrega"."Unidad_Material" "Unidad_Material_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Por_Unidad_Entrega" "Cantidad_Por_Unidad_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Numero_Referencia" "Numero_Referencia"
	,"Grid_Etiqueta_Proveedor_V"."Ubicacion_Id" "Ubicacion_Id"
	,"Ubicacion_Almacenamiento"."Ubicacion_Almacenamiento" "Ubicacion_Almacenamiento"
	,"Grid_Etiqueta_Proveedor_V"."Transfer" "Transfer"
	,"Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Comprador_Id" "Usuario_Sistema_Comprador_Id"
	,"Usuario_Sistema_Comprador"."Usuario_Sistema" "Usuario_Sistema_Comprador"
	,"Grid_Etiqueta_Proveedor_V"."Comentarios" "Comentarios"
	,"Grid_Etiqueta_Proveedor_V"."Es_Cargado_Por_Excel" "Es_Cargado_Por_Excel"
	,"Grid_Etiqueta_Proveedor_V"."Es_Creado_Por_Formulario" "Es_Creado_Por_Formulario"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Etiqueta" "Fecha_Etiqueta"
	,"Grid_Etiqueta_Proveedor_V"."Usuario_Etiqueta" "Usuario_Etiqueta"
	,"Creado_Por"."Usuario_Sistema" "Creado_Por"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Creacion" "Fecha_Creacion"
	,"Actualizado_Por"."Usuario_Sistema" "Actualizado_Por"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Ultima_Actualizacion" "Fecha_Ultima_Actualizacion"
	,"Grid_Etiqueta_Proveedor_V"."Estatus_Registro_Id" "Estatus_Registro_Id"
	,"Estatus_Registro"."Estatus_Registro" "Estatus_Registro"
	--,"Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Id" "Usuario_Sistema_Id"
from "APP"."Etiqueta_proveedor" "Grid_Etiqueta_Proveedor_V"
	left join "APP"."Proveedor_ERSL" "Proveedor_ERSL" on "Grid_Etiqueta_Proveedor_V"."Proveedor_ERSL_Id" = "Proveedor_ERSL"."Proveedor_ERSL_Id"
	left join "APP"."Material" "Material" on "Grid_Etiqueta_Proveedor_V"."Material_Id" = "Material"."Material_Id"
	left join "APP"."Unidad_Material" "Unidad_Entrega" on "Grid_Etiqueta_Proveedor_V"."Unidad_Material_Entrega_Id" = "Unidad_Entrega"."Unidad_Material_Id"
	left join "APP"."Ubicacion_Almacenamiento" "Ubicacion_Almacenamiento" on "Grid_Etiqueta_Proveedor_V"."Ubicacion_Id" = "Ubicacion_Almacenamiento"."Ubicacion_Almacenamiento_Id"
	left join "dbo"."Estatus_Registro" "Estatus_Registro" on "Grid_Etiqueta_Proveedor_V"."Estatus_Registro_Id" = "Estatus_Registro"."Estatus_Registro_Id"
	left join "dbo"."Usuario_V" "Creado_Por" on "Grid_Etiqueta_Proveedor_V"."Creado_Por_Id" = "Creado_Por"."Usuario_Sistema_Id"
	left join "dbo"."Usuario_V" "Actualizado_Por" on "Grid_Etiqueta_Proveedor_V"."Actualizado_Por_Id" = "Actualizado_Por"."Usuario_Sistema_Id"
	left join "dbo"."Usuario_V" "Usuario_Sistema_Comprador" on "Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Comprador_Id" = "Usuario_Sistema_Comprador"."Usuario_Sistema_Id"
	left join "APP"."Unidad_Material" "Unidad_Total" on "Grid_Etiqueta_Proveedor_V"."Unidad_Total_Id" = "Unidad_Total"."Unidad_Material_Id"
</Text><Custom>false</Custom><Type>Text</Type><TableName>APP.Etiqueta_Proveedor</TableName></insert></c><c y="NodeSet" t="2021-01-15T02:49:26"><controller name="Grid_Etiqueta_Proveedor_V" /><view id="createForm1" /><update><CommandId>Etiqueta_Provedor</CommandId></update></c><c y="NodeSet" t="2021-01-15T08:26:01"><controller name="Etiqueta_Detalle_Proveedor" /><clone /></c><c y="NodeSet" t="2021-01-15T08:29:15"><controller name="Etiqueta_Detalle_Proveedor1" /><delete /></c><c y="NodeSet" t="2021-01-15T08:29:46"><controller name="Etiqueta_Proveedor" /><clone /></c><c y="NodeSet" t="2021-01-15T08:53:25"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><copy><controller name="Etiqueta_Proveedor1" /><view id="grid1" /></copy></c><c y="NodeSet" t="2021-01-15T08:53:43"><controller name="Etiqueta_Proveedor1" /><view id="v100" /><update><CommandId>Etiqueta_Proveedor_IdIdentityCommand</CommandId></update></c><c y="NodeSet" t="2021-01-15T08:54:32"><controller name="Etiqueta_Proveedor1" /><insert type="command"><CommandId>Grid_Etiqueta_Proveedor_V</CommandId><Text>select
	"Grid_Etiqueta_Proveedor_V"."Etiqueta_Proveedor_Id" "Etiqueta_Proveedor_Id"
	,"Grid_Etiqueta_Proveedor_V"."Folio" "Folio"
	,"Grid_Etiqueta_Proveedor_V"."Proveedor_ERSL_Id" "Proveedor_ERSL_Id"
	,"Proveedor_ERSL"."Proveedor_ERSL" "Proveedor_ERSL_Proveedor_ERSL"
	,"Grid_Etiqueta_Proveedor_V"."Orden_Compra" "Orden_Compra"
	,"Grid_Etiqueta_Proveedor_V"."Factura" "Factura"
	,"Grid_Etiqueta_Proveedor_V"."Material_Id" "Material_Id"
	,"Material"."Material" "Material_Material"
	,"Grid_Etiqueta_Proveedor_V"."Unidad_Total_Id" "Unidad_Total_Id"
	,"Unidad_Total"."Unidad_Material" "Unidad_Total_Unidad_Material"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Total" "Cantidad_Total"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Entrega" "Cantidad_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Unidad_Material_Entrega_Id" "Unidad_Material_Entrega_Id"
	,"Unidad_Entrega"."Unidad_Material" "Unidad_Material_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Cantidad_Por_Unidad_Entrega" "Cantidad_Por_Unidad_Entrega"
	,"Grid_Etiqueta_Proveedor_V"."Numero_Referencia" "Numero_Referencia"
	,"Grid_Etiqueta_Proveedor_V"."Ubicacion_Id" "Ubicacion_Id"
	,"Ubicacion_Almacenamiento"."Ubicacion_Almacenamiento" "Ubicacion_Almacenamiento"
	,"Grid_Etiqueta_Proveedor_V"."Transfer" "Transfer"
	,"Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Comprador_Id" "Usuario_Sistema_Comprador_Id"
	,"Usuario_Sistema_Comprador"."Usuario_Sistema" "Usuario_Sistema_Comprador"
	,"Grid_Etiqueta_Proveedor_V"."Comentarios" "Comentarios"
	,"Grid_Etiqueta_Proveedor_V"."Es_Cargado_Por_Excel" "Es_Cargado_Por_Excel"
	,"Grid_Etiqueta_Proveedor_V"."Es_Creado_Por_Formulario" "Es_Creado_Por_Formulario"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Etiqueta" "Fecha_Etiqueta"
	,"Grid_Etiqueta_Proveedor_V"."Usuario_Etiqueta" "Usuario_Etiqueta"
	,"Creado_Por"."Usuario_Sistema" "Creado_Por"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Creacion" "Fecha_Creacion"
	,"Actualizado_Por"."Usuario_Sistema" "Actualizado_Por"
	,"Grid_Etiqueta_Proveedor_V"."Fecha_Ultima_Actualizacion" "Fecha_Ultima_Actualizacion"
	,"Grid_Etiqueta_Proveedor_V"."Estatus_Registro_Id" "Estatus_Registro_Id"
	,"Estatus_Registro"."Estatus_Registro" "Estatus_Registro"
	,"Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Id" "Usuario_Sistema_Id"
from "dbo"."Grid_Etiqueta_Proveedor_V" "Grid_Etiqueta_Proveedor_V"
	left join "APP"."Proveedor_ERSL" "Proveedor_ERSL" on "Grid_Etiqueta_Proveedor_V"."Proveedor_ERSL_Id" = "Proveedor_ERSL"."Proveedor_ERSL_Id"
	left join "APP"."Material" "Material" on "Grid_Etiqueta_Proveedor_V"."Material_Id" = "Material"."Material_Id"
	left join "APP"."Unidad_Material" "Unidad_Entrega" on "Grid_Etiqueta_Proveedor_V"."Unidad_Material_Entrega_Id" = "Unidad_Entrega"."Unidad_Material_Id"
	left join "APP"."Ubicacion_Almacenamiento" "Ubicacion_Almacenamiento" on "Grid_Etiqueta_Proveedor_V"."Ubicacion_Id" = "Ubicacion_Almacenamiento"."Ubicacion_Almacenamiento_Id"
	left join "dbo"."Estatus_Registro" "Estatus_Registro" on "Grid_Etiqueta_Proveedor_V"."Estatus_Registro_Id" = "Estatus_Registro"."Estatus_Registro_Id"
	left join "dbo"."Usuario_V" "Creado_Por" on "Grid_Etiqueta_Proveedor_V"."Creado_Por_Id" = "Creado_Por"."Usuario_Sistema_Id"
	left join "dbo"."Usuario_V" "Actualizado_Por" on "Grid_Etiqueta_Proveedor_V"."Actualizado_Por_Id" = "Actualizado_Por"."Usuario_Sistema_Id"
	left join "dbo"."Usuario_V" "Usuario_Sistema_Comprador" on "Grid_Etiqueta_Proveedor_V"."Usuario_Sistema_Comprador_Id" = "Usuario_Sistema_Comprador"."Usuario_Sistema_Id"
	left join "APP"."Unidad_Material" "Unidad_Total" on "Grid_Etiqueta_Proveedor_V"."Unidad_Total_Id" = "Unidad_Total"."Unidad_Material_Id"
</Text><Custom>false</Custom><Type>Text</Type></insert></c><c y="NodeSet" t="2021-01-15T08:54:43"><controller name="Etiqueta_Proveedor1" /><view id="v100" /><update><CommandId>Grid_Etiqueta_Proveedor_V</CommandId></update></c><c y="NodeSet" t="2021-01-15T09:02:10"><controller name="Etiqueta_Proveedor1" /><insert type="field"><Name>Usuario_Sistema_Id</Name><Type>Guid</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Usuario Sistema Id</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-01-15T09:02:25"><controller name="Etiqueta_Proveedor1" /><view id="v100" /><move><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Id" /></move></c><c y="NodeSet" t="2021-01-15T09:19:10"><controller name="Etiqueta_Proveedor1" /><view id="v100" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Id = @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-01-16T12:56:29"><controller name="Etiqueta_Proveedor1" /><delete /></c><c y="NodeSet" t="2021-01-16T13:27:24"><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T13:27:31"><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T13:27:41"><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T13:28:21"><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T13:28:32"><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total" /></move></c><c y="NodeSet" t="2021-01-16T13:30:20"><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T13:30:24"><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total" /></move></c><c y="NodeSet" t="2021-01-16T13:31:19"><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T13:31:23"><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /><move><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total" /></move></c><c y="NodeSet" t="2021-01-16T13:43:21"><controller name="Etiqueta_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Usuario_Etiqueta" /><delete /></c><c y="NodeSet" t="2021-01-16T13:44:01"><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Etiqueta" /><delete /></c><c y="NodeSet" t="2021-01-16T13:44:39"><controller name="Etiqueta_Proveedor" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><Alias>Usuario_Etiqueta</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T13:45:42"><controller name="Etiqueta_Proveedor" /><view id="grid1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><Alias>Usuario_Etiqueta</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T13:48:51"><controller name="Etiqueta_Detalle_Proveedor1" /><delete /></c><c y="NodeSet" t="2021-01-16T13:49:37"><controller name="Etiqueta_Detalle_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T13:51:45"><controller name="Etiqueta_Detalle_Proveedor" /><field name="Unidad_Material_Total_Id" /><update><ItemsStyle>Lookup</ItemsStyle><ItemsDataController>Unidad_Material</ItemsDataController><ItemsDataView>Unidad_Material_LookUp_List</ItemsDataView><ItemsDataValueField>Unidad_Material_Id</ItemsDataValueField><ItemsDataTextField>Unidad_Material</ItemsDataTextField><ItemsNewDataView>createForm1</ItemsNewDataView><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2021-01-16T14:03:16"><controller name="Etiqueta_Detalle_Proveedor" /><field name="Etiqueta_Proveedor_Id" /><update><Copy /></update></c><c y="NodeSet" t="2021-01-16T14:21:26"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Etiqueta_Proveedor_Id" /><delete /></c><c y="NodeSet" t="2021-01-16T14:21:48"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><move><controller name="Etiqueta_Detalle_Proveedor" /><field name="Etiqueta_Proveedor_Id" /></move></c><c y="NodeSet" t="2021-01-16T14:21:53"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Folio" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Etiqueta_Proveedor_Id" /></move></c><c y="NodeSet" t="2021-01-16T14:22:08"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Etiqueta_Proveedor_Id" /><update><Alias>Etiqueta_Proveedor_Folio</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T14:33:42"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T14:34:16"><controller name="Etiqueta_Detalle_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Cantidad_Total" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Unidad_Material_Total_Id" /></move></c><c y="NodeSet" t="2021-01-16T14:37:12"><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="grid1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T14:37:21"><controller name="Etiqueta_Detalle_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T14:37:30"><controller name="Etiqueta_Detalle_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Etiqueta_Detalle_Proveedor" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Descripcion" /></move></c><c y="NodeSet" t="2021-01-16T14:48:17"><controller name="Etiqueta_Proveedor" /><copy><controller name="Etiqueta_Proveedor" /></copy></c><c y="NodeSet" t="2021-01-16T14:48:23"><controller name="Etiqueta_Proveedor" /><field name="Etiqueta_Proveedor" /><delete /></c><c y="NodeSet" t="2021-01-16T14:48:35"><controller name="Etiqueta_Detalle_Proveedor" /><clone /></c><c y="NodeSet" t="2021-01-16T14:48:46"><controller name="Etiqueta_Proveedor" /><clone /></c><c y="NodeSet" t="2021-01-16T15:16:14"><controller name="Etiqueta_Proveedor1" /><insert type="command"><CommandId>Grid_Etiqueta_Proveedor_Usuario_Proveedor</CommandId><Text>
SELECT
     [Etiqueta_Proveedor_Id]
    ,[Folio]
    ,[Proveedor_ERSL_Id]
    ,[Proveedor_ERSL]
    ,[Orden_Compra]
    ,[Factura]
    ,[Material_Id]
    ,[Material]
    ,[Material_Descripcion]
    ,[Cantidad_Total]
    ,[Cantidad_Entrega]
    ,[Unidad_Material_Total_Id]
    ,[Unidad_Material_Total]
    ,[Unidad_Material_Entrega_Id]
    ,[Unidad_Material_Entrega]
    ,[Cantidad_Por_Unidad_Entrega]
    ,[Numero_Referencia]
    ,[Ubicacion_Id]
    ,[Ubicacion_Almacenamiento]
    ,[Transfer]
    ,[Usuario_Sistema_Comprador_Id]
    ,[Usuario_Sistema_Comprador]
    ,[Comentarios]
    ,[Es_Cargado_Por_Excel]
    ,[Es_Creado_Por_Formulario]
    ,[Fecha_Etiqueta]
    ,[Fecha_Creacion]
    ,[Actualizado_Por]
    ,[Fecha_Ultima_Actualizacion]
    ,[Estatus_Registro_Id]
    ,[Estatus_Registro]
    ,[Usuario_Etiqueta]
    ,[Creado_Por]
    ,[Usuario_Etiqueta_Id]
    ,[Usuario_Sistema_Proveedor_Id]
FROM [dbo].[Grid_Etiqueta_Proveedor_V]</Text><Custom>false</Custom><Type>Text</Type></insert></c><c y="NodeSet" t="2021-01-16T15:16:34"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><update><CommandId>Grid_Etiqueta_Proveedor_Usuario_Proveedor</CommandId></update></c><c y="NodeSet" t="2021-01-16T15:21:17"><controller name="Etiqueta_Proveedor1" /><insert type="field"><Name>Usuario_Sistema_Proveedor_Id</Name><Type>Guid</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Usuario Sistema Proveedor Id</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-01-16T15:22:19"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><move><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Proveedor_Id" /></move></c><c y="NodeSet" t="2021-01-16T15:23:30"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Proveedor_Id = @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-01-16T15:29:04"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><update><CommandId>Grid_Etiqueta_Proveedor_Usuario_Proveedor</CommandId></update></c><c y="NodeSet" t="2021-01-16T15:34:19"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Proveedor_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:34:35"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Creado_Por" /><move><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /></move></c><c y="NodeSet" t="2021-01-16T15:34:41"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Es_Creado_Por_Formulario" /><move><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Etiqueta_Id" /></move></c><c y="NodeSet" t="2021-01-16T15:34:46"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Es_Creado_Por_Formulario" /><move><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Etiqueta" /></move></c><c y="NodeSet" t="2021-01-16T15:34:56"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Etiqueta" /><delete /></c><c y="NodeSet" t="2021-01-16T15:35:09"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Etiqueta_Id" /><move><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /></move></c><c y="NodeSet" t="2021-01-16T15:37:29"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:38:20"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:41:55"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>New</CommandName><Phase>Before</Phase><Script>
SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = NULL
SET @Usuario_Etiqueta_Id = NULL

</Script></insert></c><c y="NodeSet" t="2021-01-16T15:42:24"><controller name="Etiqueta_Proveedor1" /><rule id="r104" /><update><Script>SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = NULL
SET @Usuario_Etiqueta_Id = @BusinessRules_UserId

</Script></update></c><c y="NodeSet" t="2021-01-16T15:42:46"><controller name="Etiqueta_Proveedor1" /><rule id="r104" /><update><Script>SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
SET @Usuario_Etiqueta_Id = @BusinessRules_UserId

</Script></update></c><c y="NodeSet" t="2021-01-16T15:47:26"><controller name="Etiqueta_Proveedor1" /><rule id="r104" /><update><Script>-- Establecer datos por defectos para nuevos registros
SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
SET @Usuario_Etiqueta_Id = @BusinessRules_UserId

-- Obtener los datos del proveedor loguedo
SELECT TOP 1
    @Proveedor_ERSL_Id = PERSL.Proveedor_ERSL_Id 
    ,@Proveedor_ERSL = PERSL.Proveedor_ERSL
FROM APP.Usuario_Proveedor UP
INNER JOIN APP.Proveedor_ERSL PERSL ON PERSL.Proveedor_ERSL_Id = UP.Proveedor_ERSL_Id
WHERE UP.Usuario_Sistema_Id = @BusinessRules_UserId

</Script></update></c><c y="NodeSet" t="2021-01-16T15:49:05"><controller name="Etiqueta_Proveedor1" /><rule id="r104" /><update><Script>-- Establecer datos por defectos para nuevos registros
SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
SET @Usuario_Etiqueta_Id = @BusinessRules_UserId

-- Obtener los datos del proveedor loguedo
SELECT TOP 1
    @Proveedor_ERSL_Id = PERSL.Proveedor_ERSL_Id 
    ,@Proveedor_ERSL = PERSL.Proveedor_ERSL
FROM APP.Usuario_Proveedor UP
INNER JOIN APP.Proveedor_ERSL PERSL ON PERSL.Proveedor_ERSL_Id = UP.Proveedor_ERSL_Id
WHERE UP.Usuario_Sistema_Id = @BusinessRules_UserId

</Script><Phase>After</Phase></update></c><c y="NodeSet" t="2021-01-16T15:53:31"><controller name="Etiqueta_Proveedor1" /><rule id="r104" /><update><Script>-- Establecer datos por defectos para nuevos registros
SET @Es_Cargado_Por_Excel = 0
SET @Es_Creado_Por_Formulario = 1
SET @Fecha_Etiqueta = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
SET @Usuario_Etiqueta_Id = @BusinessRules_UserId

-- Obtener los datos del proveedor loguedo
SELECT TOP 1
    @Proveedor_ERSL_Id = PERSL.Proveedor_ERSL_Id 
    ,@Proveedor_ERSL = PERSL.Proveedor_ERSL
FROM APP.Usuario_Proveedor UP
INNER JOIN APP.Proveedor_ERSL PERSL ON PERSL.Proveedor_ERSL_Id = UP.Proveedor_ERSL_Id
WHERE UP.Usuario_Sistema_Id = @BusinessRules_UserId

</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2021-01-16T15:58:43"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:58:56"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Fecha_Etiqueta" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:59:05"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Es_Creado_Por_Formulario" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:59:14"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Es_Cargado_Por_Excel" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:59:44"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T15:59:54"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:00:24"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:00:44"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:00:56"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Fecha_Etiqueta" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:01:06"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Es_Creado_Por_Formulario" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:01:24"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Es_Cargado_Por_Excel" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:01:50"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Es_Cargado_Por_Excel" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:01:58"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Es_Creado_Por_Formulario" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:05:38"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><move><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Proveedor_Id" /></move></c><c y="NodeSet" t="2021-01-16T16:05:52"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Proveedor_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:50:11"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:51:11"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:51:21"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:51:32"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T16:53:31"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-16T19:14:28"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Code</Type><CommandName>Insert</CommandName><Phase>After</Phase></insert></c><c y="NodeSet" t="2021-01-16T19:14:44"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Code</Type><CommandName>Update</CommandName><Phase>After</Phase></insert></c><c y="NodeSet" t="2021-01-16T22:50:50"><controller name="Etiqueta_Proveedor1" /><actionGroup id="ag2" /><action id="a13" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-01-16T22:57:22"><controller name="Etiqueta_Proveedor1" /><rule id="r105" /><update><Name>Generar_Etiqueta_Detalle_Proveedor</Name></update></c><c y="NodeSet" t="2021-01-16T22:57:51"><controller name="Etiqueta_Proveedor1" /><rule id="r106" /><update><Name>Actualizar_Etiqueta_Detalle_Proveedor</Name></update></c><c y="NodeSet" t="2021-01-16T23:09:43"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id = 0 AND Es_Inactivo_Por_Edicion = 0</FilterExpression></update></c><c y="NodeSet" t="2021-01-16T23:12:00"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id = 1 AND Es_Inactivo_Por_Edicion = 0</FilterExpression></update></c><c y="NodeSet" t="2021-01-16T23:33:24"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>Calculate</CommandName><Phase>Execute</Phase><Script>SET @Transfer = 'Hola'</Script></insert></c><c y="NodeSet" t="2021-01-16T23:36:31"><controller name="Etiqueta_Proveedor1" /><field name="Material_Id" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2021-01-16T23:45:19"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor]</Script></update></c><c y="NodeSet" t="2021-01-16T23:46:24"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor])</Script></update></c><c y="NodeSet" t="2021-01-16T23:49:14"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))</Script></update></c><c y="NodeSet" t="2021-01-17T00:03:00"><controller name="Etiqueta_Proveedor1" /><field name="Actualizado_Por" /><move><controller name="Etiqueta_Proveedor1" /><field name="Fecha_Creacion" /></move></c><c y="NodeSet" t="2021-01-17T00:07:49"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = 'EFRAIN'</Script></update></c><c y="NodeSet" t="2021-01-17T00:10:12"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = 'EFRAIN'</Script></update></c><c y="NodeSet" t="2021-01-17T00:12:40"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')</Script></update></c><c y="NodeSet" t="2021-01-17T00:21:24"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer = ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),'')</Script></update></c><c y="NodeSet" t="2021-01-17T00:21:31"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer = ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),'')</Script></update></c><c y="NodeSet" t="2021-01-17T00:25:10"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer =  IIF(@ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-17T22:41:27"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="grid1" /><copy><controller name="Grid_Usuario_Rol_Logico_V" /><view id="grid1" /></copy></c><c y="NodeSet" t="2021-01-17T22:42:11"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="v100" /><rename>Usuario_Rol_Comprador_LookUp_list</rename></c><c y="NodeSet" t="2021-01-17T22:42:27"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Usuario_Sistema_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Supervisor_Lider" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Gerente_Area" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Gerente_Planta" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Contralor" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Administrador_It" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Administrador_Almacen" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:48"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Despachador" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:49"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Empleado_Planta" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:49"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Personal_QA" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:49"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Cadista" /><delete /></c><c y="NodeSet" t="2021-01-17T22:42:55"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Es_Comprador" /><delete /></c><c y="NodeSet" t="2021-01-17T22:43:29"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><update><FilterExpression>Comprador_ERSL = 1</FilterExpression></update></c><c y="NodeSet" t="2021-01-17T22:43:41"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Rol_Logico" /><delete /></c><c y="NodeSet" t="2021-01-17T22:43:50"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Comprador_ERSL" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-17T22:44:01"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><dataField fieldName="Comprador_ERSL" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-17T22:45:35"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataView>Usuario_Rol_Comprador_LookUp_list</ItemsDataView></update></c><c y="NodeSet" t="2021-01-17T22:46:18"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_Comprador_LookUp_list" /><rename>Usuario_Rol_CompradorERSL_LookUp_list</rename></c><c y="NodeSet" t="2021-01-17T22:46:50"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataView>Usuario_Rol_CompradorERSL_LookUp_list</ItemsDataView></update></c><c y="NodeSet" t="2021-01-17T23:49:17"><controller name="Grid_Usuario_Rol_Logico_V" /><field name="Usuario_Sistema_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-01-17T23:50:33"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2021-01-17T23:50:39"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_CompradorERSL_LookUp_list" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2021-01-17T23:57:46"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T00:06:08"><controller name="Etiqueta_Proveedor1" /><field name="Unidad_Material_Total_Id" /><update><ItemsDataView>Unidad_Material_LookUp_List</ItemsDataView><ItemsNewDataView /><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2021-01-18T00:06:53"><controller name="Etiqueta_Proveedor" /><field name="Unidad_Material_Total_Id" /><update><ItemsDataView>Unidad_Material_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2021-01-18T00:12:02"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer =  IIF(@ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:12:23"><controller name="Etiqueta_Proveedor1" /><view id="Etiqueta_Proveedor_LookUp_List" /><delete /></c><c y="NodeSet" t="2021-01-18T00:14:59"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:24:08"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>SET @ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)))
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer =  IIF(@ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:26:43"><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><move><controller name="Ubicacion_Almacenamiento" /><field name="Ubicacion_Almacenamiento_Id" /></move></c><c y="NodeSet" t="2021-01-18T00:26:46"><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><dataField fieldName="Ubicacion_Almacenamiento" /><move><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /></move></c><c y="NodeSet" t="2021-01-18T00:26:49"><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /><move><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><dataField fieldName="Ubicacion_Almacenamiento" /></move></c><c y="NodeSet" t="2021-01-18T00:26:56"><controller name="Ubicacion_Almacenamiento" /><view id="Ubicacion_Almacenamiento_LookUp_List" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T00:30:33"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- Establecer valor para lookup
SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:33:55"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- -- Establecer valor para lookup
--SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
-- --SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- -- Establecer texto para lookup
-- SET @Ubicacion_Almacenamiento = ISNULL((
--    SELECT TOP 1 Ubicacion_Almacenamiento
--    FROM APP.Ubicacion_Almacenamiento
--    WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
-- ),'')

-- SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)


-------------

-- Establecer valor para lookup
--SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
SET @Ubicacion_Almacenamiento_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Almacenamiento_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:35:28"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- -- Establecer valor para lookup
--SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
-- --SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- -- Establecer texto para lookup
-- SET @Ubicacion_Almacenamiento = ISNULL((
--    SELECT TOP 1 Ubicacion_Almacenamiento
--    FROM APP.Ubicacion_Almacenamiento
--    WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
-- ),'')

-- SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)


-------------

-- Establecer valor para lookup
--SET @Ubicacion_Id = (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
SET @Ubicacion_Almacenamiento_Id = 1370 --(SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Almacenamiento_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)</Script></update></c><c y="NodeSet" t="2021-01-18T00:40:18"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>
-- Establecer valor para lookup
SET @Ubicacion_Id = 1370-- (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

</Script></update></c><c y="NodeSet" t="2021-01-18T00:40:25"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- Establecer valor para lookup
SET @Ubicacion_Id = 1370-- (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

</Script></update></c><c y="NodeSet" t="2021-01-18T00:41:32"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- Establecer valor para lookup
SET @ubicacion_Id = 1370-- (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer =  IIF(@ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

</Script></update></c><c y="NodeSet" t="2021-01-18T00:42:42"><controller name="Etiqueta_Proveedor1" /><rule id="r107" /><update><CommandName>Calculateuyyuy</CommandName><Script>-- Establecer valor para lookup
SET @ubicacion_Id = 1370-- (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @ubicacion_Id
),'')

SET @Transfer =  IIF(@ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

</Script></update></c><c y="NodeSet" t="2021-01-18T00:43:36"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>Calculate</CommandName><Name>Obtener_Transfer</Name><Phase>Execute</Phase><Script>-- Establecer valor para lookup
SET @Ubicacion_Id =  (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @Ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

</Script></insert></c><c y="NodeSet" t="2021-01-18T00:48:33"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><Copy>Usuario_Comprador_Nombre_Completo = Nombre_Completo</Copy></update></c><c y="NodeSet" t="2021-01-18T00:54:46"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T00:54:59"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T00:55:11"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T00:57:08"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>Usuario_Comprador_Nombre_Completo</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T01:03:18"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T01:08:35"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_CompradorERSL_LookUp_list" /><update><FilterExpression /></update></c><c y="NodeSet" t="2021-01-18T01:10:08"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><Copy /></update></c><c y="NodeSet" t="2021-01-18T11:23:17"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><Copy>UserName = UserName</Copy></update></c><c y="NodeSet" t="2021-01-18T11:31:31"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><Copy>Usuario_Sistema_Comprador_Id = Usuario_Sistema_Id
UserName = UserName</Copy></update></c><c y="NodeSet" t="2021-01-18T11:38:26"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><CausesCalculate>true</CausesCalculate><Copy>Usuario_Sistema_Comprador_Id = Usuario_Sistema_Id
UserName = UserName</Copy></update></c><c y="NodeSet" t="2021-01-18T11:39:46"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><CausesCalculate>false</CausesCalculate><Copy>Usuario_Sistema_Comprador_Id = Usuario_Sistema_Id
UserName = UserName</Copy></update></c><c y="NodeSet" t="2021-01-18T11:43:08"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><Copy /></update></c><c y="NodeSet" t="2021-01-18T11:44:38"><controller name="Grid_Usuario_Rol_Logico_V" /><field name="Usuario_Sistema_Id" /><update><AllowNulls>false</AllowNulls></update></c><c y="NodeSet" t="2021-01-18T11:45:41"><controller name="Grid_Usuario_Rol_Logico_V" /><field name="Usuario_Sistema_Id" /><update><ReadOnly>true</ReadOnly><ShowInSummary>false</ShowInSummary></update></c><c y="NodeSet" t="2021-01-18T11:48:27"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataController /><ItemsDataView /><ItemsDataValueField /><ItemsDataTextField /></update></c><c y="NodeSet" t="2021-01-18T11:49:21"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataController>Grid_Usuario_Rol_Logico_V</ItemsDataController><ItemsDataView>Usuario_Rol_CompradorERSL_LookUp_list</ItemsDataView><ItemsDataValueField>Usuario_Sistema_Id</ItemsDataValueField><ItemsDataTextField>UserName</ItemsDataTextField></update></c><c y="NodeSet" t="2021-01-18T11:49:37"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T11:49:52"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T11:50:17"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T11:50:39"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T11:54:12"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><move><controller name="Etiqueta_Proveedor1" /><field name="UserName" /></move></c><c y="NodeSet" t="2021-01-18T11:54:25"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><move><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="UserName" /></move></c><c y="NodeSet" t="2021-01-18T11:54:33"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><move><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Proveedor_Id" /></move></c><c y="NodeSet" t="2021-01-18T11:54:42"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Sistema_Proveedor_Id" /><delete /></c><c y="NodeSet" t="2021-01-18T11:54:59"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><move><controller name="Etiqueta_Proveedor1" /><field name="UserName" /></move></c><c y="NodeSet" t="2021-01-18T11:55:09"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><category id="c1" /><move><controller name="Etiqueta_Proveedor1" /><field name="UserName" /></move></c><c y="NodeSet" t="2021-01-18T11:55:15"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><move><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="UserName" /></move></c><c y="NodeSet" t="2021-01-18T11:55:21"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><move><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="UserName" /></move></c><c y="NodeSet" t="2021-01-18T12:02:45"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataTextField>Nombre_Completo</ItemsDataTextField></update></c><c y="NodeSet" t="2021-01-18T12:04:55"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataTextField>UserName</ItemsDataTextField></update></c><c y="NodeSet" t="2021-01-18T12:22:52"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:22:58"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:23:14"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:23:49"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:24:00"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:24:12"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>UserName</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T12:29:28"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="UserName" /><delete /></c><c y="NodeSet" t="2021-01-18T12:29:38"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="UserName" /><delete /></c><c y="NodeSet" t="2021-01-18T12:29:48"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="UserName" /><delete /></c><c y="NodeSet" t="2021-01-18T12:31:46"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsStyle /></update></c><c y="NodeSet" t="2021-01-18T12:33:19"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><move><controller name="Etiqueta_Proveedor1" /><field name="UserName" /></move></c><c y="NodeSet" t="2021-01-18T12:33:24"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><move><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="UserName" /></move></c><c y="NodeSet" t="2021-01-18T12:47:25"><controller name="Etiqueta_Proveedor1" /><command id="Grid_Etiqueta_Proveedor_Usuario_Proveedor" /><update><Text>SELECT
     [Etiqueta_Proveedor_Id]
    ,[Folio]
    ,[Proveedor_ERSL_Id]
    ,[Proveedor_ERSL]
    ,[Orden_Compra]
    ,[Factura]
    ,[Material_Id]
    ,[Material]
    ,[Material_Descripcion]
    ,[Cantidad_Total]
    ,[Cantidad_Entrega]
    ,[Unidad_Material_Total_Id]
    ,[Unidad_Material_Total]
    ,[Unidad_Material_Entrega_Id]
    ,[Unidad_Material_Entrega]
    ,[Cantidad_Por_Unidad_Entrega]
    ,[Numero_Referencia]
    ,[Ubicacion_Id]
    ,[Ubicacion_Almacenamiento]
    ,[Transfer]
    ,[Usuario_Sistema_Comprador_Id]
    ,[UserName]
    ,[Comentarios]
    ,[Es_Cargado_Por_Excel]
    ,[Es_Creado_Por_Formulario]
    ,[Fecha_Etiqueta]
    ,[Fecha_Creacion]
    ,[Actualizado_Por]
    ,[Fecha_Ultima_Actualizacion]
    ,[Estatus_Registro_Id]
    ,[Estatus_Registro]
    ,[Usuario_Etiqueta]
    ,[Creado_Por]
    ,[Usuario_Etiqueta_Id]
    ,[Usuario_Sistema_Proveedor_Id]
FROM [dbo].[Grid_Etiqueta_Proveedor_V]</Text></update></c><c y="NodeSet" t="2021-01-18T12:51:10"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsStyle>Lookup</ItemsStyle></update></c><c y="NodeSet" t="2021-01-18T12:51:23"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="UserName" /><delete /></c><c y="NodeSet" t="2021-01-18T13:08:31"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataTextField>Nombre_Completo</ItemsDataTextField></update></c><c y="NodeSet" t="2021-01-18T13:08:50"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>Usuario_Comprador_Nombre_Completo</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:09:14"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>Usuario_Comprador_Nombre_Completo</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:09:46"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><Alias>Usuario_Comprador_Nombre_Completo</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:12:57"><controller name="Etiqueta_Proveedor1" /><command id="Grid_Etiqueta_Proveedor_Usuario_Proveedor" /><update><Text>SELECT
     [Etiqueta_Proveedor_Id]
    ,[Folio]
    ,[Proveedor_ERSL_Id]
    ,[Proveedor_ERSL]
    ,[Orden_Compra]
    ,[Factura]
    ,[Material_Id]
    ,[Material]
    ,[Material_Descripcion]
    ,[Cantidad_Total]
    ,[Cantidad_Entrega]
    ,[Unidad_Material_Total_Id]
    ,[Unidad_Material_Total]
    ,[Unidad_Material_Entrega_Id]
    ,[Unidad_Material_Entrega]
    ,[Cantidad_Por_Unidad_Entrega]
    ,[Numero_Referencia]
    ,[Ubicacion_Id]
    ,[Ubicacion_Almacenamiento]
    ,[Transfer]
    ,[Usuario_Sistema_Comprador_Id]
    ,[Usuario_comprador_Nombre_Completo]
    ,[Comentarios]
    ,[Es_Cargado_Por_Excel]
    ,[Es_Creado_Por_Formulario]
    ,[Fecha_Etiqueta]
    ,[Fecha_Creacion]
    ,[Actualizado_Por]
    ,[Fecha_Ultima_Actualizacion]
    ,[Estatus_Registro_Id]
    ,[Estatus_Registro]
    ,[Usuario_Etiqueta]
    ,[Creado_Por]
    ,[Usuario_Etiqueta_Id]
    ,[Usuario_Sistema_Proveedor_Id]
FROM [dbo].[Grid_Etiqueta_Proveedor_V]</Text></update></c><c y="NodeSet" t="2021-01-18T13:15:07"><controller name="Grid_Usuario_Rol_Logico_V" /><view id="Usuario_Rol_CompradorERSL_LookUp_list" /><update><FilterExpression>Comprador_ERSL = 1</FilterExpression></update></c><c y="NodeSet" t="2021-01-18T13:44:45"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Ubicacion_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:44:56"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Transfer" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:53:40"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Ubicacion_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:53:45"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Ubicacion_Id" /><update><ReadOnly /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:54:53"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Transfer" /><update><ReadOnly /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T13:55:05"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Ubicacion_Id" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T14:12:25"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="grid1" /><dataField fieldName="Unidad_Material_Total_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T14:12:44"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Sistema_Comprador_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-18T14:13:04"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="grid1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-01-23T00:28:55"><controller name="Etiqueta_Detalle_Proveedor1" /><rule id="r104" /><update><CommandName>Report</CommandName></update></c><c y="NodeSet" t="2021-01-23T00:29:15"><controller name="Etiqueta_Detalle_Proveedor1" /><actionGroup id="ag2" /><action id="a100" /><update><CommandName>Report</CommandName><Confirmation>_controller=Impresion_Etiqueta_Proveedor
_title=Impresion Etiqueta Proveedor
</Confirmation></update></c><c y="NodeSet" t="2021-02-23T15:50:15"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag3" /><action id="a100" /><update><Data>UPDATE tep SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
FROM APP.Temporal_Etiqueta_Proveedor tep 
INNER JOIN dbo.Estatus_Procesamiento ep 
ON tep.Estatus_Procesamiento_Id = ep.Estatus_Procesamiento_Id
WHERE ep.Significa_Pendiente_Por_Procesar=1

</Data><Roles /></update></c><c y="NodeSet" t="2021-02-23T15:57:50"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag3" /><action id="a102" /><move><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag3" /><action id="a100" /></move></c><c y="NodeSet" t="2021-02-23T15:58:23"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag3" /><action id="a100" /><update><HeaderText>"Borrar pendientes de procesar"</HeaderText><Data>UPDATE tep SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
FROM APP.Temporal_Etiqueta_Proveedor tep 
INNER JOIN dbo.Estatus_Procesamiento ep 
ON tep.Estatus_Procesamiento_Id = ep.Estatus_Procesamiento_Id
WHERE ep.Significa_Pendiente_Por_Procesar=1

</Data></update></c><c y="NodeSet" t="2021-02-23T16:00:29"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag3" /><action id="a100" /><update><Data>UPDATE tep SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
FROM APP.Temporal_Etiqueta_Proveedor tep 
INNER JOIN dbo.Estatus_Procesamiento ep 
ON tep.Estatus_Procesamiento_Id = ep.Estatus_Procesamiento_Id
WHERE ep.Significa_Pendiente_Por_Procesar=1

</Data><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-02-23T16:01:01"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a100" /><update><Data>UPDATE APP.Temporal_Etiqueta_Proveedor SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Data><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-02-23T16:02:15"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><insert type="action"><CommandName>SQL</CommandName><HeaderText>"Borrar pendientes de procesar"</HeaderText><CausesValidation>true</CausesValidation><Data>UPDATE tep SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
FROM APP.Temporal_Etiqueta_Proveedor tep 
INNER JOIN dbo.Estatus_Procesamiento ep 
ON tep.Estatus_Procesamiento_Id = ep.Estatus_Procesamiento_Id
WHERE ep.Significa_Pendiente_Por_Procesar=1

</Data></insert></c><c y="NodeSet" t="2021-02-23T16:02:28"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a103" /><update><Data>UPDATE tep SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
FROM APP.Temporal_Etiqueta_Proveedor tep 
INNER JOIN dbo.Estatus_Procesamiento ep 
ON tep.Estatus_Procesamiento_Id = ep.Estatus_Procesamiento_Id
WHERE ep.Significa_Pendiente_Por_Procesar=1

</Data><CssClass>material-icon-delete</CssClass></update></c><c y="NodeSet" t="2021-02-23T16:03:51"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a100" /><update><Data>UPDATE APP.Temporal_Etiqueta_Proveedor SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Data><Roles /></update></c><c y="NodeSet" t="2021-02-23T16:04:01"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a100" /><update><HeaderText>"Borrar seleccionado"</HeaderText><Data>UPDATE APP.Temporal_Etiqueta_Proveedor SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Data></update></c><c y="NodeSet" t="2021-02-23T17:11:53"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><update><FilterExpression>Estatus_Registro_Id = 1 AND Usuario_Sistema_Proveedor_Id =  @BusinessRules_UserId

</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T17:19:13"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T17:19:36"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><update><FilterExpression>Estatus_Registro_Id = 1 AND Creado_Por_Id =  @BusinessRules_UserId

</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T17:31:22"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T17:33:08"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T21:34:02"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="gridCargados" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T21:34:26"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T21:34:40"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="createForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-23T22:13:25"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Nombre_Proveedor_Mx" /><move><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Mensaje_Sistema_Id" /></move></c><c y="NodeSet" t="2021-02-23T22:13:25"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Nombre_Proveedor_Mx" /><move><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Estatus_Procesamiento_Id" /></move></c><c y="NodeSet" t="2021-02-23T22:13:25"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Nombre_Proveedor_Mx" /><move><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Error" /></move></c><c y="NodeSet" t="2021-02-23T22:13:33"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Error" /><move><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridUltimaCarga" /><dataField fieldName="Carga" /></move></c><c y="NodeSet" t="2021-02-23T22:21:18"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="gridCargados" /><update><FilterExpression>Estatus_Registro_Id = 1
AND (
    Estatus_Procesamiento_Id=0 
    OR
    Estatus_Procesamiento_Id&gt;0 
)
AND Creado_Por_Id =  @BusinessRules_UserId


</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:22:09"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridSinProcesar" /><update><FilterExpression>Estatus_Registro_Id = 1
AND
Estatus_Procesamiento_Id = 0 
AND 
</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:22:38"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridSinProcesar" /><update><FilterExpression>Estatus_Registro_Id = 1
AND Estatus_Procesamiento_Id = 0 
AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:23:46"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridProcesadosExitosos" /><update><FilterExpression>Estatus_Registro_Id = 1
AND Significa_Procesado_Exitosamente = 1
AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:23:57"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridProcesadosExitosos" /><update><FilterExpression>Estatus_Registro_Id = 1
AND Significa_Procesado_Exitosamente = 1
AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:24:10"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridProcesadosExitosos" /><update><FilterExpression>Estatus_Registro_Id = 1
AND Significa_Procesado_Exitosamente = 1
AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:25:23"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridNoProcesados" /><update><FilterExpression>Estatus_Registro_Id = 1
AND Estatus_Procesamiento_Id = 2
AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2021-02-23T22:26:01"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Proveedor_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-02-25T20:28:35"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridCargados" /><delete /></c><c y="NodeSet" t="2021-02-25T20:28:36"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridNoProcesados" /><delete /></c><c y="NodeSet" t="2021-02-25T20:28:36"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="gridProcesadosExitosos" /><delete /></c><c y="NodeSet" t="2021-02-25T20:28:43"><controller name="Temporal_Etiqueta_Proveedor1" /><view id="Temporal_Etiqueta_Proveedor_LookUp_List" /><delete /></c><c y="NodeSet" t="2021-02-25T20:28:53"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="gridUltimaCarga" /><delete /></c><c y="NodeSet" t="2021-02-25T20:29:01"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="gridNoProcesados" /><delete /></c><c y="NodeSet" t="2021-02-25T20:29:01"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="gridProcesadosExitosos" /><delete /></c><c y="NodeSet" t="2021-02-25T20:29:07"><controller name="Temporal_Etiqueta_Proveedor1_2" /><view id="Temporal_Etiqueta_Proveedor_LookUp_List" /><delete /></c><c y="NodeSet" t="2021-02-25T20:31:40"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridCargados" /><delete /></c><c y="NodeSet" t="2021-02-25T20:31:40"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridUltimaCarga" /><delete /></c><c y="NodeSet" t="2021-02-25T20:50:58"><controller name="Temporal_Etiqueta_Proveedor1" /><clone /></c><c y="NodeSet" t="2021-02-25T20:52:12"><controller name="Temporal_Etiqueta_Proveedor1_2" /><clone /></c><c y="NodeSet" t="2021-02-25T20:56:14"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridSinProcesar" /><dataField fieldName="Creado_Por_Id" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-25T20:56:28"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridProcesadosExitosos" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-25T20:56:38"><controller name="Temporal_Etiqueta_Proveedor1_1" /><view id="gridNoProcesados" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-25T21:11:58"><controller name="Temporal_Etiqueta_Proveedor1_3" /><update><Handler>Handler_Ultima_Carga_Usuario_cooper</Handler></update></c><c y="NodeSet" t="2021-02-25T21:20:18"><controller name="Temporal_Etiqueta_Proveedor1_3" /><actionGroup id="ag100" /><action id="a101" /><update><CommandArgument>ExecCS01</CommandArgument></update></c><c y="NodeSet" t="2021-02-25T21:20:38"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r105" /><delete /></c><c y="NodeSet" t="2021-02-25T21:29:49"><controller name="Temporal_Etiqueta_Proveedor1_3" /><actionGroup id="ag100" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecCS01</CommandArgument><HeaderText>"P"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2021-02-25T21:36:20"><controller name="Temporal_Etiqueta_Proveedor1_3" /><insert type="rule"><Type>Code</Type><CommandName>Custom</CommandName><CommandArgument>ExecCS02</CommandArgument><Name>Prcesar_Temporal</Name><Phase>Execute</Phase></insert></c><c y="NodeSet" t="2021-02-25T21:39:24"><controller name="Temporal_Etiqueta_Proveedor1_3" /><actionGroup id="ag100" /><action id="a101" /><update><CommandArgument>ExecCS02</CommandArgument></update></c><c y="NodeSet" t="2021-02-25T22:37:48"><controller name="Temporal_Etiqueta_Proveedor1_2_1" /><actionGroup id="ag100" /><action id="a101" /><update><CommandArgument>ExecCS02</CommandArgument></update></c><c y="NodeSet" t="2021-02-25T22:41:28"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r104" /><delete /></c><c y="NodeSet" t="2021-02-25T22:54:59"><controller name="Temporal_Etiqueta_Proveedor1_3" /><actionGroup id="ag100" /><action id="a104" /><delete /></c><c y="NodeSet" t="2021-02-25T23:43:59"><controller name="Etiqueta_Proveedor1_1" /><clone /></c><c y="NodeSet" t="2021-02-25T23:49:53"><controller name="Etiqueta_Proveedor1_1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Etiqueta_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-02-25T23:52:57"><controller name="Etiqueta_Proveedor1_1_1" /><view id="grid1" /><update><CommandId>command1</CommandId><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Etiqueta_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-02-26T00:11:08"><controller name="Etiqueta_Proveedor1_1_1" /><update><Handler>Handler_Ultima_Carga_Etiqueta_Usuario_Cooper</Handler></update></c><c y="NodeSet" t="2021-02-26T00:37:14"><controller name="Etiqueta_Proveedor1_1_1" /><rule id="r107" /><delete /></c><c y="NodeSet" t="2021-02-26T00:46:12"><controller name="Etiqueta_Proveedor1_1_1" /><insert type="rule"><Type>Code</Type><CommandName>Report</CommandName><CommandArgument>ExecCS06</CommandArgument><Name>Generar_PDF</Name><Phase>Execute</Phase></insert></c><c y="NodeSet" t="2021-02-26T01:19:57"><controller name="Temporal_Etiqueta_Proveedor1_2_1" /><clone /></c><c y="NodeSet" t="2021-02-26T01:21:16"><controller name="Temporal_Etiqueta_Proveedor1_2_1_1" /><view id="gridCargados" /><update><FilterExpression>Estatus_Registro_Id = 1
AND (
    Estatus_Procesamiento_Id=0 
    OR
    Estatus_Procesamiento_Id&gt;0 
)
AND Creado_Por_Id =  @BusinessRules_UserId


</FilterExpression></update></c><c y="NodeSet" t="2021-02-26T23:52:49"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="editForm1" /><dataField fieldName="Es_Cargado_Por_Excel" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-26T23:52:59"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="editForm1" /><dataField fieldName="Es_Creado_Por_Formulario" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-26T23:54:42"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="editForm1" /><dataField fieldName="Fecha_Etiqueta" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-26T23:54:51"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-26T23:58:03"><controller name="Etiqueta_Detalle_Proveedor1" /><view id="editForm1" /><dataField fieldName="Es_Inactivo_Por_Edicion" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-27T00:17:18"><controller name="Etiqueta_Detalle_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataView>Usuario_Rol_CompradorERSL_LookUp_list</ItemsDataView></update></c><c y="NodeSet" t="2021-02-27T12:15:41"><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /><copy><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /></copy></c><c y="NodeSet" t="2021-02-27T12:16:12"><controller name="Tamanio_Etiqueta" /><view id="v100" /><rename>TamanioEtiquetaProveedor_LookUp_List</rename></c><c y="NodeSet" t="2021-02-27T12:16:45"><controller name="Impresion_Etiqueta_Proveedor" /><field name="Tamanio_Etiqueta_Id" /><update><ItemsDataView>TamanioEtiquetaProveedor_LookUp_List</ItemsDataView></update></c><c y="NodeSet" t="2021-02-27T12:17:27"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><move><controller name="Tamanio_Etiqueta" /><field name="Aplica_Para_Etiqueta_Proveedor" /></move></c><c y="NodeSet" t="2021-02-27T12:17:58"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><update><FilterExpression>Estatus_Registro_Id = 1 AND Aplica_Para_Etiqueta_Proveedor = 1</FilterExpression></update></c><c y="NodeSet" t="2021-02-27T12:24:32"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Aplica_Para_Etiqueta_Proveedor" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-27T12:24:47"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Base_En_Pulgadas" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-27T12:26:38"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Alto_En_Pulgadas" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-02-27T12:27:57"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:28:16"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:28:21"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:28:36"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:28:47"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data></update></c><c y="NodeSet" t="2021-02-27T12:29:07"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:30:05"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:30:15"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:30:36"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T12:30:48"><controller name="Tamanio_Etiqueta" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Tamanio_Etiqueta 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Tamanio_Etiqueta_Id = @Tamanio_Etiqueta_Id

</Data></update></c><c y="NodeSet" t="2021-02-27T13:02:36"><controller name="Tipo_Etiqueta" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:03:15"><controller name="Tipo_Etiqueta" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:03:52"><controller name="Tipo_Etiqueta" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:04:00"><controller name="Tipo_Etiqueta" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:04:15"><controller name="Tipo_Etiqueta" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:04:26"><controller name="Tipo_Etiqueta" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:04:58"><controller name="Tipo_Etiqueta" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:05:27"><controller name="Tipo_Etiqueta" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>administrador</Roles></update></c><c y="NodeSet" t="2021-02-27T13:05:33"><controller name="Tipo_Etiqueta" /><actionGroup id="ag9" /><action id="a2" /><update><Data>UPDATE APP.Tipo_Etiqueta SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Tipo_Etiqueta_Id = @Tipo_Etiqueta_Id</Data></update></c><c y="NodeSet" t="2021-02-27T13:55:23"><controller name="Etiqueta_Proveedor1" /><insert type="rule"><Type>Code</Type><CommandName>ReportAsPdf</CommandName><CommandArgument>ExecCS06</CommandArgument><Name>Generar_Pdf_Etiqueta</Name><Phase>Execute</Phase></insert></c><c y="NodeSet" t="2021-02-27T13:56:29"><controller name="Etiqueta_Proveedor1" /><actionGroup id="ag2" /><insert type="action"><CommandName>ReportAsPdf</CommandName><CommandArgument>ExecCS06</CommandArgument><HeaderText>"Descargar"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2021-02-27T13:56:44"><controller name="Etiqueta_Proveedor1" /><actionGroup id="ag2" /><action id="a100" /><update><Confirmation>_controller=Impresion_Etiqueta_Proveedor
_title=Impresion Etiqueta Proveedor</Confirmation></update></c><c y="NodeSet" t="2021-02-27T14:19:39"><controller name="Etiqueta_Proveedor1" /><actionGroup id="ag2" /><action id="a100" /><delete /></c><c y="NodeSet" t="2021-02-27T14:19:48"><controller name="Etiqueta_Proveedor1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2021-03-01T21:06:09"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:06:20"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag1" /><action id="a3" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:06:31"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:06:43"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:06:56"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:07:06"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag2" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:07:22"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:07:31"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:07:40"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:07:48"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag4" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:08:12"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:08:22"><controller name="Grid_Usuario_Rol_Logico_V" /><actionGroup id="ag9" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-03-01T21:21:13"><controller name="Etiqueta_Proveedor1" /><field name="Material_Id" /><update><AllowNulls>true</AllowNulls></update></c><c y="NodeSet" t="2021-03-01T21:21:23"><controller name="Etiqueta_Proveedor1" /><field name="Material_Id" /><update><AllowNulls>false</AllowNulls></update></c><c y="NodeSet" t="2021-03-01T21:22:33"><controller name="Etiqueta_Proveedor1" /><field name="Material_Id" /><update><Default /></update></c><c y="NodeSet" t="2021-03-01T21:22:57"><controller name="Etiqueta_Proveedor1" /><field name="Cantidad_Total" /><update><Default /></update></c><c y="NodeSet" t="2021-03-01T21:25:17"><controller name="Etiqueta_Proveedor1" /><field name="Cantidad_Entrega" /><update><Default /></update></c><c y="NodeSet" t="2021-03-01T21:27:16"><controller name="Etiqueta_Proveedor1" /><field name="Unidad_Material_Total_Id" /><update><Default /></update></c><c y="NodeSet" t="2021-03-01T21:28:24"><controller name="Etiqueta_Proveedor1" /><field name="Usuario_Sistema_Comprador_Id" /><update><AllowNulls>false</AllowNulls></update></c><c y="NodeSet" t="2021-03-01T21:29:56"><controller name="Etiqueta_Proveedor1" /><field name="Cantidad_Por_Unidad_Entrega" /><update><AllowNulls>false</AllowNulls></update></c><c y="NodeSet" t="2021-03-01T21:45:19"><controller name="Proveedor_ERSL" /><actionGroup id="ag1" /><action id="a2" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:45:27"><controller name="Proveedor_ERSL" /><actionGroup id="ag1" /><action id="a3" /><update><Data>UPDATE APP.Proveedor_ERSL SET Estatus_Registro_Id = 3, 
Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Proveedor_ERSL_Id = @Proveedor_ERSL_Id
</Data><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:45:35"><controller name="Proveedor_ERSL" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:45:42"><controller name="Proveedor_ERSL" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:45:50"><controller name="Proveedor_ERSL" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:46:07"><controller name="Proveedor_ERSL" /><actionGroup id="ag2" /><action id="a2" /><update><Data>UPDATE APP.Proveedor_ERSL SET Estatus_Registro_Id = 3, 
Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Proveedor_ERSL_Id = @Proveedor_ERSL_Id</Data><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:46:20"><controller name="Proveedor_ERSL" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:46:28"><controller name="Proveedor_ERSL" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:46:37"><controller name="Proveedor_ERSL" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:46:44"><controller name="Proveedor_ERSL" /><actionGroup id="ag4" /><action id="a2" /><update><Data>UPDATE APP.Proveedor_ERSL SET Estatus_Registro_Id = 3, 
Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Proveedor_ERSL_Id = @Proveedor_ERSL_Id</Data><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:47:01"><controller name="Proveedor_ERSL" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:47:08"><controller name="Proveedor_ERSL" /><actionGroup id="ag9" /><action id="a2" /><update><Data>UPDATE APP.Proveedor_ERSL SET Estatus_Registro_Id = 3, 
Actualizado_Por_Id = @BusinessRules_UserId ,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Proveedor_ERSL_Id = @Proveedor_ERSL_Id</Data><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-03-01T21:52:07"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Fecha_Etiqueta" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:52:22"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Fecha_Etiqueta" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:52:36"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:52:38"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:52:59"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Usuario_Etiqueta_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:53:13"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Es_Inactivo_Por_Edicion" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:53:19"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Es_Creado_Por_Formulario" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:53:25"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Es_Cargado_Por_Excel" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:53:53"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><ReadOnly>true</ReadOnly><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:54:03"><controller name="Etiqueta_Detalle_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Proveedor_ERSL_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T21:58:34"><controller name="Etiqueta_Detalle_Proveedor1_2" /><field name="Usuario_Sistema_Comprador_Id" /><update><ItemsDataView>Usuario_Rol_CompradorERSL_LookUp_list</ItemsDataView></update></c><c y="NodeSet" t="2021-03-01T22:52:38"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:52:45"><controller name="Etiqueta_Proveedor1" /><view id="grid1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:52:57"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:53:06"><controller name="Etiqueta_Proveedor1" /><view id="editForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:53:24"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:53:31"><controller name="Etiqueta_Proveedor1" /><view id="createForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:06"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:12"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:22"><controller name="Etiqueta_Proveedor1_1" /><view id="editForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:29"><controller name="Etiqueta_Proveedor1_1" /><view id="editForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:47"><controller name="Etiqueta_Proveedor1_1" /><view id="createForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:54:53"><controller name="Etiqueta_Proveedor1_1" /><view id="createForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:55:11"><controller name="Etiqueta_Proveedor1_1_1" /><view id="grid1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:55:17"><controller name="Etiqueta_Proveedor1_1_1" /><view id="grid1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:55:27"><controller name="Etiqueta_Proveedor1_1_1" /><view id="editForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:55:35"><controller name="Etiqueta_Proveedor1_1_1" /><view id="editForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:55:45"><controller name="Etiqueta_Proveedor1_1_1" /><view id="editForm1" /><dataField fieldName="Carga" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:02"><controller name="Etiqueta_Proveedor1_1_1" /><view id="createForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:09"><controller name="Etiqueta_Proveedor1_1_1" /><view id="createForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:23"><controller name="Etiqueta_Proveedor1_2" /><view id="grid1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:31"><controller name="Etiqueta_Proveedor1_2" /><view id="grid1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:42"><controller name="Etiqueta_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:48"><controller name="Etiqueta_Proveedor1_2" /><view id="editForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:56:59"><controller name="Etiqueta_Proveedor1_2" /><view id="createForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:57:08"><controller name="Etiqueta_Proveedor1_2" /><view id="createForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:57:38"><controller name="Etiqueta_Proveedor2" /><view id="grid1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:57:44"><controller name="Etiqueta_Proveedor2" /><view id="grid1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:57:59"><controller name="Etiqueta_Proveedor2" /><view id="editForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:58:17"><controller name="Etiqueta_Proveedor2" /><view id="editForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:58:29"><controller name="Etiqueta_Proveedor2" /><view id="createForm1" /><dataField fieldName="Transaccion_Procesamiento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T22:58:36"><controller name="Etiqueta_Proveedor2" /><view id="createForm1" /><dataField fieldName="Carga" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-01T23:38:21"><controller name="Temporal_Etiqueta_Proveedor1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Import</CommandName><Phase>Before</Phase><Script>alert("Se va a iniciar una importación");</Script></insert></c><c y="NodeSet" t="2021-03-01T23:39:05"><controller name="Temporal_Etiqueta_Proveedor1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Import</CommandName><Phase>After</Phase><Script>Alert("Ya terminó la importación!!!!");</Script></insert></c><c y="NodeSet" t="2021-03-01T23:45:11"><controller name="Temporal_Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>Import</CommandName><Phase>After</Phase><Script>UPDATE APP.Temporal_Etiqueta_Proveedor SET 
  Referencia = ''
</Script></insert></c><c y="NodeSet" t="2021-03-01T23:45:29"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r109" /><update><Script>UPDATE APP.Temporal_Etiqueta_Proveedor SET 
  Referencia = ''
</Script></update></c><c y="NodeSet" t="2021-03-01T23:49:42"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r109" /><update><CommandName>Upload</CommandName><Script>UPDATE APP.Temporal_Etiqueta_Proveedor SET 
  Referencia = ''
</Script></update></c><c y="NodeSet" t="2021-03-02T00:27:06"><controller name="Temporal_Etiqueta_Proveedor1_3" /><insert type="rule"><Type>JavaScript</Type><CommandName>Import</CommandName><Phase>After</Phase><Script>Console.log("HOla-- Terminando");
alert("HOla-- Terminando");</Script></insert></c><c y="NodeSet" t="2021-03-02T00:30:41"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r104" /><update><Script>console.log("HOla-- Terminando");
alert("HOla-- Terminando");</Script></update></c><c y="NodeSet" t="2021-03-02T00:33:16"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r104" /><update><CommandName>Upload</CommandName><Script>console.log("HOla-- Terminando");
alert("HOla-- Terminando");</Script></update></c><c y="NodeSet" t="2021-03-02T01:06:19"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r104" /><delete /></c><c y="NodeSet" t="2021-03-02T01:07:21"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r107" /><delete /></c><c y="NodeSet" t="2021-03-02T01:07:27"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2021-03-02T01:07:33"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><delete /></c><c y="NodeSet" t="2021-03-02T07:33:40"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   --,Carga=1
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-02T07:45:19"><controller name="Temporal_Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>Import</CommandName><Phase>Before</Phase><Script>SET @Session_Carga = 100</Script></insert></c><c y="NodeSet" t="2021-03-02T07:45:48"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Carga = @Session_Carga
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-02T07:51:46"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><insert type="action"><CommandName>SQL</CommandName><CausesValidation>true</CausesValidation><Data>SET @Session_Carga = 100</Data><WhenLastCommandName>Import</WhenLastCommandName><WhenLastCommandArgument>createForm1</WhenLastCommandArgument></insert></c><c y="NodeSet" t="2021-03-02T07:56:54"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = 100</Script></update></c><c y="NodeSet" t="2021-03-02T07:59:35"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r107" /><update><Script>-- debug
--DECLARE @Session_Carga INT
-- end debug

-- SET @Session_Carga = 100</Script></update></c><c y="NodeSet" t="2021-03-02T07:59:46"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a104" /><update><Data>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = 100</Data></update></c><c y="NodeSet" t="2021-03-02T07:59:54"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a104" /><update><Data>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = 100</Data></update></c><c y="NodeSet" t="2021-03-02T08:02:32"><controller name="Temporal_Etiqueta_Proveedor1" /><actionGroup id="ag100" /><action id="a104" /><update><Data>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = 100

set @Result_ShowAlert = 
    'Primary key of supplier "' + @Session_Carga + 
    '" has been stored in the user session. ' +
    'You will be redirected to products.'</Data></update></c><c y="NodeSet" t="2021-03-02T08:06:56"><controller name="Temporal_Etiqueta_Proveedor1" /><insert type="rule"><Type>Sql</Type><CommandName>Select</CommandName><View>gridUltimaCarga</View><Name>Declarar_Carga</Name><Phase>After</Phase><Script>SET @Session_Carga = 100</Script></insert></c><c y="NodeSet" t="2021-03-02T08:07:26"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = 100</Script></update></c><c y="NodeSet" t="2021-03-02T08:11:25"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id = 
),0)</Script></update></c><c y="NodeSet" t="2021-03-02T08:12:07"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
--DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id = 
),0)</Script></update></c><c y="NodeSet" t="2021-03-02T08:12:48"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
--DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id =  @BusinessRules_UserId
),0)

SET @Session_Carga = @Session_Carga + 1</Script></update></c><c y="NodeSet" t="2021-03-02T08:13:01"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
--DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id =  @BusinessRules_UserId
),0)

SET @Session_Carga = @Session_Carga + 1</Script></update></c><c y="NodeSet" t="2021-03-02T08:17:12"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>-- debug
DECLARE @Session_Carga INT
DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id =  @BusinessRules_UserId
),0)

SET @Session_Carga = @Session_Carga + 1

SET @Session_Transaccion_Procesamiento = NEWID()



</Script></update></c><c y="NodeSet" t="2021-03-02T08:18:11"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Carga = @Session_Carga
   ,Transaccion_Procesamiento = @Session_Transaccion_Procesamiento
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-02T08:20:29"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Carga = @Session_Carga
   ,Transaccion_Procesamiento = @Session_Transaccion_Procesamiento
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-02T09:08:16"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Creado_Por_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-03-02T09:15:29"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Proveedor_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-03-03T00:03:50"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><CommandId>command1</CommandId><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Proveedor_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-03-03T00:03:52"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Usuario_Sistema_Proveedor_Id =  @BusinessRules_UserId
</FilterExpression></update></c><c y="NodeSet" t="2021-03-03T00:08:56"><controller name="Etiqueta_Proveedor1_1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2021-03-03T00:09:09"><controller name="Etiqueta_Proveedor1_1" /><view id="editForm1" /><update><CommandId>command1</CommandId></update></c><c y="NodeSet" t="2021-03-03T00:18:34"><controller name="Temporal_Etiqueta_Proveedor1_3" /><insert type="rule"><Type>Sql</Type><CommandName>Select</CommandName><View>gridUltimaCarga</View><Phase>After</Phase><Script>-- debug
DECLARE @Session_Carga INT
DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id =  @BusinessRules_UserId
),0)

SET @Session_Carga = @Session_Carga + 1

SET @Session_Transaccion_Procesamiento = NEWID()



</Script></insert></c><c y="NodeSet" t="2021-03-03T00:19:06"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r104" /><update><Script>-- debug
DECLARE @Session_Carga INT
DECLARE @Session_Transaccion_Procesamiento UNIQUEIDENTIFIER
-- end debug

SET @Session_Carga = ISNULL((
   SELECT TOP 1 MAX(Carga)
   FROM APP.Temporal_Etiqueta_Proveedor
   WHERE Creado_Por_Id =  @BusinessRules_UserId
),0)

SET @Session_Carga = @Session_Carga + 1

SET @Session_Transaccion_Procesamiento = NEWID()



</Script><Name>Declarar_Carga</Name></update></c><c y="NodeSet" t="2021-03-03T00:19:34"><controller name="Temporal_Etiqueta_Proveedor1" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
   ,Carga = @Session_Carga
   ,Transaccion_Procesamiento = @Session_Transaccion_Procesamiento
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-03T00:19:58"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(CONVERT(VARCHAR(16),GETDATE(),121),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(CONVERT(VARCHAR(16),GETDATE(),121),NULL)
   ,Carga = @Session_Carga
   ,Transaccion_Procesamiento = @Session_Transaccion_Procesamiento
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-03T00:20:07"><controller name="Temporal_Etiqueta_Proveedor1_3" /><rule id="r101" /><update><Script>UPDATE 
   APP.Temporal_Etiqueta_Proveedor
SET
    Creado_Por_Id = @BusinessRules_UserId
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(CONVERT(VARCHAR(16),GETDATE(),121),NULL)
   ,Actualizado_Por_Id = @BusinessRules_UserId
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(CONVERT(VARCHAR(16),GETDATE(),121),NULL)
   ,Carga = @Session_Carga
   ,Transaccion_Procesamiento = @Session_Transaccion_Procesamiento
WHERE
   Temporal_Etiqueta_Proveedor_Id = @Temporal_Etiqueta_Proveedor_Id</Script></update></c><c y="NodeSet" t="2021-03-07T21:45:46"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = [Material];
var Ubicacion_Formulario = '';
// variables para el exec principal
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Ruta_Optima_Id = [Ruta_Optima_Id]
var Material_Id = [Material_Id]
var Cantidad_Solicitado = [Cantidad_Solicitado]
var Cantidad_Entregado = [Cantidad_Entregado]
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id]
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id]


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();

if(valor &gt; 0){
    [Cantidad_Entregado] = valor;
    Cantidad_Entregado = [Cantidad_Entregado];
    Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
    if(debug == 1){
        console.log("Valor: " + valor);
        console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

// if([Cantidad_Entregado] &lt; 0){
if(valor &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
/*else
  if ([Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado] &lt; [Cantidad_Solicitado]){
    fnDebug("El stock en la ubicación seleccionada es menor a cantidad solicitado.")
    this.preventDefault();    
    $app.alert('El stock en la ubicación seleccionada es menor a la cantidad solicitada. Seleccione otra ubicación o Agregué otras ubicaciones de surtido.');
  }*/
else
    if(valor &gt; [Cantidad_Solicitado]){
        if(debug == 1){
            console.log("&gt; Valor: " + valor);
            console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
        }
        this.preventDefault();
  	    alertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");   	;
  	    $("#Cantidad_Material_Entregado").focus();
    
    } else {
    
        // antes de ejecutar la BR preguntamos por confirmación del usuario;
        $app.execute({
            controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
            , filter: [
                { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
                { field: 'Material_Id', operator: '=', value: [Material_Id] }
            ]
            , dataType: 'json'
            , done: function (result) {

                if (debug === 1) {
                    console.log("result: ");
                    console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
                }
                
                arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
                var Ubicaciones_Origen = Ubicacion_Formulario;
                arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
                
                $app.confirm(
                    "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                    //,  
                    // () =&gt; {
                    //     // accion si cancela el usuario
                    //     if(debug == true){
                    //         console.log("Se canceló la operación por el usuario");
                    //     } 
                    // }
                ).done( function(e) {
                    if(debug == true){
                        console.log("Se confirmó la operación");
                    } 
                    
                    // Ejecutamos BR ExecCS01
                    $app.execute({
                        controller: 'Grid_Ruta_Optima_A_Ejecutar_V'
                        , command: 'Custom'
                        , argument: 'ExecCS01'
                        , values: [
                            { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                            ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                            ,{ name: 'Material_Id', newValue: Material_Id }      
                            ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                            ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                            ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                            ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                        ]
                        ,done: function (result) {
                            eval(result.clientScript); 
                            if(debug == 10){
                                console.log("ExecCS01 result : ");
                                console.log(result);
                            } 
                            // cerrar el modal que se se queda abierto
                            $app.touch.contextDataView().discard();
                            $app.touch.contextDataView().cancel();
                        }
                    });
                });
				

            }
        });
        
        this.preventDefault();
    }
</Script></update></c><c y="NodeSet" t="2021-03-07T21:59:56"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag2" /><action id="a6" /><update><WhenClientScript>¿Desea continuar con la salida del material {Material} de la ubicación {Ubicacion_Almacenamiento_De_Surtido}?</WhenClientScript></update></c><c y="NodeSet" t="2021-03-07T22:01:27"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><actionGroup id="ag2" /><action id="a6" /><update><Confirmation>¿Desea continuar con la salida del material, de la ubicación {Ubicacion_Almacenamiento_De_Surtido}?</Confirmation></update></c><c y="NodeSet" t="2021-03-07T22:29:43"><controller name="Movimiento_Detalle1" /><insert type="field"><Name>Material_Stock_Total_Piso</Name><Type>Decimal</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Material Stock Total Piso</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-03-07T22:49:15"><controller name="Movimiento_Detalle1" /><field name="Devolucion_Material_Id" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2021-03-07T22:55:03"><controller name="Movimiento_Detalle1" /><field name="Cantidad_A_Devolver" /><update><CausesCalculate>true</CausesCalculate></update></c><c y="NodeSet" t="2021-03-07T22:56:12"><controller name="Movimiento_Detalle1" /><insert type="rule"><Type>Sql</Type><CommandName>Calculate</CommandName><Phase>Execute</Phase><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></insert></c><c y="NodeSet" t="2021-03-07T22:57:20"><controller name="Movimiento_Detalle1" /><insert type="rule"><Type>Sql</Type><CommandName>Insert|Update</CommandName><Phase>Before</Phase><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></insert></c><c y="NodeSet" t="2021-03-07T22:57:26"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-07T23:38:34"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Estilo_Configuracion_Impresion" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-07T23:43:19"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><move><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /></move></c><c y="NodeSet" t="2021-03-07T23:44:30"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><dataField fieldName="Material_Stock_Total_Piso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-07T23:44:41"><controller name="Movimiento_Detalle1" /><view id="editForm1" /><category id="c1" /><move><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /></move></c><c y="NodeSet" t="2021-03-07T23:44:47"><controller name="Movimiento_Detalle1" /><view id="editForm1" /><dataField fieldName="Material_Stock_Total_Piso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-07T23:50:01"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-07T23:50:05"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id 
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-07T23:50:08"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id 
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-07T23:50:17"><controller name="Movimiento_Detalle1" /><rule id="r100" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id  
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-07T23:55:28"><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /><update><AllowNulls>false</AllowNulls></update></c><c y="NodeSet" t="2021-03-08T00:12:29"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag2" /><action id="a6" /><update><WhenClientScript /><Confirmation>¿Desea continuar con la salida del material {Material} de la ubicación {Ubicacion_Almacenamiento_De_Surtido}?</Confirmation></update></c><c y="NodeSet" t="2021-03-08T00:16:14"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="createForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-08T00:21:25"><controller name="Movimiento_Detalle1" /><insert type="rule"><Type>Sql</Type><CommandName>Calculate</CommandName><Phase>Execute</Phase><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id  
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></insert></c><c y="NodeSet" t="2021-03-08T00:21:30"><controller name="Movimiento_Detalle1" /><rule id="r100" /><delete /></c><c y="NodeSet" t="2021-03-08T00:26:07"><controller name="Bitacora_Captura_Sap" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-03-08T00:26:36"><controller name="Bitacora_Captura_Sap1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-03-08T00:26:47"><controller name="Bitacora_Captura_Sap1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:27:30"><controller name="Bitacora_Captura_Sap1_1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:27:50"><controller name="Bitacora_Captura_Sap1_2" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:28:09"><controller name="Bitacora_Captura_Sap1_2_1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-03-08T00:28:17"><controller name="Bitacora_Captura_Sap1_2_1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:28:38"><controller name="Bitacora_Captura_Sap2" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:29:01"><controller name="Bitacora_Captura_Sap2_1" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:29:28"><controller name="Bitacora_Captura_Sap2_2" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-08T00:29:50"><controller name="Bitacora_Captura_Sap2_3" /><field name="Es_Captura_Manual_Con_Pdf" /><update><ItemsStyle>CheckBox</ItemsStyle><WriteRoles>hidden</WriteRoles></update></c><c y="NodeSet" t="2021-03-09T15:14:20"><controller name="Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>/*
-- Establecer valor para lookup
SET @Ubicacion_Id =  (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @Ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

*/


SELECT 
    @Ubicacion_Id = Ubicacion_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento = Ubicacion_Almacenamiento
    ,@Transfer = Transfer
FROM [dbo].[fn_Obtener_Transfer_Etiqueta_Proveedor](ISNULL(@Material_Id,0))


</Script></update></c><c y="NodeSet" t="2021-03-09T15:40:43"><controller name="Etiqueta_Proveedor1" /><rule id="r108" /><update><Script>/*
-- Establecer valor para lookup
SET @Ubicacion_Id =  (SELECT [dbo].[fn_Obtener_Ultima_Ubicacion_Etiqueta_Proveedor](ISNULL(@Material_Id,0)));
--SET @ubicacion_Almacenamiento_Id = @Ubicacion_Id

-- Establecer texto para lookup
SET @Ubicacion_Almacenamiento = ISNULL((
   SELECT TOP 1 Ubicacion_Almacenamiento
   FROM APP.Ubicacion_Almacenamiento
   WHERE Ubicacion_Almacenamiento_Id = @Ubicacion_Id
),'')

SET @Transfer =  IIF(@Ubicacion_Id &gt; 0,ISNULL(SUBSTRING(@Ubicacion_Almacenamiento,1, 2),''),NULL)

*/


SELECT 
    @Ubicacion_Id = Ubicacion_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento = Ubicacion_Almacenamiento
    ,@Transfer = Transfer
FROM [dbo].[fn_Obtener_Transfer_Etiqueta_Proveedor](ISNULL(@Material_Id,0))


</Script></update></c><c y="NodeSet" t="2021-03-09T15:47:38"><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /><update><CodeDefault>0</CodeDefault></update></c><c y="NodeSet" t="2021-03-09T15:57:43"><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /><update><Label>Total Stock En Piso</Label></update></c><c y="NodeSet" t="2021-03-09T15:58:50"><controller name="Movimiento_Detalle1" /><view id="editForm1" /><dataField fieldName="Material_Stock_Total_Piso" /><update><ReadOnly>true</ReadOnly><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-03-09T15:59:28"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><category id="c1" /><move><controller name="Movimiento_Detalle1" /><field name="Material_Stock_Total_Piso" /></move></c><c y="NodeSet" t="2021-03-09T16:00:46"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Devolucion_Material_Id" /><move><controller name="Movimiento_Detalle1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Stock_Total_Piso" /></move></c><c y="NodeSet" t="2021-03-09T16:01:00"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Dev_Material_Descripcion" /><move><controller name="Movimiento_Detalle1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Stock_Total_Piso" /></move></c><c y="NodeSet" t="2021-03-09T16:04:53"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-09T16:06:00"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-09T16:07:37"><controller name="Movimiento_Detalle1" /><rule id="r105" /><move><controller name="Movimiento_Detalle1" /><rule id="r102" /></move></c><c y="NodeSet" t="2021-03-09T16:07:40"><controller name="Movimiento_Detalle1" /><rule id="r102" /><update><Script>DECLARE @Devolucion_Ubicacion_Origen_Id_ INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id_ = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
),0)



DECLARE @Material_Stock_Total_Piso_ NUMERIC(15,4)
SET @Material_Stock_Total_Piso_ = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id_
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Material_Stock_Total_Piso_ &lt; @Cantidad_A_Devolver
BEGIN	
    --SET @Devolucion_Material_Id = NULL
    SET @BusinessRules_PreventDefault = 1
    SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
    --SET @Result_ShowAlert = @Result_ShowViewMessage
    RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-03-09T16:08:55"><controller name="Movimiento_Detalle1" /><rule id="r105" /><update><Script>-- DECLARE @Devolucion_Ubicacion_Origen_Id INT  -- APP.Tipo_Ubicacion.Tipo_Ubicacion_Id
SET @Devolucion_Ubicacion_Origen_Id = ISNULL((
    SELECT TOP 1 Devolucion_Ubicacion_Origen_Id 
    FROM APP.Movimiento 
    WHERE Movimiento_Id = @Movimiento_Id
),0)

DECLARE @Clave_ INT 
SET @Clave_ = ISNULL((
    SELECT TOP 1 Clave_Tipo_Ubicacion
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id
),0)



-- DECLARE @Material_Stock_Total_Piso NUMERIC(15,4)
SET @Material_Stock_Total_Piso = ISNULL((
    SELECT TOP 1 SUM(mus_.Total_Stock) 
	FROM [APP].[Material_Ubicacion_Stock] mus_ 
	INNER JOIN APP.Tipo_Ubicacion tu ON (
    	mus_.Tipo_Ubicacion_Id = tu.Tipo_Ubicacion_Id
    	AND tu.Es_Piso = 1
	    AND tu.Clave_Tipo_Ubicacion = @Clave_
	    AND tu.Estatus_Registro_Id = 1
	)
	AND mus_.Material_Id = @Devolucion_Material_Id
	AND mus_.Tipo_Ubicacion_Id = @Devolucion_Ubicacion_Origen_Id
    AND mus_.Estatus_Registro_Id = 1
),0);


IF @Cantidad_A_Devolver IS NOT NULL BEGIN
  IF @Material_Stock_Total_Piso &lt; @Cantidad_A_Devolver
  BEGIN	
	  --SET @Devolucion_Material_Id = NULL
	  SET @BusinessRules_PreventDefault = 1
	  SET @Result_ShowViewMessage = 'La cantidad a devolver debe ser menor o igual a la cantidad de existencia en piso. La cantidad Actual es ' + CONVERT(VARCHAR(30),CONVERT(NUMERIC(15,4),@Material_Stock_Total_Piso))
	  SET @Result_ShowAlert = @Result_ShowViewMessage
	  RETURN
  END 
END
</Script></update></c><c y="NodeSet" t="2021-03-09T16:10:17"><controller name="Movimiento_Detalle1" /><view id="createForm1" /><dataField fieldName="Material_Stock_Total_Piso" /><update><ReadOnly>true</ReadOnly><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:40:03"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:40:23"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:40:30"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido" /><view id="grid1" /><dataField fieldName="Unidad_Material_Entregado_Id" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-08T10:40:52"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:41:05"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:41:17"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:41:27"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:41:50"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:41:59"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:42:11"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:42:22"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:42:35"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:42:48"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:42:57"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:43:10"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:43:20"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:43:36"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2_1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:43:46"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2_1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:43:58"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2_1" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:44:08"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2_1" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:44:19"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2_1" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:44:35"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:44:45"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:44:59"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:45:08"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:45:20"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:45:37"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3_1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:45:49"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3_1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:46:01"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3_1" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:46:10"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3_1" /><view id="Material_Ubicacion_Almacenamiento_De_Surtido_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:46:20"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3_1" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:46:49"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:47:07"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:48:03"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T10:48:25"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T11:38:14"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T11:45:39"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T11:48:35"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material" /><move><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-08T11:50:38"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><move><controller name="Material_Ubicacion_Almacen_V" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-08T11:50:41"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><dataField fieldName="Material_Id" /><move><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-08T11:50:43"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><move><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-04-08T11:50:49"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_Con_Stock" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-08T11:51:53"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><field name="Ubicacion_Almacenamiento_Id" /><update><Copy>Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-08T11:55:28"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = [Material];
var Ubicacion_Formulario = '';
// variables para el exec principal
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Ruta_Optima_Id = [Ruta_Optima_Id]
var Material_Id = [Material_Id]
var Cantidad_Solicitado = [Cantidad_Solicitado]
var Cantidad_Entregado = [Cantidad_Entregado]
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id]
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id]
var Material_Ubicacion_Stock_Id = [Material_Ubicacion_Stock_Id]

if(debug == 10){
  console.log(Material_Ubicacion_Stock_Id);
} 


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();

if(valor &gt; 0){
    [Cantidad_Entregado] = valor;
    Cantidad_Entregado = [Cantidad_Entregado];
    Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
    if(debug == 1){
        console.log("Valor: " + valor);
        console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

// if([Cantidad_Entregado] &lt; 0){
if(valor &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
/*else
  if ([Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado] &lt; [Cantidad_Solicitado]){
    fnDebug("El stock en la ubicación seleccionada es menor a cantidad solicitado.")
    this.preventDefault();    
    $app.alert('El stock en la ubicación seleccionada es menor a la cantidad solicitada. Seleccione otra ubicación o Agregué otras ubicaciones de surtido.');
  }*/
else
    if(valor &gt; [Cantidad_Solicitado]){
        if(debug == 1){
            console.log("&gt; Valor: " + valor);
            console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
        }
        this.preventDefault();
  	    alertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");   	;
  	    $("#Cantidad_Material_Entregado").focus();
    
    } else {
    
        // antes de ejecutar la BR preguntamos por confirmación del usuario;
        $app.execute({
            controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
            , filter: [
                { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
                { field: 'Material_Id', operator: '=', value: [Material_Id] }
            ]
            , dataType: 'json'
            , done: function (result) {

                if (debug === 1) {
                    console.log("result: ");
                    console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
                }
                
                arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
                var Ubicaciones_Origen = Ubicacion_Formulario;
                arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
                
                $app.confirm(
                    "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                    //,  
                    // () =&gt; {
                    //     // accion si cancela el usuario
                    //     if(debug == true){
                    //         console.log("Se canceló la operación por el usuario");
                    //     } 
                    // }
                ).done( function(e) {
                    if(debug == true){
                        console.log("Se confirmó la operación");
                    } 
                    
                    // Ejecutamos BR ExecCS01
                    $app.execute({
                        controller: 'Grid_Ruta_Optima_A_Ejecutar_V'
                        , command: 'Custom'
                        , argument: 'ExecCS01'
                        , values: [
                            { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                            ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                            ,{ name: 'Material_Id', newValue: Material_Id }      
                            ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                            ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                            ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                            ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                          	,{ name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id }      
                        ]
                        ,done: function (result) {
                            eval(result.clientScript); 
                            if(debug == 10){
                                console.log("ExecCS01 result : ");
                                console.log(result);
                            } 
                            // cerrar el modal que se se queda abierto
                            $app.touch.contextDataView().discard();
                            $app.touch.contextDataView().cancel();
                        }
                    });
                });
				

            }
        });
        
        this.preventDefault();
    }
</Script></update></c><c y="NodeSet" t="2021-04-08T11:59:36"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><delete /></c><c y="NodeSet" t="2021-04-08T11:59:44"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><category id="c1" /><move><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-08T11:59:48"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T21:10:39"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id
</Copy></update></c><c y="NodeSet" t="2021-04-10T21:13:02"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><ItemsDataController>Material_Ubicacion_Almacen_V</ItemsDataController><ItemsDataView>Material_Ubicacion_Almacen_Con_Stock</ItemsDataView><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T21:13:14"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T21:31:56"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = '';
var Ubicacion_Formulario = '';

var Material_Surtido_Id = [Material_Surtido_Id];
var Material_Id = [Material_Id];
var Cantidad_Solicitado = [Cantidad_Solicitado];
var Cantidad_Entregado = [Cantidad_Entregado];
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];
var Material_Ubicacion_Stock_Id = [Material_Ubicacion_Stock_Id];


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
if (valor &gt; 0) {
  [Cantidad_Entregado] = valor;
  Cantidad_Entregado = [Cantidad_Entregado];
  Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
  if (debug == 1) {
    console.log("Valor: " + valor);
    console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
  }
}

if (valor &lt; 0) {
  this.preventDefault();
  //alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  $app.alert("Ingrese cantidad de material válido para surtir");
  $("#Cantidad_Material_Entregado").focus();
}
else{

  if (valor &gt; [Cantidad_Solicitado]) {
    if (debug == 1) {
      console.log("&gt; Valor: " + valor);
      console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
    }
    this.preventDefault();
    //ertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");
    $app.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.");
    $("#Cantidad_Material_Entregado").focus();
  }
  else {

    $app.execute({
      controller: 'Material_Ubicacion_Almacenamiento_De_Surtido1'
      , filter: [
          { field: 'Material_Surtido_Id', operator: '=', value: [Material_Surtido_Id] },
          { field: 'Material_Id', operator: '=', value: [Material_Id] }
      ]
      , dataType: 'json'
      , done: function (result) {

        if (debug === 1) {
            console.log("result: ");
            console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido1);
        }
        
        arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido1;

        var Ubicaciones_Origen = Ubicacion_Formulario;

        arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });

        $app.confirm(
          "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
        ).done( function(e) {
          if(debug == true){
            console.log("Se confirmó la operación");
          } 
                
          // Ejecutamos BR ExecCS01
          $app.execute({
            controller: 'Grid_Material_Surtido_A_Ejecutar_V'
            , command: 'Custom'
            , argument: 'ExecCS01'
            , values: [
            { name: 'Material_Surtido_Id', newValue: Material_Surtido_Id }
              , { name: 'Material_Id', newValue: Material_Id }
              , { name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }
              , { name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }
              , { name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }
              , { name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }
              , { name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id }
              
            ]
            , done: function (result) {
              eval(result.clientScript);
              if (debug == 10) {
                console.log("ExecCS01 result : ");
                console.log(result);
              }

              // cerrar el modal que se se queda abierto
              $app.touch.contextDataView().discard();
              $app.touch.contextDataView().cancel();

            } // END done Grid_Material_Surtido_A_Ejecutar_V
          }); // END execute Grid_Material_Surtido_A_Ejecutar_V
            
        }); // END $app.confirm(

      } // END done execute Material_Ubicacion_Almacenamiento_De_Surtido1
    }); // END execute Material_Ubicacion_Almacenamiento_De_Surtido1

    //------------------------------
  }

  this.preventDefault();
}
  


</Script></update></c><c y="NodeSet" t="2021-04-10T21:32:05"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = '';
var Ubicacion_Formulario = '';

var Material_Surtido_Id = [Material_Surtido_Id];
var Material_Id = [Material_Id];
var Cantidad_Solicitado = [Cantidad_Solicitado];
var Cantidad_Entregado = [Cantidad_Entregado];
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];
var Material_Ubicacion_Stock_Id = [Material_Ubicacion_Stock_Id];


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
if (valor &gt; 0) {
  [Cantidad_Entregado] = valor;
  Cantidad_Entregado = [Cantidad_Entregado];
  Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
  if (debug == 1) {
    console.log("Valor: " + valor);
    console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
  }
}

if (valor &lt; 0) {
  this.preventDefault();
  //alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  $app.alert("Ingrese cantidad de material válido para surtir");
  $("#Cantidad_Material_Entregado").focus();
}
else{

  if (valor &gt; [Cantidad_Solicitado]) {
    if (debug == 1) {
      console.log("&gt; Valor: " + valor);
      console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
    }
    this.preventDefault();
    //ertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");
    $app.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.");
    $("#Cantidad_Material_Entregado").focus();
  }
  else {

    $app.execute({
      controller: 'Material_Ubicacion_Almacenamiento_De_Surtido1'
      , filter: [
          { field: 'Material_Surtido_Id', operator: '=', value: [Material_Surtido_Id] },
          { field: 'Material_Id', operator: '=', value: [Material_Id] }
      ]
      , dataType: 'json'
      , done: function (result) {

        if (debug === 1) {
            console.log("result: ");
            console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido1);
        }
        
        arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido1;

        var Ubicaciones_Origen = Ubicacion_Formulario;

        arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });

        $app.confirm(
          "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
        ).done( function(e) {
          if(debug == true){
            console.log("Se confirmó la operación");
          } 
                
          // Ejecutamos BR ExecCS01
          $app.execute({
            controller: 'Grid_Material_Surtido_A_Ejecutar_V'
            , command: 'Custom'
            , argument: 'ExecCS01'
            , values: [
            { name: 'Material_Surtido_Id', newValue: Material_Surtido_Id }
              , { name: 'Material_Id', newValue: Material_Id }
              , { name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }
              , { name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }
              , { name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }
              , { name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }
              , { name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id }
              
            ]
            , done: function (result) {
              eval(result.clientScript);
              if (debug == 10) {
                console.log("ExecCS01 result : ");
                console.log(result);
              }

              // cerrar el modal que se se queda abierto
              $app.touch.contextDataView().discard();
              $app.touch.contextDataView().cancel();

            } // END done Grid_Material_Surtido_A_Ejecutar_V
          }); // END execute Grid_Material_Surtido_A_Ejecutar_V
            
        }); // END $app.confirm(

      } // END done execute Material_Ubicacion_Almacenamiento_De_Surtido1
    }); // END execute Material_Ubicacion_Almacenamiento_De_Surtido1

    //------------------------------
  }

  this.preventDefault();
}
  


</Script></update></c><c y="NodeSet" t="2021-04-10T21:32:57"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id
</Copy></update></c><c y="NodeSet" t="2021-04-10T21:33:36"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_LookUp_List" /><move><controller name="Material_Ubicacion_Almacen_V" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-10T21:33:43"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Almacen_LookUp_List" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T21:34:36"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><field name="Ubicacion_Almacenamiento_Id" /><update><Copy>Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_stock_Id = Material_Ubicacion_stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T21:35:44"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><rule id="r105" /><update><Script>// Abrimos ventana

this.preventDefault();
$app.touch.show({
    controller: 'Material_Ubicacion_Almacenamiento_De_Surtido1_1',
    startCommand: 'New',
    startArgument: 'createForm1',
    defaultValues: [
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}      
    ]
  	,filter:[
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}
  ]
});

</Script></update></c><c y="NodeSet" t="2021-04-10T21:35:51"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><rule id="r105" /><update><Script>// Abrimos ventana

this.preventDefault();
$app.touch.show({
    controller: 'Material_Ubicacion_Almacenamiento_De_Surtido1_1',
    startCommand: 'New',
    startArgument: 'createForm1',
    defaultValues: [
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}      
    ]
  	,filter:[
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}
  ]
});

</Script></update></c><c y="NodeSet" t="2021-04-10T21:36:05"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><rule id="r105" /><update><Script>// Abrimos ventana

this.preventDefault();
$app.touch.show({
    controller: 'Material_Ubicacion_Almacenamiento_De_Surtido1_1',
    startCommand: 'New',
    startArgument: 'createForm1',
    defaultValues: [
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}      
    ]
  	,filter:[
      { name: 'Material_Surtido_Id', value:[Master.Material_Surtido_Id]}
      ,{ name: 'Material_Id', value:[Master.Material_Id]}
      ,{ name: 'Material', value:[Master.Material]}
  ]
});

</Script></update></c><c y="NodeSet" t="2021-04-10T22:09:39"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T22:11:43"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T22:11:48"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T22:12:02"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T22:29:19"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-10T22:49:34"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><field name="Ubicacion_Almacenamiento_Id" /><update><Copy>Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id
</Copy></update></c><c y="NodeSet" t="2021-04-10T22:54:16"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /><update><Alias>Ubicacion_Almacenamiento</Alias><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T23:15:47"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id
</Copy><ContextFields /></update></c><c y="NodeSet" t="2021-04-10T23:16:28"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag3" /><action id="a100" /><update><HeaderText>Ubicación de Material en Almacén</HeaderText></update></c><c y="NodeSet" t="2021-04-10T23:16:35"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag3" /><action id="a1" /><update><HeaderText>Otra Ubicación en Almacén</HeaderText></update></c><c y="NodeSet" t="2021-04-10T23:16:44"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag3" /><action id="a100" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><actionGroup id="ag3" /><action id="a1" /></move></c><c y="NodeSet" t="2021-04-10T23:17:29"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy><ContextFields>Material_Id = Material_Id</ContextFields></update></c><c y="NodeSet" t="2021-04-10T23:18:14"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido3" /><actionGroup id="ag2" /><action id="a4" /><update><Confirmation>¿Desea continuar con la salida del material, de la ubicación {Ubicacion_Almacenamiento_De_Surtido}?</Confirmation></update></c><c y="NodeSet" t="2021-04-10T23:59:29"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T23:59:41"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-10T23:59:55"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:09:24"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:09:54"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:10:07"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:10:34"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:10:48"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:11:03"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:13:42"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-11T00:20:46"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><actionGroup id="ag3" /><action id="a1" /><update><HeaderText>Otra Ubicación en Almacén</HeaderText></update></c><c y="NodeSet" t="2021-04-11T00:20:57"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><actionGroup id="ag3" /><action id="a100" /><update><HeaderText>Ubicación de Material en Almacén</HeaderText></update></c><c y="NodeSet" t="2021-04-11T00:21:02"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><actionGroup id="ag3" /><action id="a100" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><actionGroup id="ag3" /><action id="a1" /></move></c><c y="NodeSet" t="2021-04-11T00:21:24"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy><ContextFields /></update></c><c y="NodeSet" t="2021-04-11T00:21:59"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy><ContextFields>Material_Id=Material_Id</ContextFields></update></c><c y="NodeSet" t="2021-04-11T00:22:15"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-11T00:27:51"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><actionGroup id="ag2" /><action id="a4" /><update><Confirmation>¿Desea continuar con la ejecución del material {Material} con la ubicación {Ubicacion_Almacenamiento_De_Surtido}?</Confirmation></update></c><c y="NodeSet" t="2021-04-11T20:57:20"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = [Material];
var Ubicacion_Formulario = '';
// variables para el exec principal
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Ruta_Optima_Id = [Ruta_Optima_Id]
var Material_Id = [Material_Id]
var Cantidad_Solicitado = [Cantidad_Solicitado]
var Cantidad_Entregado = [Cantidad_Entregado]
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id]
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id]
var Material_Ubicacion_Stock_Id = [Material_Ubicacion_Stock_Id]

if(debug == 10){
  console.log(Material_Ubicacion_Stock_Id);
} 


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();

if(valor &gt; 0){
    [Cantidad_Entregado] = valor;
    Cantidad_Entregado = [Cantidad_Entregado];
    Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
    if(debug == 1){
        console.log("Valor: " + valor);
        console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

// if([Cantidad_Entregado] &lt; 0){
if(valor &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
/*else
  if ([Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado] &lt; [Cantidad_Solicitado]){
    fnDebug("El stock en la ubicación seleccionada es menor a cantidad solicitado.")
    this.preventDefault();    
    $app.alert('El stock en la ubicación seleccionada es menor a la cantidad solicitada. Seleccione otra ubicación o Agregué otras ubicaciones de surtido.');
  }*/
else
    if(valor &gt; [Cantidad_Solicitado]){
        if(debug == 1){
            console.log("&gt; Valor: " + valor);
            console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
        }
        this.preventDefault();
  	    alertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");   	;
  	    $("#Cantidad_Material_Entregado").focus();
    
    } else {
    
        // antes de ejecutar la BR preguntamos por confirmación del usuario;
        $app.execute({
            controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
            , filter: [
                { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
                { field: 'Material_Id', operator: '=', value: [Material_Id] },
                { field: 'Estatus_Registro_Id', operator: '=', value: [Estatus_Registro_Id] }
            ]
            , dataType: 'json'
            , done: function (result) {

                if (debug === 1) {
                    console.log("result: ");
                    console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
                }
                
                arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
                var Ubicaciones_Origen = Ubicacion_Formulario;
                arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
                
                $app.confirm(
                    "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                    //,  
                    // () =&gt; {
                    //     // accion si cancela el usuario
                    //     if(debug == true){
                    //         console.log("Se canceló la operación por el usuario");
                    //     } 
                    // }
                ).done( function(e) {
                    if(debug == true){
                        console.log("Se confirmó la operación");
                    } 
                    
                    // Ejecutamos BR ExecCS01
                    $app.execute({
                        controller: 'Grid_Ruta_Optima_A_Ejecutar_V'
                        , command: 'Custom'
                        , argument: 'ExecCS01'
                        , values: [
                            { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                            ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                            ,{ name: 'Material_Id', newValue: Material_Id }      
                            ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                            ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                            ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                            ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                          	,{ name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id }      
                        ]
                        ,done: function (result) {
                            eval(result.clientScript); 
                            if(debug == 10){
                                console.log("ExecCS01 result : ");
                                console.log(result);
                            } 
                            // cerrar el modal que se se queda abierto
                            $app.touch.contextDataView().discard();
                            $app.touch.contextDataView().cancel();
                        }
                    });
                });
				

            }
        });
        
        this.preventDefault();
    }
</Script></update></c><c y="NodeSet" t="2021-04-11T21:03:43"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><rule id="r101" /><update><Script>var material_A_Surtir = [Material];
var Ubicacion_Formulario = '';
// variables para el exec principal
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Ruta_Optima_Id = [Ruta_Optima_Id]
var Material_Id = [Material_Id]
var Cantidad_Solicitado = [Cantidad_Solicitado]
var Cantidad_Entregado = [Cantidad_Entregado]
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id]
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id]
var Material_Ubicacion_Stock_Id = [Material_Ubicacion_Stock_Id]

if(debug == 10){
  console.log(Material_Ubicacion_Stock_Id);
} 


//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();

if(valor &gt; 0){
    [Cantidad_Entregado] = valor;
    Cantidad_Entregado = [Cantidad_Entregado];
    Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
    if(debug == 1){
        console.log("Valor: " + valor);
        console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

// if([Cantidad_Entregado] &lt; 0){
if(valor &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
/*else
  if ([Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado] &lt; [Cantidad_Solicitado]){
    fnDebug("El stock en la ubicación seleccionada es menor a cantidad solicitado.")
    this.preventDefault();    
    $app.alert('El stock en la ubicación seleccionada es menor a la cantidad solicitada. Seleccione otra ubicación o Agregué otras ubicaciones de surtido.');
  }*/
else
    if(valor &gt; [Cantidad_Solicitado]){
        if(debug == 1){
            console.log("&gt; Valor: " + valor);
            console.log("Cantidad_Solicitado: " + [Cantidad_Solicitado]);
        }
        this.preventDefault();
  	    alertify.alert("La cantidad a surtir no debe ser mayor a la cantidad solicitado.").setHeader("Mensaje");   	;
  	    $("#Cantidad_Material_Entregado").focus();
    
    } else {
    
        // antes de ejecutar la BR preguntamos por confirmación del usuario;
        $app.execute({
            controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
            , filter: [
                { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
                { field: 'Material_Id', operator: '=', value: [Material_Id] },
                { field: 'Estatus_Registro_Id', operator: '=', value: 1 } 
            ]
            , dataType: 'json'
            , done: function (result) {

                if (debug === 1) {
                    console.log("result: ");
                    console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
                }
                
                arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
                var Ubicaciones_Origen = Ubicacion_Formulario;
                arregloUbicaciones.forEach(function(elemento, indice, array){ Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
                
                $app.confirm(
                    "Dará salida del material " + material_A_Surtir + " de las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                    //,  
                    // () =&gt; {
                    //     // accion si cancela el usuario
                    //     if(debug == true){
                    //         console.log("Se canceló la operación por el usuario");
                    //     } 
                    // }
                ).done( function(e) {
                    if(debug == true){
                        console.log("Se confirmó la operación");
                    } 
                    
                    // Ejecutamos BR ExecCS01
                    $app.execute({
                        controller: 'Grid_Ruta_Optima_A_Ejecutar_V'
                        , command: 'Custom'
                        , argument: 'ExecCS01'
                        , values: [
                            { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                            ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                            ,{ name: 'Material_Id', newValue: Material_Id }      
                            ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                            ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                            ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                            ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                          	,{ name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id }      
                        ]
                        ,done: function (result) {
                            eval(result.clientScript); 
                            if(debug == 10){
                                console.log("ExecCS01 result : ");
                                console.log(result);
                            } 
                            // cerrar el modal que se se queda abierto
                            $app.touch.contextDataView().discard();
                            $app.touch.contextDataView().cancel();
                        }
                    });
                });
				

            }
        });
        
        this.preventDefault();
    }
</Script></update></c><c y="NodeSet" t="2021-04-11T21:33:51"><controller name="Material_Ubicacion_Stock" /><view id="grid1" /><move><controller name="Material_Ubicacion_Stock" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-11T21:33:55"><controller name="Material_Ubicacion_Stock" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Material_Ubicacion_Stock" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-11T21:33:57"><controller name="Material_Ubicacion_Stock" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><move><controller name="Material_Ubicacion_Stock" /><view id="grid1" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-04-11T21:34:23"><controller name="Material_Ubicacion_Stock" /><field name="Material_Ubicacion_Stock_Id" /><update><Label>Folio Material Ubicación Stock</Label></update></c><c y="NodeSet" t="2021-04-11T21:34:51"><controller name="Material_Ubicacion_Stock" /><view id="editForm1" /><category id="c1" /><move><controller name="Material_Ubicacion_Stock" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-11T21:34:56"><controller name="Material_Ubicacion_Stock" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><before><controller name="Material_Ubicacion_Stock" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></before></c><c y="NodeSet" t="2021-04-11T22:24:50"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="Mat_Ub_Almac_De_Surtido_RO" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T00:33:01"><controller name="Material_Ubicacion_Almacen_V" /><field name="Material_Ubicacion_Stock_Id" /><update><Label>Folio Material Ubicación Stock </Label></update></c><c y="NodeSet" t="2021-04-12T00:35:36"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T00:45:35"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T00:45:51"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T00:48:10"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><field name="Material_Ubicacion_Stock_Id" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-04-12T00:52:48"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><field name="Material_Ubicacion_Stock_Id" /><update><Roles /></update></c><c y="NodeSet" t="2021-04-12T00:53:15"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T00:53:26"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:56:04"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:56:12"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:57:24"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><dataField fieldName="Ruta_Optima_Id" /><update><Alias /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:57:31"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><dataField fieldName="Material_Surtido_Id" /><update><Alias /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:57:35"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T01:57:46"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Total_Stock_Before" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Cantidad" /></move></c><c y="NodeSet" t="2021-04-12T01:58:25"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Total_Stock_Before" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Cantidad" /></move></c><c y="NodeSet" t="2021-04-12T01:58:35"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:58:40"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T01:58:47"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:00:19"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Registrado_Desde_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:00:28"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Registrado_Desde_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:02:07"><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Operacion" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="grid1" /><dataField fieldName="Registrado_Desde_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:02:13"><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Operacion" /><move><controller name="Material_Ubicacion_Stock_Historial" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Registrado_Desde_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:18:00"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Ubicacion_Almacenamiento_De_Surtido_Id" /><update><ItemsNewDataView /><Copy>Ubicacion_Almacenamiento_De_Surtido_Id = Ubicacion_Almacenamiento_Id, Ubicacion_Almacenamiento_De_Surtido=Ubicacion_Almacenamiento,
Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado=Total_Stock,
Material_Ubicacion_Stock_Id = Material_Ubicacion_Stock_Id</Copy></update></c><c y="NodeSet" t="2021-04-12T02:21:06"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="grid1" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:21:12"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="grid1" /><dataField fieldName="Unidad_Material_Entregado_Id" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:21:24"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:21:31"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T02:23:25"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T02:23:41"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T02:24:44"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:03:08"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:03:35"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:05:15"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Numero_Grupo_Material_Surtido" /></move></c><c y="NodeSet" t="2021-04-12T14:05:39"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Numero_Grupo_Ruta_Optima" /><move><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T14:05:41"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Numero_Grupo_Ruta_Optima" /></move></c><c y="NodeSet" t="2021-04-12T14:11:11"><controller name="Grid_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:14:08"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:17:24"><controller name="Grid_Material_Surtido_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:19:51"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:19:54"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Material" /><after><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /></after></c><c y="NodeSet" t="2021-04-12T14:20:18"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:32:42"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:33:17"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T14:33:44"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T16:47:25"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T16:51:49"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T17:14:10"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T17:14:15"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><view id="grid1" /><dataField fieldName="Transferencia_Ubicacion_Almacenamiento_Id" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:03:54"><controller name="Bitacora_Captura_Sap2_1" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:04:26"><controller name="Bitacora_Captura_Sap2_1" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Bitacora_Captura_Sap2_1" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:14:04"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><view id="grid1" /><dataField fieldName="Unidad_Material_Transferido_Id" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:14:41"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3" /><field name="Material_Ubicacion_Stock_Id" /><update><Label>Folio Material Ubicación Stock</Label></update></c><c y="NodeSet" t="2021-04-12T18:24:02"><controller name="Bitacora_Captura_Sap2_1" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:26:27"><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:26:40"><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Transferencia_Material_Id" /><move><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:29:19"><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:35:18"><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Es_Captura_Manual_Con_Pdf" /><move><controller name="Bitacora_Captura_Sap2_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:49:14"><controller name="Bitacora_Captura_Sap1_1" /><view id="grid1" /><dataField fieldName="Fecha_Captura" /><move><controller name="Bitacora_Captura_Sap1_1" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:49:24"><controller name="Bitacora_Captura_Sap1_1" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:49:41"><controller name="Bitacora_Captura_Sap1_2" /><view id="grid1" /><dataField fieldName="Cantidad_Transferido" /><move><controller name="Bitacora_Captura_Sap1_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:49:55"><controller name="Bitacora_Captura_Sap1_2" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:51:44"><controller name="Bitacora_Captura_Sap" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Bitacora_Captura_Sap" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-12T18:51:56"><controller name="Bitacora_Captura_Sap" /><view id="grid1" /><dataField fieldName="Movimiento_Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:52:41"><controller name="Bitacora_Captura_Sap" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T18:52:47"><controller name="Bitacora_Captura_Sap" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T22:44:37"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><insert type="field"><Name>Material_Ubicacion_Stock_Id</Name><Type>UInt64</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Material Ubicacion Stock Id</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-04-12T22:45:04"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /><update><Type>Int64</Type></update></c><c y="NodeSet" t="2021-04-12T22:45:35"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="grid1" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T22:45:40"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="grid1" /><dataField fieldName="Creado_Por" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T22:45:42"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="grid1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="grid1" /><dataField fieldName="Creado_Por" /></move></c><c y="NodeSet" t="2021-04-12T22:45:54"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="createForm1" /><category id="c1" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T22:46:04"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="editForm1" /><move><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T23:05:14"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Movimiento_V" /><move><controller name="Material_Ubicacion_Almacen_V" /><field name="Material_Ubicacion_Stock_Id" /></move></c><c y="NodeSet" t="2021-04-12T23:06:00"><controller name="Material_Ubicacion_Almacen_V" /><view id="Material_Ubicacion_Movimiento_V" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T23:29:14"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /><update><Label>Folio Material Ubicacion Stock</Label></update></c><c y="NodeSet" t="2021-04-12T23:29:24"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><field name="Material_Ubicacion_Stock_Id" /><update><Label>Folio Material Ubicación Stock</Label></update></c><c y="NodeSet" t="2021-04-12T23:34:54"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="editForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T23:35:06"><controller name="Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1" /><view id="createForm1" /><dataField fieldName="Material_Ubicacion_Stock_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-12T23:41:41"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Numero_Grupo_Ruta_Optima" /><move><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2021-04-13T10:02:21"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><rule id="r100" /><update><Script>//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
var Ubicacion_Formulario = '';
var material_A_Surtir = [Material_Id];
// var Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
// var Material_Id = [Transferencia_Material_Id]

//-------------------------------------------------//

var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]; 
var Ruta_Optima_Id = [Ruta_Optima_Id]; 
var Material_Id = [Material_Id];      
var Cantidad_Solicitado = [Cantidad_Solicitado];      
var Cantidad_Entregado = [Cantidad_Entregado];      
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];     
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];     

if(valor &gt; 0){
  [Cantidad_Entregado] = valor;
  if(debug == 1){
        Cantidad_Entregado = [Cantidad_Entregado]  
        Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
        fnDebug(Ubicacion_Formulario);
        fnDebug("Valor: " + valor);
  		console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

if([Cantidad_Entregado] &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
else
	{
      // Ejecutamos BR ExecCS01
      $app.execute({
        controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
        , filter: [
            { field: 'Material_Id', operator: '=', value: [Material_Id] },
            { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
          
        ]
        , dataType: 'json'
        , done: function (result) {
    
            if (debug === 1) {
                console.log("result: ");
                console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
            }
    
            arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
    
            var Ubicaciones_Origen = Ubicacion_Formulario;
    
            arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
    
            $app.confirm(
                "Daá salida al material " + material_A_Surtir + " con las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
            ).done(function (e) {
                if (debug == true) {
                    console.log("Se confirmó la operación");
                }
    
                // Ejecutamos BR ExecCS01
                // =======================
                $app.execute({
                    controller: 'Grid_Ruta_Optima_Incan_A_Ejecutar_V'
                    , command: 'Custom'
                    , argument: 'ExecCS01'
                    , values: [
                      { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                      ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                      ,{ name: 'Material_Id', newValue: Material_Id }      
                      ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                      ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                      ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                      ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                      ]
                    ,done: function (result) {
                      eval(result.clientScript); 
                      if(debug == 10){
                        console.log("ExecCS01 result : ");
                        console.log(result);   
                          
                        $app.touch.contextDataView().discard();
                        $app.touch.contextDataView().cancel();
                      }           
                    }
                  })
            
            }); // END $app.confirm(
        
        } // END done execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    }); // END execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    this.preventDefault();   
	}
  
</Script></update></c><c y="NodeSet" t="2021-04-13T10:02:42"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><rule id="r100" /><update><Script>//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
var Ubicacion_Formulario = '';
var material_A_Surtir = [Material_Id];
// var Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
// var Material_Id = [Transferencia_Material_Id]

//-------------------------------------------------//

var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]; 
var Ruta_Optima_Id = [Ruta_Optima_Id]; 
var Material_Id = [Material_Id];      
var Cantidad_Solicitado = [Cantidad_Solicitado];      
var Cantidad_Entregado = [Cantidad_Entregado];      
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];     
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];     

if(valor &gt; 0){
  [Cantidad_Entregado] = valor;
  if(debug == 1){
        Cantidad_Entregado = [Cantidad_Entregado]  
        Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
        fnDebug(Ubicacion_Formulario);
        fnDebug("Valor: " + valor);
  		console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

if([Cantidad_Entregado] &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
else
	{
      // Ejecutamos BR ExecCS01
      $app.execute({
        controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
        , filter: [
            { field: 'Material_Id', operator: '=', value: [Material_Id] },
            { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
          
        ]
        , dataType: 'json'
        , done: function (result) {
    
            if (debug === 1) {
                console.log("result: ");
                console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
            }
    
            arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
    
            var Ubicaciones_Origen = Ubicacion_Formulario;
    
            arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
    
            $app.confirm(
                "Daá salida al material " + material_A_Surtir + " con las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
            ).done(function (e) {
                if (debug == true) {
                    console.log("Se confirmó la operación");
                }
    
                // Ejecutamos BR ExecCS01
                // =======================
                $app.execute({
                    controller: 'Grid_Ruta_Optima_Incan_A_Ejecutar_V'
                    , command: 'Custom'
                    , argument: 'ExecCS01'
                    , values: [
                      { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                      ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                      ,{ name: 'Material_Id', newValue: Material_Id }      
                      ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                      ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                      ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                      ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                      ]
                    ,done: function (result) {
                      eval(result.clientScript); 
                      if(debug == 10){
                        console.log("ExecCS01 result : ");
                        console.log(result);   
                          
                        $app.touch.contextDataView().discard();
                        $app.touch.contextDataView().cancel();
                      }           
                    }
                  })
            
            }); // END $app.confirm(
        
        } // END done execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    }); // END execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    this.preventDefault();   
	}
  
</Script></update></c><c y="NodeSet" t="2021-04-13T10:10:32"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><rule id="r100" /><update><Script>//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
var Ubicacion_Formulario = '';
var material_A_Surtir = [Material]; //[Material_Id];
// var Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
// var Material_Id = [Transferencia_Material_Id]

//-------------------------------------------------//

var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]; 
var Ruta_Optima_Id = [Ruta_Optima_Id]; 
var Material_Id = [Material_Id];      
var Cantidad_Solicitado = [Cantidad_Solicitado];      
var Cantidad_Entregado = [Cantidad_Entregado];      
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];     
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];     

if(valor &gt; 0){
  [Cantidad_Entregado] = valor;
  Cantidad_Entregado = [Cantidad_Entregado]  
  Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
  if(debug == 1){
        fnDebug(Ubicacion_Formulario);
        fnDebug("Valor: " + valor);
  		console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

if([Cantidad_Entregado] &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
else
	{
      // Ejecutamos BR ExecCS01
      $app.execute({
        controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
        , filter: [
            { field: 'Material_Id', operator: '=', value: [Material_Id] },
            { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
          
        ]
        , dataType: 'json'
        , done: function (result) {
    
            if (debug === 1) {
                console.log("result: ");
                console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
            }
    
            arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
    
            var Ubicaciones_Origen = Ubicacion_Formulario;
    
            arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
    
            $app.confirm(
                "Daá salida al material " + material_A_Surtir + " con las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
            ).done(function (e) {
                if (debug == true) {
                    console.log("Se confirmó la operación");
                }
    
                // Ejecutamos BR ExecCS01
                // =======================
                $app.execute({
                    controller: 'Grid_Ruta_Optima_Incan_A_Ejecutar_V'
                    , command: 'Custom'
                    , argument: 'ExecCS01'
                    , values: [
                      { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                      ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                      ,{ name: 'Material_Id', newValue: Material_Id }      
                      ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                      ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                      ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                      ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                      ]
                    ,done: function (result) {
                      eval(result.clientScript); 
                      if(debug == 10){
                        console.log("ExecCS01 result : ");
                        console.log(result);   
                          
                        $app.touch.contextDataView().discard();
                        $app.touch.contextDataView().cancel();
                      }           
                    }
                  })
            
            }); // END $app.confirm(
        
        } // END done execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    }); // END execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    this.preventDefault();   
	}
  
</Script></update></c><c y="NodeSet" t="2021-04-13T10:25:14"><controller name="Grid_Ruta_Optima_Incan_A_Ejecutar_V" /><rule id="r100" /><update><Script>//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Entregado").val();
var Ubicacion_Formulario = '';
var material_A_Surtir = [Material]; //[Material_Id];
// var Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
// var Material_Id = [Transferencia_Material_Id]

//-------------------------------------------------//

var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]; 
var Ruta_Optima_Id = [Ruta_Optima_Id]; 
var Material_Id = [Material_Id];      
var Cantidad_Solicitado = [Cantidad_Solicitado];      
var Cantidad_Entregado = [Cantidad_Entregado];      
var Unidad_Material_Entregado_Id = [Unidad_Material_Entregado_Id];     
var Ubicacion_Almacenamiento_Id = [Ubicacion_Almacenamiento_Id];     

if(valor &gt; 0){
  [Cantidad_Entregado] = valor;
  Cantidad_Entregado = [Cantidad_Entregado]  
  Ubicacion_Formulario = [Ubicacion_Almacenamiento] + '; ';
  if(debug == 1){
        fnDebug(Ubicacion_Formulario);
        fnDebug("Valor: " + valor);
  		console.log("Cantidad_Entregado: " + [Cantidad_Entregado]);
	}
}

if([Cantidad_Entregado] &lt; 0){
	this.preventDefault();
  	alertify.alert("Ingrese cantidad de mat. válido para surtir").setHeader("Mensaje");   	
  	$("#Cantidad_Material_Entregado").focus();
}
else
	{
      // Ejecutamos BR ExecCS01
      $app.execute({
        controller: 'Material_Ubicacion_Almacenamiento_De_Surtido2'
        , filter: [
            { field: 'Material_Id', operator: '=', value: [Material_Id] },
            { field: 'Ruta_Optima_Id', operator: '=', value: [Ruta_Optima_Id] },
          
        ]
        , dataType: 'json'
        , done: function (result) {
    
            if (debug === 1) {
                console.log("result: ");
                console.log(result.Material_Ubicacion_Almacenamiento_De_Surtido2);
            }
    
            arregloUbicaciones = result.Material_Ubicacion_Almacenamiento_De_Surtido2;
    
            var Ubicaciones_Origen = Ubicacion_Formulario;
    
            arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Ubicacion_Almacenamiento_De_Surtido + '; '; });
    
            $app.confirm(
                "Daá salida al material " + material_A_Surtir + " con las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
            ).done(function (e) {
                if (debug == true) {
                    console.log("Se confirmó la operación");
                }
    
                // Ejecutamos BR ExecCS01
                // =======================
                $app.execute({
                    controller: 'Grid_Ruta_Optima_Incan_A_Ejecutar_V'
                    , command: 'Custom'
                    , argument: 'ExecCS01'
                    , values: [
                      { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }    
                      ,{ name: 'Ruta_Optima_Id', newValue: Ruta_Optima_Id }
                      ,{ name: 'Material_Id', newValue: Material_Id }      
                      ,{ name: 'Cantidad_Solicitado', newValue: Cantidad_Solicitado }      
                      ,{ name: 'Cantidad_Entregado', newValue: Cantidad_Entregado }      
                      ,{ name: 'Unidad_Material_Entregado_Id', newValue: Unidad_Material_Entregado_Id }      
                      ,{ name: 'Ubicacion_Almacenamiento_De_Surtido_Id', newValue: Ubicacion_Almacenamiento_Id }      
                      ]
                    ,done: function (result) {
                      eval(result.clientScript); 
                      if(debug == 10){
                        console.log("ExecCS01 result : ");
                        console.log(result);   
                          
                        $app.touch.contextDataView().discard();
                        $app.touch.contextDataView().cancel();
                      }           
                    }
                  })
            
            }); // END $app.confirm(
        
        } // END done execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    }); // END execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento2
    this.preventDefault();   
	}
  
</Script></update></c><c y="NodeSet" t="2021-04-13T10:59:02"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="editForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-13T10:59:33"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="createForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-13T11:00:55"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido2" /><view id="createForm1" /><dataField fieldName="Material_Id" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-04-14T00:32:54"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T00:51:44"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Alamacenamiento_Id = @Almacenamiento_Id
		,Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
		,Til = @Til
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T00:53:31"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Alamacenamiento_Id = @Tipo_Almacenamiento_Id
		,Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
		,Til = @Til
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T00:56:23"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
		,Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
		,Til = @Til
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T00:59:39"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = @Til
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:10:08"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:13:52"><controller name="Material_Ubicacion_Stock1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /><move><controller name="Material_Ubicacion_Stock1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Tipo_Ubicacion_Id" /></move></c><c y="NodeSet" t="2021-04-14T01:15:42"><controller name="Material_Ubicacion_Stock1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Almacenamiento_Id" /><move><controller name="Material_Ubicacion_Stock1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Tipo_Ubicacion_Id" /></move></c><c y="NodeSet" t="2021-04-14T01:20:26"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:25:09"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion_Id = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:25:29"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion_Id = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:30:03"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T01:40:11"><controller name="Material_Ubicacion_Stock1" /><rule id="r101" /><update><Script>/*DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 

   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @MAterial_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] = @Tipo_Ubicacion_Id
     AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id  
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN

    -- Detenemos la actualización
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END

</Script></update></c><c y="NodeSet" t="2021-04-14T01:43:20"><controller name="Material_Ubicacion_Stock1" /><rule id="r101" /><update><Script>/*DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 

   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @MAterial_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] = @Tipo_Ubicacion_Id
     AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id  
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN

    -- Detenemos la actualización
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END

</Script></update></c><c y="NodeSet" t="2021-04-14T01:45:01"><controller name="Material_Ubicacion_Stock1" /><rule id="r101" /><update><CommandName>Update_res</CommandName><Script>/*DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 

   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @MAterial_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] = @Tipo_Ubicacion_Id
     AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id  
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](225,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



</Script></update></c><c y="NodeSet" t="2021-04-14T01:45:47"><controller name="Material_Ubicacion_Stock1" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>Before</Phase><Script>
DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN

    -- Detenemos la actualización
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END
</Script></insert></c><c y="NodeSet" t="2021-04-14T08:51:26"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN

    -- Detenemos la actualización
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END
</Script></update></c><c y="NodeSet" t="2021-04-14T08:56:50"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro desaparecio
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        -- -- Inhabilitar el registro actual
        -- UPDATE APP.Material_Ubicacion_Stock SET
        --     Estatus_Registro_Id = 2 --Inhabilitar
        --     -----------------------------------------------
        --     ,Transaccion_Id = @Transaccion_Id
        --     ,Actualizado_Por_Id = @BusinessRules_UserId
        --     ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        -- WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id
        SET @Estatus_Registro_Id = 2 -- Inhabilitar el registro
        SET @Total_Stock = 0
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
</Script></update></c><c y="NodeSet" t="2021-04-14T09:01:59"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro desaparecio
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        -- -- Inhabilitar el registro actual
        -- UPDATE APP.Material_Ubicacion_Stock SET
        --     Estatus_Registro_Id = 2 --Inhabilitar
        --     -----------------------------------------------
        --     ,Transaccion_Id = @Transaccion_Id
        --     ,Actualizado_Por_Id = @BusinessRules_UserId
        --     ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        -- WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        SELECT TOP 1 
             @Material_Id = Material_Id
            ,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
            ,@Til = Til
            ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            ,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END

</Script></update></c><c y="NodeSet" t="2021-04-14T09:06:38"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro desaparecio
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        -- -- Inhabilitar el registro actual
        -- UPDATE APP.Material_Ubicacion_Stock SET
        --     Estatus_Registro_Id = 2 --Inhabilitar
        --     -----------------------------------------------
        --     ,Transaccion_Id = @Transaccion_Id
        --     ,Actualizado_Por_Id = @BusinessRules_UserId
        --     ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        -- WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        SELECT TOP 1 
             @Material_Id = Material_Id
            ,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            ,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END


</Script></update></c><c y="NodeSet" t="2021-04-14T09:08:36"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro desaparecio
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        -- -- Inhabilitar el registro actual
        -- UPDATE APP.Material_Ubicacion_Stock SET
        --     Estatus_Registro_Id = 2 --Inhabilitar
        --     -----------------------------------------------
        --     ,Transaccion_Id = @Transaccion_Id
        --     ,Actualizado_Por_Id = @BusinessRules_UserId
        --     ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        -- WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            ,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END

</Script></update></c><c y="NodeSet" t="2021-04-14T09:15:05"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */



DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,0,0, '') 
   SET @Result_ShowAlert = @Result_ShowViewMessage
   
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-04-14T14:35:05"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T14:35:27"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>
DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T14:42:12"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T15:06:11"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T15:10:48"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:13:12"><controller name="Material_Ubicacion_Stock1" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>nessRules_PreventDefault = 0
	SET @Resu</Script></insert></c><c y="NodeSet" t="2021-04-14T15:13:23"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><CommandName>Insertttt</CommandName><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:13:59"><controller name="Material_Ubicacion_Stock1" /><rule id="r105" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	--SET @Material_Id = NULL
	--SET @Material = NULL
	--SET @Total_Stock = NULL
	--SET @Tipo_Almacenamiento_Id = NULL
	---SET @Tipo_Almacenamiento = NULL
	--SET @Ubicacion_Almacenamiento_Id = NULL
	--SET @Ubicacion_Almacenamiento = NULL
	--SET @Til = NULL
	--SET @Tipo_Ubicacion_Id = NULL
	--SET @Clave_Tipo_Ubicacion = NULL
	--SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:20:12"><controller name="Material_Ubicacion_Stock1" /><rule id="r105" /><update><CommandName>Inserterete</CommandName><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	--SET @Material_Id = NULL
	--SET @Material = NULL
	--SET @Total_Stock = NULL
	--SET @Tipo_Almacenamiento_Id = NULL
	---SET @Tipo_Almacenamiento = NULL
	--SET @Ubicacion_Almacenamiento_Id = NULL
	--SET @Ubicacion_Almacenamiento = NULL
	--SET @Til = NULL
	--SET @Tipo_Ubicacion_Id = NULL
	--SET @Clave_Tipo_Ubicacion = NULL
	--SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:20:20"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><CommandName>Insert</CommandName><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:20:40"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:24:35"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:26:15"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T15:56:32"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'"','\"')
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T16:00:59"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'\\','')
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'"','\"')
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T18:14:08"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
	    ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
		,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'\\','')
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'"','\"')
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T18:15:20"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:19:11"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:19:15"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,@PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:19:45"><controller name="Material_Ubicacion_Stock1" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   [APP].[Material_Ubicacion_Stock] 
WHERE 
         [Material_Id] = @Material_Id
	 AND [Tipo_Almacenamiento_Id] = @Tipo_Almacenamiento_Id
	 AND [Ubicacion_Almacenamiento_Id] = @Ubicacion_Almacenamiento_Id
	 AND [Tipo_Ubicacion_Id] =  @Tipo_Ubicacion_Id
	 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](224,1,64,@Material + ' vs. ' + @Tipo_Almacenamiento + ' vs. ' + @Ubicacion_Almacenamiento + ' vs. ' + CONVERT(VARCHAR(20),@Clave_Tipo_Ubicacion)) 
   RETURN 
END */




DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
	,@Relacion_Mensaje VARCHAR(700)
	--,@Material_Identificador_Sap VARCHAR(500)


-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos

    ),0)
	
	SET @Relacion_Mensaje = @Material + ' vs ' + @Ubicacion_Almacenamiento + ' vs ' + @Tipo_Almacenamiento
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
    ),0)
	SET @Relacion_Mensaje = @Material + ' vs ' +  CONVERT(VARCHAR(10),@Clave_Tipo_Ubicacion);
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN 
    -- Significa que si existen.
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
         Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
	    ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
		,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar al registro en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
		,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
		,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
		,Til = ISNULL(@Til,0)
		,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
		,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id
	
	-- Limpiar el formulario
	SET @Material_Id = NULL
	SET @Material = NULL
	SET @Total_Stock = NULL
	SET @Tipo_Almacenamiento_Id = NULL
	SET @Tipo_Almacenamiento = NULL
	SET @Ubicacion_Almacenamiento_Id = NULL
	SET @Ubicacion_Almacenamiento = NULL
	SET @Til = NULL
	SET @Tipo_Ubicacion_Id = NULL
	SET @Clave_Tipo_Ubicacion = NULL
	SET @PO = NULL

    -- Guardamos en el historial un nuevo movimiento
   SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
   
   --SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188, @Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   --SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   DECLARE @Mensaje_Usuario VARCHAR(600) = [dbo].[fn_Obtener_Mensaje_Sistema](1404,1,188,@Relacion_Mensaje) 
   
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'\\','')
   SET @Mensaje_Usuario = REPLACE(@Mensaje_Usuario,'"','\"')
   
   --SET @Result_Continue = 1
   --SET @Result_Refresh = 1
   SET @Result_ExecuteOnClient = '$app.touch.contextDataView().discard(); $app.touch.contextDataView().cancel(); setTimeout(function(){  $app.alert("'+@Mensaje_Usuario+'"); }, 1000); '
   
   
   RETURN
END
ELSE
BEGIN
	
	SET @BusinessRules_PreventDefault = 0
	SET @Result_Continue = 1

END



</Script></update></c><c y="NodeSet" t="2021-04-14T18:26:17"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:26:35"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:37:22"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:37:32"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:38:30"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,@PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:52:16"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:53:10"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-14T18:58:24"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Permitir_Combinar_Registros BIT

-- Verificar si el registro actual es piso o almacen
SELECT TOP 1
    @Es_Almacen = Es_Almacen
    ,@Es_Piso = Es_Piso
FROM APP.Tipo_Ubicacion
WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id


IF @Es_Almacen = 1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
        AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	  	AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END
ELSE IF @Es_Piso  =1
BEGIN
    SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
        SELECT TOP 1 Material_Ubicacion_Stock_Id
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Id = @Material_Id
        AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        AND Estatus_Registro_Id = 1 --- Considerar solo activos
	    AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
    ),0)
END

-- Validamos si ya existe el registro
IF @Material_Ubicacion_Stock_Existente_Id &gt; 0 
BEGIN
    -- Significa que si existen.
    SET @Permitir_Combinar_Registros = ISNULL((
        SELECT TOP 1 CONVERT(BIT,Valor_Cuantitativo)
        FROM dbo.Configuracion_Sistema
        WHERE Configuracion_Sistema_Id = 360
    ),0)

    IF @Permitir_Combinar_Registros = 1
    BEGIN 

        
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
            ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,MUS.Total_Stock + @Total_Stock -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Ingreso manual de materíal desde pantalla' -- Operacion
            ,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Sumar La cantidad de los dos registros en inventario
        UPDATE APP.Material_Ubicacion_Stock SET
            Total_Stock = Total_Stock + @Total_Stock
            ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
            ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
            ,Til = ISNULL(@Til,0)
            ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            ,PO = @PO
            -----------------------------------------------
            ,Transaccion_Id = @Transaccion_Id
            ,Actualizado_Por_Id = @BusinessRules_UserId
            ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

        -- Guardar que el segundo registro se decontó
        INSERT INTO APP.Material_Ubicacion_Stock_Historial (
            Material_Ubicacion_Stock_Id
            ,Material_Id
            ,Material
            ,Tipo_Almacenamiento_Id
            ,Tipo_Almacenamiento
            ,Ubicacion_Almacenamiento_Id
            ,Ubicacion_Almacenamiento
            ,Tipo_Ubicacion_Id
            ,Clave_Tipo_Ubicacion
            ,Total_Stock_Before
            ,Total_Stock
            ,Til
            ,Registrado_Desde_Id
            ,Ruta_Optima_Id
            ,Material_Surtido_Id
            ,Cantidad
            ,Operacion
		    ,PO
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) SELECT TOP 1
            Material_Ubicacion_Stock_Id
            ,MUS.Material_Id
            ,MAT.Material
            ,MUS.Tipo_Almacenamiento_Id
            ,TA.Tipo_Almacenamiento
            ,MUS.Ubicacion_Almacenamiento_Id
            ,UA.Ubicacion_Almacenamiento
            ,MUS.Tipo_Ubicacion_Id
            ,TU.Clave_Tipo_Ubicacion
            ,MUS.Total_Stock-- Total_Stock_Before
            ,0 -- Total_Stock
            ,MUS.Til
            ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ,0 -- Ruta_Optima_Id
            ,0 -- Material_Surtido_Id
            ,@Total_Stock -- Cantidad
            ,'Edición manual de registro por pantalla' -- Operacion
			,PO
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
        FROM APP.Material_Ubicacion_Stock MUS
        INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
        INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
        INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
        INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
        WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

     

        SELECT TOP 1 
             @Material_Id = Material_Id
            --,@Material = Material
            ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
			,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            ,@Til = Til
            -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
            -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
            ,@PO = PO
            ------------------
            --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
            ,@Total_Stock = 0
        FROM APP.Material_Ubicacion_Stock
        WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id



        
        -- -- Limpiar el formulario
        -- SET @Material_Id = NULL
        -- SET @Material = NULL
        -- SET @Total_Stock = NULL
        -- SET @Tipo_Almacenamiento_Id = NULL
        -- SET @Ubicacion_Almacenamiento_Id = NULL
        -- SET @Til = NULL
        -- SET @Tipo_Ubicacion_Id = NULL
        -- SET @Clave_Tipo_Ubicacion = NULL
        -- SET @PO = NULL

    END
    ELSE 
    BEGIN

        -- Detenemos la actualización
        SET @BusinessRules_PreventDefault = 1  -- Cancelar el INSERT normal
        SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1405,0,0, '') 
        SET @Result_ShowAlert = @Result_ShowViewMessage
        
        RETURN

    END

   
END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)  -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
</Script></update></c><c y="NodeSet" t="2021-04-15T01:36:01"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock_Id
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@Creado_Por_Id -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@Creado_Por_Id -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END


</Script></update></c><c y="NodeSet" t="2021-04-15T01:47:14"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock_Id
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T01:48:55"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T01:49:47"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T01:50:54"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; @Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T02:00:05"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; @Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T02:07:16"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; @Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-04-15T09:20:34"><controller name="Material_Ubicacion_Stock1" /><rule id="r104" /><update><Script>-- NUEVO METODO

DECLARE @Es_Almacen BIT
    ,@Es_Piso BIT
    ,@Material_Ubicacion_Stock_Existente_Id BIGINT
    ,@Transaccion_Id UNIQUEIDENTIFIER = NEWID()
    ,@Fecha_Creacion DATETIME = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
    ,@Permitir_Combinar_Registros BIT
    -- Variables para considerar si cambio algun campo "importante"
    ,@Tipo_Almacenamiento_Anterior_Id INT
    ,@Ubicacion_Almacenamiento_Anterior_Id INT
    ,@Tipo_Ubicacion_Anterior_Id INT
    ,@Total_Stock_Anterior NUMERIC(15,4)


-- Validar primero si cambio en algun dato imporanten con respecto a los datos anteriores
SELECT TOP 1
     @Tipo_Almacenamiento_Anterior_Id = Tipo_Almacenamiento_Id
    ,@Ubicacion_Almacenamiento_Anterior_Id = Ubicacion_Almacenamiento_Id
    ,@Tipo_Ubicacion_Anterior_Id = Tipo_Ubicacion_Id
    ,@Total_Stock_Anterior = Total_Stock
FROM APP.Material_Ubicacion_Stock
WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

SET @Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
SET @Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
SET @Tipo_Ubicacion_Id = ISNULL(@Tipo_Ubicacion_Id,0)

IF (
    @Tipo_Almacenamiento_Anterior_Id &lt;&gt; @Tipo_Almacenamiento_Id
    OR @Ubicacion_Almacenamiento_Anterior_Id &lt;&gt; @Ubicacion_Almacenamiento_Id
    OR @Tipo_Ubicacion_Anterior_Id &lt;&gt; @Tipo_Ubicacion_Id
)
BEGIN
    -- Alguno de estos campos cambiaron
    -- Verificar si el registro actual es piso o almacen
    SELECT TOP 1
         @Es_Almacen = Es_Almacen
        ,@Es_Piso = Es_Piso
    FROM APP.Tipo_Ubicacion
    WHERE Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id

    IF @Es_Almacen = 1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Almacenamiento_Id = @Tipo_Almacenamiento_Id
            AND Ubicacion_Almacenamiento_Id = @Ubicacion_Almacenamiento_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id	
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END
    ELSE IF @Es_Piso  =1
    BEGIN
        SET @Material_Ubicacion_Stock_Existente_Id = ISNull((
            SELECT TOP 1 Material_Ubicacion_Stock_Id
            FROM APP.Material_Ubicacion_Stock
            WHERE Material_Id = @Material_Id
            AND Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
            AND Estatus_Registro_Id = 1 --- Considerar solo activos
            AND Material_Ubicacion_Stock_Id &lt;&gt; @Material_Ubicacion_Stock_Id -- buscar si hay registro que no sea este
        ),0)
    END

    IF @Material_Ubicacion_Stock_Existente_Id = 0 
    BEGIN
        -- Crear nuevo registro de inventario al cual llevar la cantidad 
        INSERT INTO APP.Material_Ubicacion_Stock (
             Material_Id
            ,Tipo_Almacenamiento_Id
            ,Ubicacion_Almacenamiento_Id
            ,Tipo_Ubicacion_Id
            ,Total_Stock
            ,Registrado_Desde_Id
            ------------------------------
            ,Transaccion_Id
            ,Creado_Por_Id
            ,Fecha_Creacion
            ,Actualizado_Por_Id
            ,Fecha_Ultima_Actualizacion
        ) VALUES (
             @Material_Id
            ,@Tipo_Almacenamiento_Id
            ,@Ubicacion_Almacenamiento_Id
            ,@Tipo_Ubicacion_Id
            ,0 -- Total_Stock
            ,41 -- Registrado_Desde_Id, 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
            ------------------------------
            ,@Transaccion_Id -- Transaccion_Id
            ,@BusinessRules_UserId -- Creado_Por_Id
            ,@Fecha_Creacion -- Fecha_Creacion
            ,@BusinessRules_UserId -- Actualizado_Por_Id
            ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
        )
        SET @Material_Ubicacion_Stock_Existente_Id = @@IDENTITY

    END

    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,MUS.Total_Stock + @Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Ingreso manual de materíal desde pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Sumar La cantidad de los dos registros en inventario
    UPDATE APP.Material_Ubicacion_Stock SET
        Total_Stock = Total_Stock + @Total_Stock
        ,Tipo_Almacenamiento_Id = ISNULL(@Tipo_Almacenamiento_Id,0)
        ,Ubicacion_Almacenamiento_Id = ISNULL(@Ubicacion_Almacenamiento_Id,0)
        ,Til = ISNULL(@Til,0)
        ,Tipo_Ubicacion_Id = @Tipo_Ubicacion_Id
        ,PO = @PO
        -----------------------------------------------
        ,Transaccion_Id = @Transaccion_Id
        ,Actualizado_Por_Id = @BusinessRules_UserId
        ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL)
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Existente_Id

    -- Guardar que el segundo registro se decontó
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,Total_Stock - @Total_Stock --0 -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


    SELECT TOP 1 
        @Material_Id = Material_Id
        --,@Material = Material
        ,@Tipo_Almacenamiento_Id = Tipo_Almacenamiento_Id
        ,@Ubicacion_Almacenamiento_Id = Ubicacion_Almacenamiento_Id
        ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        ,@Til = Til
        -- ,@Tipo_Ubicacion_Id = Tipo_Ubicacion_Id
        -- ,@Clave_Tipo_Ubicacion = Clave_Tipo_Ubicacion
        ,@PO = PO
        ------------------
        --,@Estatus_Registro_Id = 2 -- Inhabilitar el registro
        ,@Total_Stock = Total_Stock - @Total_Stock
    FROM APP.Material_Ubicacion_Stock
    WHERE Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id


END
ELSE
BEGIN 
    -- Significa que se va aactualizar el inventario de forma manual
    -- Guardar en el historial la información que habia antes de actualizar
    INSERT INTO APP.Material_Ubicacion_Stock_Historial (
        Material_Ubicacion_Stock_Id
        ,Material_Id
        ,Material
        ,Tipo_Almacenamiento_Id
        ,Tipo_Almacenamiento
        ,Ubicacion_Almacenamiento_Id
        ,Ubicacion_Almacenamiento
        ,Tipo_Ubicacion_Id
        ,Clave_Tipo_Ubicacion
        ,Total_Stock_Before
        ,Total_Stock
        ,Til
        ,Registrado_Desde_Id
        ,Ruta_Optima_Id
        ,Material_Surtido_Id
        ,Cantidad
        ,Operacion
        ,PO
        ------------------------------
        ,Transaccion_Id
        ,Creado_Por_Id
        ,Fecha_Creacion
        ,Actualizado_Por_Id
        ,Fecha_Ultima_Actualizacion
    ) SELECT TOP 1
        Material_Ubicacion_Stock_Id
        ,MUS.Material_Id
        ,MAT.Material
        ,MUS.Tipo_Almacenamiento_Id
        ,TA.Tipo_Almacenamiento
        ,MUS.Ubicacion_Almacenamiento_Id
        ,UA.Ubicacion_Almacenamiento
        ,MUS.Tipo_Ubicacion_Id
        ,TU.Clave_Tipo_Ubicacion
        ,MUS.Total_Stock-- Total_Stock_Before
        ,@Total_Stock -- Total_Stock
        ,MUS.Til
        ,41 --- 'Inventario afectado desde pantalla (Actualizar o registrar inventario material)
        ,0 -- Ruta_Optima_Id
        ,0 -- Material_Surtido_Id
        ,@Total_Stock - MUS.Total_Stock -- Cantidad
        ,'Edición manual de registro por pantalla' -- Operacion
        ,MUS.PO
        ------------------------------
        ,@Transaccion_Id -- Transaccion_Id
        ,@BusinessRules_UserId -- Creado_Por_Id
        ,@Fecha_Creacion -- Fecha_Creacion
        ,@BusinessRules_UserId -- Actualizado_Por_Id
        ,@Fecha_Creacion -- Fecha_Ultima_Actualizacion
    FROM APP.Material_Ubicacion_Stock MUS
    INNER JOIN APP.Material MAT ON MAT.Material_Id = MUS.Material_Id
    INNER JOIN APP.Ubicacion_Almacenamiento UA ON UA.Ubicacion_Almacenamiento_Id = MUS.Ubicacion_Almacenamiento_Id
    INNER JOIN APP.Tipo_Almacenamiento TA ON TA.Tipo_Almacenamiento_Id = MUS.Tipo_Almacenamiento_Id
    INNER JOIN APP.Tipo_Ubicacion TU ON TU.Tipo_Ubicacion_Id = MUS.Tipo_Ubicacion_Id
    WHERE MUS.Material_Ubicacion_Stock_Id = @Material_Ubicacion_Stock_Id

END










</Script></update></c><c y="NodeSet" t="2021-06-09T12:12:30"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><rule id="r100" /><update><Script>
//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Transferido").val();
var Ubicacion = [Transferencia_En_Ubicacion_Almacenamiento_Id]

var Ubicacion_Formulario = '';
var Transferencia_Material = [Transferencia_Material];

var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Movimiento_Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
var Transferencia_Material_Id= [Transferencia_Material_Id]
var Cantidad_A_Transferir = [Cantidad_A_Transferir]
var Cantidad_Transferido = [Cantidad_Transferido]      
var Unidad_Material_Transferido_Id =  [Unidad_Material_Transferido_Id]
var Transferencia_En_Ubicacion_Almacenamiento_Id = [Transferencia_En_Ubicacion_Almacenamiento_Id]
var Movimiento = [Movimiento]
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Material_Ubicacion_Stock_Id =[Material_Ubicacion_Stock_Id]


if(valor &gt; 0){
  //Asignamos el valor al campo [Cantidad_Transferido]
  [Cantidad_Transferido] = valor;
  Cantidad_Transferido = [Cantidad_Transferido];
  Ubicacion_Formulario = [Transferencia_En_Ubicacion_Almacenamiento] + '; ';
  fnDebug("Valor: " + valor);
  fnDebug("Cantidad_Transferido: " + [Cantidad_Transferido]);	
      
}

if(valor &lt; 0 ){
	this.preventDefault();
  	$app.alert("Ingrese cantidad de material válido para devolver");   	
  	$("#Cantidad_Material_Transferido").focus();
}


if ( Ubicacion == 0 &amp;&amp; valor &gt; 0) {
  this.preventDefault();
  $app.alert("Seleccione una ubicación válida.");
  $([Transferencia_En_Ubicacion_Almacenamiento_Id]).focus();
}
else{
if(valor &gt; [Cantidad_A_Transferir]){
  fnDebug("&gt; Valor: " + valor);
  fnDebug("Cantidad_A_Transferir: " + [Cantidad_A_Transferir]);

  	this.preventDefault();
  	$app.alert("La cantidad transferido no debe ser mayor a la cantidad a transferir.");
  	$("#Cantidad_Material_Transferido").focus();
}
else
	{
      
      [Cantidad_Transferido] = valor; 
      Cantidad_Transferido = [Cantidad_Transferido];
      fnDebug("&gt; Cantidad_Transferido:" + Cantidad_Transferido);
      
      // Ejecutamos BR ExecCS01
      $app.execute({
        controller: 'Movimiento_Ruta_Optima_Ubicacion_almacenamiento3'
        , filter: [
            { field: 'Transferencia_Material_Id', operator: '=', value: [Transferencia_Material_Id] },
            { field: 'Movimiento_Ruta_Optima_Id', operator: '=', value: [Movimiento_Ruta_Optima_Id] },
            { field: 'Tipo_Movimiento_Id', operator: '=', value: [Tipo_Movimiento_Id] },
            { field: 'Estatus_Registro_Id', operator: '=', value: 1 },
          	{ field: 'Esta_En_Bcsap', operator: '=', value: 0 }
        ]
        , dataType: 'json'
        , done: function (result) {
    
            if (debug === 1) {
                console.log("result: ");
                console.log(result.Movimiento_Ruta_Optima_Ubicacion_almacenamiento3);
            }
    
            arregloUbicaciones = result.Movimiento_Ruta_Optima_Ubicacion_almacenamiento3;
    
            var Ubicaciones_Origen = Ubicacion_Formulario;
    
            arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Transferencia_Ubicacion_Almacenamiento + '; '; });
          
            if (Ubicaciones_Origen == ""){
                //this.preventDefault();
    			$app.alert("Capture las ubicaciones para transferir");
            }else {
            	$app.confirm(
                    "Ingresará el material " + Transferencia_Material  + " en las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                ).done(function (e) {
                    if (debug == true) {
                        console.log("Se confirmó la operación");
                    }

                    // Ejecutamos BR ExecCS01
                    // =======================
                    $app.execute({
                        controller: 'Mov_Transfer_Ruta_Optima_A_Ejecutar_V'
                        , command: 'Custom'
                        , argument: 'ExecCS01'
                        , values: [
                          { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id}
                          ,{ name: 'Movimiento_Ruta_Optima_Id', newValue: Movimiento_Ruta_Optima_Id}
                          ,{ name: 'Transferencia_Material_Id', newValue: Transferencia_Material_Id}
                          ,{ name: 'Cantidad_A_Transferir', newValue: Cantidad_A_Transferir}
                          ,{ name: 'Cantidad_Transferido', newValue: Cantidad_Transferido}      
                          ,{ name: 'Unidad_Material_Transferido_Id', newValue: Unidad_Material_Transferido_Id}
                          ,{ name: 'Transferencia_En_Ubicacion_Almacenamiento_Id', newValue: Transferencia_En_Ubicacion_Almacenamiento_Id}
                          ,{ name: 'Movimiento', newValue: Movimiento}
                          ,{ name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id}
                          ,{ name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id}
                          ]
                        ,done: function (result) {
                              eval(result.clientScript); 
                              fnDebug("ExecCS01 result : ");
                              fnDebug(result);

                              // cerrar el modal que se se queda abierto
                              $app.touch.contextDataView().discard();
                              $app.touch.contextDataView().cancel();
                        }
                      })

                }); // END $app.confirm(
            }
    
        } // END done execute Movimiento_Ruta_Optima_Ubicacion_almacenamiento3
    }); // END execute Movimiento_Ruta_Optima_Ubicacion_almacenamiento3

	}
    this.preventDefault();
}
</Script></update></c><c y="NodeSet" t="2021-06-09T12:13:06"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><rule id="r101" /><update><Script>//this.preventDefault();
// Obtenemos el valor
var valor = $("#Cantidad_Material_Devuelto").val();
var Ubicacion = [Devolucion_En_Ubicacion_Almacenamiento_Id]
//-------------------------------//
var Ubicacion_Formulario = '';
var material_Devolucion = [Devolucion_Material];
//Variables ExecCS01
var Tmp_Ruta_Optima_Transaccion_Id = [Tmp_Ruta_Optima_Transaccion_Id]
var Movimiento_Ruta_Optima_Id = [Movimiento_Ruta_Optima_Id]
var Devolucion_Material_Id = [Devolucion_Material_Id] 
var Cantidad_A_Devolver = [Cantidad_A_Devolver]
var Cantidad_Devuelto = [Cantidad_Devuelto]
var Unidad_Material_Devuelto_Id = [Unidad_Material_Devuelto_Id]
var Devolucion_En_Ubicacion_Almacenamiento_Id = [Devolucion_En_Ubicacion_Almacenamiento_Id]
var Movimiento = [Movimiento]
var Material_Ubicacion_Stock_Id=[Material_Ubicacion_Stock_Id];

if ( Ubicacion == 0 &amp;&amp; valor &gt; 0) {
  this.preventDefault();
  $app.alert("Seleccione una ubicación válida.");
  $([Devolucion_En_Ubicacion_Almacenamiento_Id]).focus();
}
else {    
if (valor &gt; 0) {
    //Asignamos el valor al campo [Cantidad_Devuelto]
    [Cantidad_Devuelto] = valor;
    Cantidad_Devuelto = [Cantidad_Devuelto];
    Ubicacion_Formulario = [Devolucion_En_Ubicacion_Almacenamiento] + '; ';
    fnDebug("Valor: " + valor);
    fnDebug("Cantidad_Devuelto: " + [Cantidad_Devuelto]);

}

if (valor &lt; 0) {
    this.preventDefault();
    $app.alert("Ingrese cantidad de material válido para devolver");
    $("#Cantidad_Material_Devuelto").focus();
}
else{

    if (valor &gt; [Cantidad_A_Devolver]) {
        fnDebug("&gt; Valor: " + valor);
        fnDebug("Cantidad_A_Devolver: " + [Cantidad_A_Devolver]);

        this.preventDefault();
        $app.alert("La cantidad devuelto no debe ser mayor a la cantidad a devolver.");
        $("#Cantidad_Material_Devuelto").focus();
    }
    else {
       
        $app.execute({
            controller: 'Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1'
            , filter: [
                { field: 'Devolucion_Material_Id', operator: '=', value: [Devolucion_Material_Id] },
                { field: 'Movimiento_Ruta_Optima_Id', operator: '=', value: [Movimiento_Ruta_Optima_Id] },
                { field: 'Tipo_Movimiento_Id', operator: '=', value: [Tipo_Movimiento_Id] },
                { field: 'Estatus_Registro_Id', operator: '=', value: 1 },
              	{ field: 'Esta_En_Bcsap', operator: '=', value: 0 }
            ]
            , dataType: 'json'
            , done: function (result) {
        
                if (debug === 1) {
                    console.log("result: ");
                    console.log(result.Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1);
                }
        
                arregloUbicaciones = result.Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1;
        
                var Ubicaciones_Origen = Ubicacion_Formulario;
        
                arregloUbicaciones.forEach(function (elemento, indice, array) { Ubicaciones_Origen = Ubicaciones_Origen + elemento.Devolucion_Ubicacion_Almacenamiento + '; '; });
              
                if (Ubicaciones_Origen == ""){
                	//this.preventDefault();
    				$app.alert("Capture las ubicaciones para devolver");
                }else{
                	$app.confirm(
                        "Realizará la devolución del material " + material_Devolucion + " en las siguientes ubicaciones: " + Ubicaciones_Origen + ". ¿Desea continuar?"
                    ).done(function (e) {
                        if (debug == true) {
                            console.log("Se confirmó la operación");
                        }

                        // Ejecutamos BR ExecCS01
                        // =======================
                        $app.execute({
                            controller: 'Mov_Dev_Ruta_Optima_A_Ejecutar_V'
                            , command: 'Custom'
                            , argument: 'ExecCS01'
                            , values: [
                                { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }
                                , { name: 'Movimiento_Ruta_Optima_Id', newValue: Movimiento_Ruta_Optima_Id }
                                , { name: 'Devolucion_Material_Id', newValue: Devolucion_Material_Id }
                                , { name: 'Cantidad_A_Devolver', newValue: Cantidad_A_Devolver }
                                , { name: 'Cantidad_Devuelto', newValue: Cantidad_Devuelto }
                                , { name: 'Unidad_Material_Devuelto_Id', newValue: Unidad_Material_Devuelto_Id }
                                , { name: 'Devolucion_En_Ubicacion_Almacenamiento_Id', newValue: Devolucion_En_Ubicacion_Almacenamiento_Id }
                                , { name: 'Movimiento', newValue: Movimiento }
                                , { name: 'Tmp_Ruta_Optima_Transaccion_Id', newValue: Tmp_Ruta_Optima_Transaccion_Id }
                                , { name: 'Material_Ubicacion_Stock_Id', newValue: Material_Ubicacion_Stock_Id}
                            ]
                            , done: function (result) {
                                eval(result.clientScript);
                                fnDebug("ExecCS01 result : ");
                                fnDebug(result);

                                 // cerrar el modal que se se queda abierto
                                 $app.touch.contextDataView().discard();
                                 $app.touch.contextDataView().cancel();

                            }
                        })


                    }); // END $app.confirm(
                
                }
                            
        
                
        
            } // END done execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1
        }); // END execute Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1
    }
    this.preventDefault();
}
}  </Script></update></c><c y="NodeSet" t="2021-08-18T16:27:46"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Aplica_Para_Captura" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Landscape" /></move></c><c y="NodeSet" t="2021-08-18T16:27:49"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Landscape" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Estilo_Configuracion_Impresion" /></move></c><c y="NodeSet" t="2021-08-18T16:27:57"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Landscape" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Aplica_Nuevo_Disenio" /></move></c><c y="NodeSet" t="2021-08-18T16:28:03"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Aplica_Nuevo_Disenio" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Ancho_Area_Impresion_In" /></move></c><c y="NodeSet" t="2021-08-18T16:28:06"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Ancho_Area_Impresion_In" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Alto_Area_Impresion_In" /></move></c><c y="NodeSet" t="2021-08-18T16:28:09"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Alto_Area_Impresion_In" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Base_Logo_In" /></move></c><c y="NodeSet" t="2021-08-18T16:28:12"><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Base_Logo_In" /><move><controller name="Tamanio_Etiqueta" /><view id="grid1" /><dataField fieldName="Alto_Logo_In" /></move></c><c y="NodeSet" t="2021-08-18T16:28:34"><controller name="Tamanio_Etiqueta" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Alto_Logo_In" /><move><controller name="Tamanio_Etiqueta" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /></move></c><c y="NodeSet" t="2021-08-18T16:32:30"><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /><dataField fieldName="Ancho_Area_Impresion_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:30"><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /><dataField fieldName="Alto_Area_Impresion_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:30"><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /><dataField fieldName="Base_Logo_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:49"><controller name="Tamanio_Etiqueta" /><view id="Tamanio_Etiqueta_LookUp_List" /><dataField fieldName="Alto_Logo_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:58"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Alto_Logo_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:58"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Base_Logo_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:32:58"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Alto_Area_Impresion_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:33:03"><controller name="Tamanio_Etiqueta" /><view id="TamanioEtiquetaProveedor_LookUp_List" /><dataField fieldName="Ancho_Area_Impresion_In" /><delete /></c><c y="NodeSet" t="2021-08-18T16:34:35"><controller name="Tamanio_Etiqueta" /><field name="Texto_Debajo_QR" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-08-18T16:34:47"><controller name="Tamanio_Etiqueta" /><field name="Texto_Debajo_Codigo_Barra" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-08-18T16:35:18"><controller name="Tamanio_Etiqueta" /><field name="Texto_Hacia_Arriba" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2021-08-18T16:48:03"><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Nombre_Documento" /></move></c><c y="NodeSet" t="2021-08-18T16:48:07"><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-08-18T16:48:10"><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Material_Id" /><move><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="PictureFileName" /></move></c><c y="NodeSet" t="2021-08-18T16:48:20"><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Nombre_Documento" /></move></c><c y="NodeSet" t="2021-08-18T16:48:28"><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Picture" /><move><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-08-18T16:48:31"><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2021-08-18T16:48:45"><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Nombre_Documento" /></move></c><c y="NodeSet" t="2021-08-18T16:48:53"><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Picture" /><move><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-08-18T16:48:54"><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2021-08-18T16:49:01"><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Nombre_Documento" /></move></c><c y="NodeSet" t="2021-08-18T16:49:10"><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="Nombre_Documento" /></move></c><c y="NodeSet" t="2021-08-18T16:49:17"><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="PictureFileName" /><move><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="Material_Id" /></move></c><c y="NodeSet" t="2021-08-18T16:49:18"><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="Material_Id" /><move><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="PictureFileName" /></move></c><c y="NodeSet" t="2021-08-18T16:49:38"><controller name="Documento_Material" /><view id="Documento_Material_LookUp_List" /><dataField fieldName="Nombre_Documento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:50:12"><controller name="Documento_Material" /><view id="createForm1" /><dataField fieldName="PictureFileName" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:50:22"><controller name="Documento_Material" /><view id="editForm1" /><dataField fieldName="PictureFileName" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:50:34"><controller name="Documento_Material" /><view id="grid1" /><dataField fieldName="Nombre_Documento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:51:54"><controller name="Documento_Material" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   RETURN 
END

-- REspaldar el nombre original del archivo 
SET @Nombre_Archivo = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(50);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);








</Script></update></c><c y="NodeSet" t="2021-08-18T16:52:17"><controller name="Documento_Material" /><rule id="r102" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
AND Documento_Material_Id &lt;&gt; @Documento_Material_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   RETURN 
END



-- REspaldar el nombre original del archivo 
SET @Nombre_Archivo = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(50);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);
</Script></update></c><c y="NodeSet" t="2021-08-18T16:55:38"><controller name="Documento_Material" /><view id="createForm1" /><dataField fieldName="PictureFileName" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:55:45"><controller name="Documento_Material" /><view id="createForm1" /><dataField fieldName="Nombre_Documento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:55:56"><controller name="Documento_Material" /><view id="editForm1" /><dataField fieldName="PictureFileName" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:56:03"><controller name="Documento_Material" /><view id="editForm1" /><dataField fieldName="Nombre_Documento" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-18T16:57:43"><controller name="Documento_Material" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   RETURN 
END

-- REspaldar el nombre original del archivo 
SET @Nombre_Documento = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(50);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);








</Script></update></c><c y="NodeSet" t="2021-08-18T16:57:54"><controller name="Documento_Material" /><rule id="r102" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
AND Documento_Material_Id &lt;&gt; @Documento_Material_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   RETURN 
END



-- REspaldar el nombre original del archivo 
SET @Nombre_Documento = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(50);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);
</Script></update></c><c y="NodeSet" t="2021-08-19T10:25:38"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><view id="createForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-19T11:32:05"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><rule id="r104" /><update><Script>DECLARE @Cantidad_A_Entregar_Es_Valido BIT = 0;
DECLARE @Mensaje_Id INT = 0;

DECLARE @Cantidad_Solicitado NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_Ubicacion_Material_Surtido NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_Otra_Ubicacion NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_En_Edit NUMERIC(15,4) = 0;

-- la cantidad total solicitada
SET @Cantidad_Solicitado = ISNULL((SELECT TOP 1 ms.Cantidad_Solicitado FROM APP.Material_Surtido ms WHERE ms.Estatus_Registro_Id = 1 AND ms.Material_Surtido_Id = @Material_Surtido_Id),0);

-- la cantidad capturada en el registro padre
SET @Cantidad_Entregado_Ubicacion_Material_Surtido = ISNULL((
    SELECT TOP 1 SUM(ISNULL(ms.Cantidad_Entregado,0)) 
    FROM APP.Material_Surtido ms 
    WHERE ms.Estatus_Registro_Id = 1 
    AND ms.Material_Surtido_Id = @Material_Surtido_Id
),0);

-- la cantidad de otras ubicaciones (SIN CONTAR LA CANTIDAD DEL REGISTRO EDITANDOSE)
SET @Cantidad_Entregado_Otra_Ubicacion = ISNULL((
    SELECT TOP 1 SUM(ISNULL(mus.Cantidad_Entregado,0)) 
    FROM APP.[Material_Ubicacion_Almacenamiento_De_Surtido] mus 
    WHERE mus.Estatus_Registro_Id = 1 
    AND mus.Material_Surtido_Id = @Material_Surtido_Id
    AND mus.Material_Ubicacion_Almacenamiento_De_Surtido_Id &lt;&gt; @Material_Ubicacion_Almacenamiento_De_Surtido_Id
),0);

-- Obtener la cantidad total a surtir considerando la cantidad editada.
SET @Cantidad_Entregado_Otra_Ubicacion = @Cantidad_Entregado_Otra_Ubicacion + @Cantidad_Entregado


IF @Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado &lt; @Cantidad_Entregado
BEGIN
	SET @Cantidad_A_Entregar_Es_Valido = 0;	
	SET @Mensaje_Id = 1;
END
ELSE
IF (@Cantidad_Entregado + @Cantidad_Entregado_Ubicacion_Material_Surtido + @Cantidad_Entregado_Otra_Ubicacion) &lt;= @Cantidad_Solicitado
BEGIN
	SET @Cantidad_A_Entregar_Es_Valido = 1;	
END

IF @Cantidad_A_Entregar_Es_Valido = 0 AND @Mensaje_Id = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage =[dbo].[fn_Obtener_Mensaje_Sistema](157,1,0,'')
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](157,1,0,'')
   RETURN
END 
ELSE
IF @Cantidad_A_Entregar_Es_Valido = 0 AND @Mensaje_Id = 0
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage =[dbo].[fn_Obtener_Mensaje_Sistema](147,1,0,'')
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](147,1,0,'')
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2021-08-19T11:40:31"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1_1" /><view id="createForm1" /><dataField fieldName="Material_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-19T11:44:25"><controller name="Material_Ubicacion_Almacenamiento_De_Surtido1" /><rule id="r104" /><update><Script>DECLARE @Cantidad_A_Entregar_Es_Valido BIT = 0;
DECLARE @Mensaje_Id INT = 0;

DECLARE @Cantidad_Solicitado NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_Ubicacion_Material_Surtido NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_Otra_Ubicacion NUMERIC(15,4) = 0;
DECLARE @Cantidad_Entregado_En_Edit NUMERIC(15,4) = 0;

-- la cantidad total solicitada
SET @Cantidad_Solicitado = ISNULL((SELECT TOP 1 ms.Cantidad_Solicitado FROM APP.Material_Surtido ms WHERE ms.Estatus_Registro_Id = 1 AND ms.Material_Surtido_Id = @Material_Surtido_Id),0);

-- la cantidad capturada en el registro padre
SET @Cantidad_Entregado_Ubicacion_Material_Surtido = ISNULL((
    SELECT TOP 1 SUM(ISNULL(ms.Cantidad_Entregado,0)) 
    FROM APP.Material_Surtido ms 
    WHERE ms.Estatus_Registro_Id = 1 
    AND ms.Material_Surtido_Id = @Material_Surtido_Id
),0);

-- la cantidad de otras ubicaciones (SIN CONTAR LA CANTIDAD DEL REGISTRO EDITANDOSE)
SET @Cantidad_Entregado_Otra_Ubicacion = ISNULL((
    SELECT TOP 1 SUM(ISNULL(mus.Cantidad_Entregado,0)) 
    FROM APP.[Material_Ubicacion_Almacenamiento_De_Surtido] mus 
    WHERE mus.Estatus_Registro_Id = 1 
    AND mus.Material_Surtido_Id = @Material_Surtido_Id
    AND mus.Material_Ubicacion_Almacenamiento_De_Surtido_Id &lt;&gt; @Material_Ubicacion_Almacenamiento_De_Surtido_Id
),0);

-- Obtener la cantidad total a surtir considerando la cantidad editada.
SET @Cantidad_Entregado_Otra_Ubicacion = @Cantidad_Entregado_Otra_Ubicacion + @Cantidad_Entregado_En_Edit


IF @Total_Stock_En_Ubicacion_Almacenamiento_Seleccionado &lt; @Cantidad_Entregado
BEGIN
	SET @Cantidad_A_Entregar_Es_Valido = 0;	
	SET @Mensaje_Id = 1;
END
ELSE
IF (@Cantidad_Entregado + @Cantidad_Entregado_Ubicacion_Material_Surtido + @Cantidad_Entregado_Otra_Ubicacion) &lt;= @Cantidad_Solicitado
BEGIN
	SET @Cantidad_A_Entregar_Es_Valido = 1;	
END

IF @Cantidad_A_Entregar_Es_Valido = 0 AND @Mensaje_Id = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage =[dbo].[fn_Obtener_Mensaje_Sistema](157,1,0,'')
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](157,1,0,'')
   RETURN
END 
ELSE
IF @Cantidad_A_Entregar_Es_Valido = 0 AND @Mensaje_Id = 0
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage =[dbo].[fn_Obtener_Mensaje_Sistema](147,1,0,'')
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](147,1,0,'')
   RETURN
END 





SELECT * FROM dbo.Mensaje_Sistema WHERE Mensaje_Sistema_Id = 157
SELECT * FROM dbo.Mensaje_Sistema WHERE Mensaje_Sistema_Id = 147</Script></update></c><c y="NodeSet" t="2021-08-19T12:32:15"><controller name="Solicitud2" /><view id="createForm1" /><category id="c1" /><move><controller name="Solicitud2" /><field name="Orden_Produccion_Detalle" /></move></c><c y="NodeSet" t="2021-08-19T12:41:26"><controller name="Solicitud2" /><field name="Orden_Produccion_Detalle_Id" /><update><Copy>Orden_Produccion_Detalle = Orden_Produccion_Detalle_Id</Copy></update></c><c y="NodeSet" t="2021-08-19T14:15:26"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><insert type="rule"><Type>JavaScript</Type><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument><Phase>After</Phase><Script>alert('hola mundo');</Script></insert></c><c y="NodeSet" t="2021-08-19T14:16:45"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><rule id="r104" /><update><Script>//alert('hola mundo');
$appfactory.find('Grid_Dato_Usuario_Aplicacion_V', 'Controller').sync();</Script></update></c><c y="NodeSet" t="2021-08-19T14:17:07"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><rule id="r104" /><update><Script>//alert('hola mundo');
$appfactory.find('Movimiento_Ruta_Optima', 'Controller').sync();</Script></update></c><c y="NodeSet" t="2021-08-19T14:18:30"><controller name="Mov_Transfer_Ruta_Optima_A_Ejecutar_V" /><rule id="r104" /><update><Script>//alert('hola mundo');
$appfactory.find('Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3', 'Controller').sync();</Script></update></c><c y="NodeSet" t="2021-08-19T14:33:38"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><insert type="rule"><Type>JavaScript</Type><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument><Phase>After</Phase><Script>$appfactory.find('Movimiento_Ruta_Optima_Ubicacion_Almacenamiento3', 'Controller').sync();</Script></insert></c><c y="NodeSet" t="2021-08-19T14:33:58"><controller name="Mov_Dev_Ruta_Optima_A_Ejecutar_V" /><rule id="r102" /><update><Script>$appfactory.find('Movimiento_Ruta_Optima_Ubicacion_Almacenamiento1', 'Controller').sync();</Script></update></c><c y="NodeSet" t="2021-08-25T19:49:05"><controller name="Etiqueta_Embarque_Detalle1" /><view id="grid1" /><dataField fieldName="Inactivo_Por_Edicion" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T19:49:15"><controller name="Etiqueta_Embarque_Detalle1" /><view id="grid1" /><dataField fieldName="Inactivo_Por_Edicion" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T19:53:41"><controller name="Etiqueta_Embarque_Detalle1" /><rule id="r107" /><update><Script>DECLARE @Cus_Lin INT;    
DECLARE @Cus_Ord BIGINT;   

 SELECT TOP 1
      @Orden_Produccion_Id= EE.Orden_Produccion_Id
	  ,@Producto_Id = EE.Producto_Id 
	  ,@PO = EE.PO
	  ,@DC_S_Planta_Id = EE.DC_S_Planta_Id
	  ,@Unidad_Material_Id = EE.Unidad_Material_Id
  FROM APP.Etiqueta_Embarque EE
  WHERE EE.Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
  
  
  --------------------------------------------------------        

SELECT TOP 1
	   @Producto_Descripcion= P.Producto_Descripcion
	  ,@Cantidad_Total = OP.Cantidad
	  ,@Numero_Orden_Produccion = OP.Numero_Orden_Produccion
	  ,@Producto_Clave = P.Producto_Clave
	  ,@Cus_Lin = OP.Cus_Lin
	  ,@Cus_Ord = OP.Cus_Ord
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Producto P ON OP.Producto_Id  = P.Producto_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  ---
  SELECT TOP 1
	  @DC_S_Descripcion = PL.Descripcion_Planta
	  ,@DC_S_Planta = PL.Numero_Planta
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Planta PL ON OP.DC_S_Planta_Id  = PL.Planta_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  ---------------------------------------------------------
  
 IF @Cus_Lin IS NULL AND @Cus_Ord IS NULL BEGIN
    SET @S_O = '';
 END
 ELSE 
 BEGIN
     SET @S_O = CONCAT(@Cus_Ord, ' / ', RIGHT('00000' + CONVERT(VARCHAR(10),@Cus_Lin), 6)) -- SO
 END
 ----------------------------------------------------------
 
 -- Obtener unidad de material
SELECT TOP 1 
 	@Unidad_Material = Unidad_Material
FROM APP.Unidad_Material
WHERE Unidad_Material_Id = @Unidad_Material_Id
 
 
 
 
 </Script></update></c><c y="NodeSet" t="2021-08-25T19:54:06"><controller name="Etiqueta_Embarque_Detalle1" /><view id="createForm1" /><dataField fieldName="Unidad_Material_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T19:54:22"><controller name="Etiqueta_Embarque_Detalle1" /><view id="createForm1" /><dataField fieldName="Cantidad_De_Bultos" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T19:55:30"><controller name="Etiqueta_Embarque_Detalle1" /><view id="editForm1" /><dataField fieldName="Unidad_Material_Id" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T19:55:37"><controller name="Etiqueta_Embarque_Detalle1" /><view id="editForm1" /><dataField fieldName="Cantidad_De_Bultos" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T20:02:55"><controller name="Etiqueta_Embarque_Detalle1" /><rule id="r107" /><update><Script>DECLARE @Cus_Lin INT;    
DECLARE @Cus_Ord BIGINT;   

 SELECT TOP 1
      @Orden_Produccion_Id= EE.Orden_Produccion_Id
	  ,@Producto_Id = EE.Producto_Id 
	  ,@PO = EE.PO
	  ,@DC_S_Planta_Id = EE.DC_S_Planta_Id
	  ,@Unidad_Material_Id = EE.Unidad_Material_Id
	  ,@Cantidad_De_Bultos = EE.Cantidad_De_Bultos
  FROM APP.Etiqueta_Embarque EE
  WHERE EE.Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
  
  
  --------------------------------------------------------        

SELECT TOP 1
	   @Producto_Descripcion= P.Producto_Descripcion
	  ,@Cantidad_Total = OP.Cantidad
	  ,@Numero_Orden_Produccion = OP.Numero_Orden_Produccion
	  ,@Producto_Clave = P.Producto_Clave
	  ,@Cus_Lin = OP.Cus_Lin
	  ,@Cus_Ord = OP.Cus_Ord
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Producto P ON OP.Producto_Id  = P.Producto_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  ---
  SELECT TOP 1
	  @DC_S_Descripcion = PL.Descripcion_Planta
	  ,@DC_S_Planta = PL.Numero_Planta
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Planta PL ON OP.DC_S_Planta_Id  = PL.Planta_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  ---------------------------------------------------------
  
 IF @Cus_Lin IS NULL AND @Cus_Ord IS NULL BEGIN
    SET @S_O = '';
 END
 ELSE 
 BEGIN
     SET @S_O = CONCAT(@Cus_Ord, ' / ', RIGHT('00000' + CONVERT(VARCHAR(10),@Cus_Lin), 6)) -- SO
 END
 ----------------------------------------------------------
 
 -- Obtener unidad de material
SELECT TOP 1 
 	@Unidad_Material = Unidad_Material
FROM APP.Unidad_Material
WHERE Unidad_Material_Id = @Unidad_Material_Id
 
 
 
 
 </Script></update></c><c y="NodeSet" t="2021-08-25T21:03:21"><controller name="Etiqueta_Embarque1" /><view id="createForm1" /><dataField fieldName="Cantidad_De_Etiquetas" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T21:03:56"><controller name="Etiqueta_Embarque1" /><view id="editForm1" /><dataField fieldName="Cantidad_De_Etiquetas" /><update><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T21:13:22"><controller name="Etiqueta_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>alert([Cantidad_De_Bultos]);</Script></insert></c><c y="NodeSet" t="2021-08-25T21:19:40"><controller name="Etiqueta_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>alert([Cantidad_De_Bultos]);</Script></insert></c><c y="NodeSet" t="2021-08-25T21:19:59"><controller name="Etiqueta_Embarque1" /><view id="createForm1" /><dataField fieldName="Cantidad_De_Bultos" /><update><Columns /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-08-25T21:31:55"><controller name="Etiqueta_Embarque1" /><field name="Cantidad_De_Bultos" /><update><Default>((0))</Default><CodeValue /></update></c><c y="NodeSet" t="2021-08-25T21:34:34"><controller name="Etiqueta_Embarque1" /><field name="Cantidad_De_Etiquetas" /><update><Default>((0))</Default><CodeValue /></update></c><c y="NodeSet" t="2021-08-25T22:36:30"><controller name="Etiqueta_Embarque1" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2021-08-25T22:36:34"><controller name="Etiqueta_Embarque1" /><rule id="r110" /><delete /></c><c y="NodeSet" t="2021-08-25T23:23:15"><controller name="Etiqueta_Embarque1" /><rule id="r104" /><update><Script>IF @Arguments_Trigger = 'Orden_Produccion_Id' 
BEGIN

  -- Obtener los datos de la orden de produccion seleccionada
  SELECT TOP 1
	   @Producto_Descripcion= P.Producto_Descripcion
	  ,@Cantidad_Total = OP.Cantidad
	  --,@Cantidad_Total = OP.Cantidad_Total
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Producto P ON OP.Producto_Id  = P.Producto_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  ---
  SELECT TOP 1
	  @DC_S_Descripcion = PL.Descripcion_Planta
  FROM dbo.Orden_Produccion OP
  INNER JOIN APP.Planta PL ON OP.DC_S_Planta_Id  = PL.Planta_Id 
  WHERE OP.Orden_Produccion_Id = @Orden_Produccion_Id
  
  SET @Cantidad_De_Etiquetas = CEILING(@Cantidad_Total/NULLIF(@Cantidad_De_Bultos,0))
  
END
</Script></update></c><c y="NodeSet" t="2021-08-25T23:27:50"><controller name="Etiqueta_Embarque_Detalle1" /><actionGroup id="ag2" /><action id="a100" /><update><HeaderText>"Generar Etiqueta"</HeaderText><Confirmation>_controller=Impresion_Etiqueta_Embarque
_title=Impresion Etiqueta Embarque</Confirmation></update></c><c y="NodeSet" t="2021-08-25T23:32:49"><controller name="Etiqueta_Embarque_Detalle1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque_Detalle
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Detalle_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Detalle_Id))
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1413,1,10,@Etiqueta_Embarque_Detalle_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1413,1,10,@Etiqueta_Embarque_Detalle_Id)
   RETURN
END


</Script></update></c><c y="NodeSet" t="2021-08-25T23:35:52"><controller name="Etiqueta_Embarque1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Id))
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   RETURN
END


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2021-08-25T23:36:28"><controller name="Etiqueta_Embarque1" /><rule id="r102" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Id))
AND Etiqueta_Embarque_Id &lt;&gt; @Etiqueta_Embarque_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1412,1,10,@Etiqueta_Embarque_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1412,1,10,@Etiqueta_Embarque_Id)
   RETURN
END


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2021-08-26T00:09:56"><controller name="Etiqueta_Embarque1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Id))
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   RETURN
END

SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)

DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2021-08-26T00:10:13"><controller name="Etiqueta_Embarque1" /><rule id="r102" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Id))
AND Etiqueta_Embarque_Id &lt;&gt; @Etiqueta_Embarque_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1412,1,10,@Etiqueta_Embarque_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1412,1,10,@Etiqueta_Embarque_Id)
   RETURN
END

SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2021-09-12T16:03:32"><controller name="Solicitud2" /><insert type="field"><Name>Clasificacion_Material</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Clasificación del Material</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-09-12T16:03:47"><controller name="Solicitud2" /><view id="editForm1" /><move><controller name="Solicitud2" /><field name="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:03:58"><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Mat_Ubicacion" /><move><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:04:10"><controller name="Solicitud2" /><view id="createForm1" /><move><controller name="Solicitud2" /><field name="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:04:13"><controller name="Solicitud2" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Mat_Ubicacion" /><move><controller name="Solicitud2" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:06:20"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><delete /></c><c y="NodeSet" t="2021-09-12T16:14:26"><controller name="Solicitud2" /><insert type="field"><Name>Clasificacion_Material</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Clasificación del Material</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2021-09-12T16:15:22"><controller name="Solicitud2" /><view id="createForm1" /><move><controller name="Solicitud2" /><field name="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:15:26"><controller name="Solicitud2" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Mat_Ubicacion" /><move><controller name="Solicitud2" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:15:34"><controller name="Solicitud2" /><view id="editForm1" /><move><controller name="Solicitud2" /><field name="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:15:38"><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Mat_Ubicacion" /><move><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T16:28:01"><controller name="Solicitud2" /><insert type="rule"><Type>Sql</Type><CommandName>Edit</CommandName><Phase>Before</Phase><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></insert></c><c y="NodeSet" t="2021-09-12T16:28:49"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T16:32:35"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2021-09-12T16:38:05"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>After</Phase></update></c><c y="NodeSet" t="2021-09-12T16:50:16"><controller name="Solicitud2" /><rule id="r109" /><update><Script>

SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T16:50:31"><controller name="Solicitud2" /><rule id="r109" /><update><Script>
SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T16:53:04"><controller name="Solicitud2" /><rule id="r109" /><update><CommandName>Select</CommandName><View>editForm1</View><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T16:53:10"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2021-09-12T16:54:01"><controller name="Solicitud2" /><rule id="r109" /><update><CommandArgument>editForm1</CommandArgument><View /><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T16:54:56"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>After</Phase></update></c><c y="NodeSet" t="2021-09-12T17:07:03"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2021-09-12T17:07:46"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>Before</Phase></update></c><c y="NodeSet" t="2021-09-12T17:15:42"><controller name="Solicitud2" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2021-09-12T17:16:06"><controller name="Solicitud2" /><insert type="rule"><Type>Sql</Type><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument><Phase>Execute</Phase><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></insert></c><c y="NodeSet" t="2021-09-12T17:16:12"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T17:21:31"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script><Phase>Before</Phase></update></c><c y="NodeSet" t="2021-09-12T17:24:36"><controller name="Solicitud2" /><insert type="rule"><Type>JavaScript</Type><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument><Phase>Execute</Phase><Script>alert('dasdasdas');</Script></insert></c><c y="NodeSet" t="2021-09-12T17:25:15"><controller name="Solicitud2" /><rule id="r110" /><delete /></c><c y="NodeSet" t="2021-09-12T17:25:25"><controller name="Solicitud2" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2021-09-12T17:26:22"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Computed>true</Computed><Formula>SELECT TOP 1 Clasificacion FROM APP.Clasificacion CLF INNER JOIN APP.Material MAT ON ( MAT.Clasificacion_Id = CLF.Clasificacion_Id AND MAT.Material_Id = @Material_Solicitado_Id AND CLF.Estatus_Registro_Id = 1 )</Formula></update></c><c y="NodeSet" t="2021-09-12T17:28:28"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Formula>SELECT TOP 1 Clasificacion FROM APP.Clasificacion CLF INNER JOIN APP.Material MAT ON ( MAT.Clasificacion_Id = CLF.Clasificacion_Id AND MAT.Material_Id = @Material_Id AND CLF.Estatus_Registro_Id = 1 )</Formula></update></c><c y="NodeSet" t="2021-09-12T17:29:36"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Formula>SELECT TOP 1 Clasificacion FROM APP.Clasificacion CLF INNER JOIN APP.Material MAT ON ( MAT.Clasificacion_Id = CLF.Clasificacion_Id AND MAT.Material_Id = Material_Id AND CLF.Estatus_Registro_Id = 1 )</Formula></update></c><c y="NodeSet" t="2021-09-12T17:39:24"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Computed>false</Computed><Formula /></update></c><c y="NodeSet" t="2021-09-12T17:40:21"><controller name="Solicitud2" /><insert type="rule"><Type>Sql</Type><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument><Phase>Execute</Phase><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></insert></c><c y="NodeSet" t="2021-09-12T17:40:25"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T17:41:44"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><OnDemand>true</OnDemand></update></c><c y="NodeSet" t="2021-09-12T17:45:24"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')

SET @Result_ShowViewMessage = 'Hola'</Script></update></c><c y="NodeSet" t="2021-09-12T17:50:33"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
</Script><Phase>Before</Phase></update></c><c y="NodeSet" t="2021-09-12T17:50:38"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
</Script></update></c><c y="NodeSet" t="2021-09-12T17:52:32"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Type>Xml</Type></update></c><c y="NodeSet" t="2021-09-12T17:52:48"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Type>String</Type><Length>300</Length></update></c><c y="NodeSet" t="2021-09-12T17:54:05"><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Categoria_Es_Material_Indirecto" /><move><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T17:55:17"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Default>((''))</Default><OnDemand>false</OnDemand></update></c><c y="NodeSet" t="2021-09-12T17:56:38"><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Mat_Ubicacion" /><move><controller name="Solicitud2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Clasificacion_Material" /></move></c><c y="NodeSet" t="2021-09-12T17:56:53"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2021-09-12T17:57:47"><controller name="Solicitud2" /><rule id="r109" /><update><Script>SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
</Script></update></c><c y="NodeSet" t="2021-09-12T17:59:45"><controller name="Solicitud2" /><field name="Material_Solicitado_Id" /><update><Copy>Material_Solicitado_Id=Material_Id</Copy></update></c><c y="NodeSet" t="2021-09-12T18:02:08"><controller name="Solicitud2" /><rule id="r109" /><update><Script>/*
SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
*/

SET @Clasificacion_Material = 'dfsdfsdfsd'</Script></update></c><c y="NodeSet" t="2021-09-12T18:02:11"><controller name="Solicitud2" /><rule id="r109" /><update><Script>/*
SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
*/

SET @Clasificacion_Material = 'dfsdfsdfsd'</Script></update></c><c y="NodeSet" t="2021-09-12T18:03:06"><controller name="Solicitud2" /><rule id="r109" /><update><Script>/*
SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
*/

SET @Clasificacion_Material = 'dfsdfsdfsd'</Script><Phase>Before</Phase></update></c><c y="NodeSet" t="2021-09-12T18:04:39"><controller name="Solicitud2" /><rule id="r109" /><update><Script>/*
SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')
*/

SET @Clasificacion_Material = 'dfsdfsdfsd'</Script><Phase>After</Phase></update></c><c y="NodeSet" t="2021-09-12T18:07:06"><controller name="Solicitud2" /><field name="Clasificacion_Material" /><update><Computed>true</Computed><Formula>SELECT TOP 1 Clasificacion FROM APP.Clasificacion CLF INNER JOIN APP.Material MAT ON ( MAT.Clasificacion_Id = CLF.Clasificacion_Id AND MAT.Material_Id = "Solicitud"."Material_Solicitado_Id" AND CLF.Estatus_Registro_Id = 1 )</Formula></update></c><c y="NodeSet" t="2021-09-12T18:10:11"><controller name="Solicitud2" /><view id="editForm1" /><dataField fieldName="Clasificacion_Material" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-09-12T18:10:47"><controller name="Solicitud2" /><view id="createForm1" /><dataField fieldName="Clasificacion_Material" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2021-09-12T18:12:13"><controller name="Solicitud2" /><rule id="r106" /><update><Script>IF @Material_Solicitado_Id &gt;0
BEGIN
SET @Material_Stock_Total = ISNULL((SELECT TOP 1 SUM(mua.Total_Stock) FROM dbo.Material_Ubicacion_Almacen_V mua WHERE mua.Material_Id = @Material_Solicitado_Id),0);

SET @Mat_Ubicacion = CONVERT(VARCHAR(MAX),ISNULL(( SELECT
	STUFF((
			SELECT												
				'; Ubicación: ' + v.Ubicacion_Almacenamiento + ', Stock: ' + CONVERT(VARCHAR(20),CONVERT(NUMERIC(15,1),v.Total_Stock))
			FROM
				[dbo].[Mat_Ubic_Almacen_Mostrar_En_Solic_Manual_V] v
			WHERE
				v.Material_Id = @Material_Solicitado_Id
			FOR
			XML PATH('')
		), 1, 1, '')
	),'N/A')
	)
	
IF @Es_Urgencia_Compra = 0
BEGIN	
IF @Material_Stock_Total = 0 
BEGIN	
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = '173 - ' + [dbo].[fn_Obtener_Mensaje_Sistema](173,1,0,'')
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
END
END






SET @Clasificacion_Material = ISNULL((
    SELECT TOP 1 Clasificacion
    FROM APP.Clasificacion CLF
    INNER JOIN APP.Material MAT ON (
        MAT.Clasificacion_Id = CLF.Clasificacion_Id
        AND MAT.Material_Id = @Material_Solicitado_Id
        AND CLF.Estatus_Registro_Id = 1
    )
),'')</Script></update></c><c y="NodeSet" t="2021-09-12T18:18:57"><controller name="Solicitud2" /><rule id="r109" /><delete /></c><c y="NodeSet" t="2021-11-04T15:03:44"><controller name="Etiqueta_Embarque_Detalle1" /><actionGroup id="ag4" /><action id="a100" /><update><Confirmation>_controller=Impresion_Etiqueta_Embarque
_title=Impresion Etiqueta Embarque</Confirmation></update></c><c y="NodeSet" t="2021-11-04T15:03:53"><controller name="Etiqueta_Embarque_Detalle1" /><actionGroup id="ag4" /><action id="a100" /><update><Confirmation>_controller=Impresion_Etiqueta_Embarque
_title=Impresion Etiqueta Embarque</Confirmation></update></c><c y="NodeSet" t="2021-11-09T23:06:24"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="grid1" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Grid_Consulta_Surtido_Material_V" /><view id="grid1" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:06:48"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Grid_Consulta_Surtido_Material_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:07:05"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:07:14"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:10:30"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-09T23:11:08"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-09T23:32:48"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Material_Surtido_Id" /><move><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:33:29"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-09T23:35:39"><controller name="Grid_Orden_Prod_Incandescencias_V" /><move><controller name="Grid_Orden_Detalle_De_Orden_Produccion_V1" /></move></c><c y="NodeSet" t="2021-11-09T23:35:46"><controller name="Grid_Orden_Prod_Incandescencias_V" /><field name="Grid_Orden_Detalle_De_Orden_Produccion_V1" /><delete /></c><c y="NodeSet" t="2021-11-09T23:37:02"><controller name="Grid_Consulta_Surtido_Material_V" /><command id="Grid_Consulta_Surtido_Material_Entregado_V" /><update><Text>SELECT [Ruta_Optima_Id]
      ,[Estatus_Ruta_Optima]
      ,[Material_Solicitado_Id]
      ,[Material]
      ,[Material_Descripcion]
      ,[Cantidad_Solicitado]
      ,[Cantidad_Entregado]
      ,[Unidad_Material_Solicitado_Id]
      ,[Unidad_Material_Solicitado]
      ,[Unidad_Material_Entregado_Id]
      ,[Unidad_Material_Entregado]
      ,[Ubicacion_Almacenamiento_Id]
      ,[Ubicacion_Almacenamiento]
      ,[Estatus_Surtido_Id]
      ,[Estatus_Surtido]
      ,[Ubicacion_Almacenamiento_De_Surtido_Id]
      ,[Ubicacion_Almacenamiento_De_Surtido]
      ,[Surtido_Por_Id]
      ,[Tmp_Ruta_Optima_Transaccion_Id]
      ,[Usuario_Sistema]
      ,[Fecha_Ultima_Actualizacion]	 
	  ,[Area_Servicio]
	  ,[Solicitado_Por]
	  ,[Folio_Solicitud]
  FROM [dbo].[Grid_Consulta_Surtido_Material_Entregado_V]</Text></update></c><c y="NodeSet" t="2021-11-09T23:53:27"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><update><SortExpression>Folio_Solicitud ASC</SortExpression></update></c><c y="NodeSet" t="2021-11-09T23:56:03"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><update><SortExpression /></update></c><c y="NodeSet" t="2021-11-09T23:57:55"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Folio_Solicitud" /><delete /></c><c y="NodeSet" t="2021-11-10T00:07:42"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Ruta_Optima_Id" /><update><IsPrimaryKey>false</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:07:49"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>false</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:10:04"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:49:18"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Folio_Solicitud" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:51:01"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Ruta_Optima_Id" /><update><IsPrimaryKey>true</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:51:07"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>false</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:51:13"><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Folio_Solicitud" /><update><IsPrimaryKey>false</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:51:40"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><field name="Material_Ubicacion_Almacenamiento_De_Surtido_Id" /><update><IsPrimaryKey>false</IsPrimaryKey></update></c><c y="NodeSet" t="2021-11-10T00:58:13"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:58:28"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag1" /><action id="a10" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:58:38"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:58:48"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag2" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:59:09"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:59:21"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag4" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:59:36"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T00:59:44"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag9" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T01:01:33"><controller name="Grid_Consulta_Surtido_Material_V" /><actionGroup id="ag2" /><action id="a2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T01:01:41"><controller name="Grid_Consulta_Surtido_Material_V" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T01:01:54"><controller name="Grid_Consulta_Surtido_Material_V" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T01:04:43"><controller name="Grid_Consulta_Surtido_Material_Con_Area_Asignada_V" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-11-10T08:56:41"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><move><controller name="Grid_Consulta_Surtido_Material_V" /><field name="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-10T08:56:45"><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Grid_Consulta_Surtido_Material_V" /><view id="gridMaterialEntregado" /><dataField fieldName="Folio_Solicitud" /></move></c><c y="NodeSet" t="2021-11-15T15:48:25"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @Area_Servicio_Id INT, @Familia_Id INT
	SELECT 
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id) BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	-- ELSE BEGIN
		-- Solo se cambió el estatus de registro, y si será posible actualizar por los casos duplicados que existirán en produccion 
	-- END
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T15:50:27"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT 
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id) BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	-- ELSE BEGIN
		-- Solo se cambió el estatus de registro, y si será posible actualizar por los casos duplicados que existirán en produccion 
	-- END
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T15:51:56"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT 
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id) BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	-- ELSE BEGIN
		-- Solo se cambió el estatus de registro, y si será posible actualizar por los casos duplicados que existirán en produccion 
	-- END
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T15:56:22"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id) BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	-- ELSE BEGIN
		-- Solo se cambió el estatus de registro, y si será posible actualizar por los casos duplicados que existirán en produccion 
	-- END
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T16:13:52"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T16:16:13"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id
	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:03:12"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>SET @Result_ShowAlert = @BusinessRules_CommandName;
RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:06:34"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>SET @Result_ShowAlert = @Arguments_CommandName;
RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:10:06"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:29:40"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)

RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:36:15"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)

RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:36:26"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)

RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR

	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:38:05"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)


/*
RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR
*/
	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:43:05"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)
*/

/*
RETURN;

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR
*/
	
/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:45:19"><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Familia_Descripcion" /><move><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Familia_Id" /></move></c><c y="NodeSet" t="2021-11-15T22:46:47"><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Familia_Id" /><move><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /></move></c><c y="NodeSet" t="2021-11-15T22:52:26"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)



RETURN;

*/

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR



/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:52:33"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)



RETURN;

*/

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR



/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-15T22:57:51"><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Area_Servicio_Id" /><move><controller name="Area_Servicio_Familia1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Familia_Id" /></move></c><c y="NodeSet" t="2021-11-16T11:54:56"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-11-16T11:55:18"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)



RETURN;

*/

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR



/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-16T12:46:05"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1564,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-11-16T12:46:21"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)



RETURN;

*/

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1565,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1565,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR



/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-16T12:51:49"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1564,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-11-16T12:57:52"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1564,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-11-16T12:57:56"><controller name="Area_Servicio_Familia1" /><rule id="r103" /><update><Script>/*
-- SET @Result_ShowAlert = CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName);
INSERT INTO dbo.Bitacora_Sistema (
     Fecha_Inicio
    ,Proceso_Sistema_Id
    ,Aplicacion_Id
    ,Mensaje_Sistema_Id
    ,Transaccion_Id
    ,Rastreo
    ,Creado_Por_Id

) VALUES (
    GETDATE()-- Fecha_Inicio
    ,0 -- Proceso_Sistema_Id
    ,'2ffcd29b-3f14-4c2a-ab4e-ec696c7fee6a' -- Aplicacion_Id
    ,0 --Mensaje_Sistema_Id
    ,NEWID() -- Transaccion_Id
    ,CONCAT(@Arguments_CommandName, '; ', @Arguments_LastCommandName) --Rastreo
    ,'5c7568fd-6412-474e-a099-006fad27cd02' -- Creado_Por_Id
)



RETURN;

*/

DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT TOP 1 @Already_Exists  = 1
FROM APP.Area_Servicio_Familia
WHERE Area_Servicio_Id = @Area_Servicio_Id
AND Familia_Id = @Familia_Id
AND Estatus_Registro_Id = @Estatus_Registro_Id
AND Area_Servicio_Familia_Id &lt;&gt; @Area_Servicio_Familia_Id

	
IF @Already_Exists = 1
BEGIN
	-- Si existe otro registro que coincide con los datos (pero puede estar repetido por la reutilización de la tabla), entonces permititmos editar
	DECLARE @B_Area_Servicio_Id INT, @B_Familia_Id INT
	SELECT TOP 1
		@B_Area_Servicio_Id = Area_Servicio_Id
		,@B_Familia_Id = Familia_Id
	FROM APP.Area_Servicio_Familia
	WHERE Area_Servicio_Familia_Id = @Area_Servicio_Familia_Id
	
	-- Validar si cambio algun otro campo
	IF(@B_Area_Servicio_Id &lt;&gt; @Area_Servicio_Id OR @B_Familia_Id &lt;&gt; @Familia_Id)  BEGIN
		-- El usuario actualizó los valores principales y si se encontró otro registro, entonces no se debe permitir la edición
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1565,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
	END 
	ELSE IF (@Estatus_Registro_Id = 1) BEGIN
		-- El usuario cambio el Estatus de registro a activo y ya hay otro registro con misma area, familia y activo, entonces ya no se permite acticvar
		SET @BusinessRules_PreventDefault = 1
		SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1565,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
		SET @Result_ShowAlert = @Result_ShowViewMessage
		RETURN
		
	END
	-- DE lo contrario si se permite actualizar
	
END
-- ELSE SI SE PERMITE EDITAR



/*
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](151,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion )
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

*/</Script></update></c><c y="NodeSet" t="2021-11-16T13:06:19"><controller name="Area_Servicio_Familia1" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1564,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></insert></c><c y="NodeSet" t="2021-11-16T13:06:38"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><update><CommandName>IIIIIInsert</CommandName><Script>DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Area_Servicio_Familia
WHERE
	Area_Servicio_Id = @Area_Servicio_Id	
	AND Familia_Id = @Familia_Id
	

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1564,1,45,@Area_Servicio + ' vs. ' + @Familia_Descripcion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2021-11-16T13:08:13"><controller name="Area_Servicio_Familia1" /><rule id="r100" /><delete /></c><c y="NodeSet" t="2022-01-15T22:37:57"><controller name="Material_Exclusion" /><rule id="r103" /><update><Script>/*
DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Material_Exclusion
WHERE
	Tipo_Exclusion_Id = @Tipo_Exclusion_Id
AND Material_Id = @Material_Id
AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41,@Material + @Tipo_Exclusion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id = 7 AND ISNULL(@MaterialAExcluir,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id != 7 AND ISNULL(@Material,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END


*/


DECLARE @Already_Exists BIT
SET @Already_Exists = 0

IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41,@Material + @Tipo_Exclusion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

</Script></update></c><c y="NodeSet" t="2022-01-15T22:51:23"><controller name="Material_Exclusion" /><rule id="r103" /><update><Script>/*
DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Material_Exclusion
WHERE
	Tipo_Exclusion_Id = @Tipo_Exclusion_Id
AND Material_Id = @Material_Id
AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41,@Material + @Tipo_Exclusion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id = 7 AND ISNULL(@MaterialAExcluir,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id != 7 AND ISNULL(@Material,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END


*/




DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2022-01-15T22:58:04"><controller name="Material_Exclusion" /><rule id="r103" /><update><Script>
DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2022-01-15T23:09:13"><controller name="Material_Exclusion" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Material_Exclusion
WHERE
	Tipo_Exclusion_Id = @Tipo_Exclusion_Id
AND Material_Id = @Material_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](127,1,41,@Material + @Tipo_Exclusion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id = 7 AND ISNULL(@MaterialAExcluir,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id != 7 AND ISNULL(@Material,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END
*/




DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @Material_A_Excluir


    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END
    
    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](127,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2022-01-15T23:12:57"><controller name="Material_Exclusion" /><rule id="r100" /><update><Script>/*
DECLARE @Already_Exists BIT

SET @Already_Exists = 0

SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Material_Exclusion
WHERE
	Tipo_Exclusion_Id = @Tipo_Exclusion_Id
AND Material_Id = @Material_Id

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](127,1,41,@Material + @Tipo_Exclusion)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id = 7 AND ISNULL(@MaterialAExcluir,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 

IF @Tipo_Exclusion_Id != 7 AND ISNULL(@Material,'') = ''
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END
*/



DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir


    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](127,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2022-01-15T23:19:49"><controller name="Material_Exclusion1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir


    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](127,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 
</Script></update></c><c y="NodeSet" t="2022-01-15T23:20:38"><controller name="Material_Exclusion1" /><rule id="r103" /><update><Script>DECLARE @Already_Exists BIT
DECLARE @Registro_Existente VARCHAR(1000)
SET @Already_Exists = 0


IF @Tipo_Exclusion_Id = 7 BEGIN
    -- Exclusiones para el procesamiento de COOIS

    IF ISNULL(@MaterialAExcluir,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material A Excluir'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END 

    IF @Material_Id IS NULL SET @Material_Id = 0

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_A_Excluir = @MaterialAExcluir
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @MaterialAExcluir + ' vs ' + @Tipo_Exclusion

END
ELSE BEGIN
    -- Cualquier otro tipo de exclusión

    IF ISNULL(@Material,'') = ''
    BEGIN
        SET @BusinessRules_PreventDefault = 1
        SET @Result_ShowViewMessage = 'Es necesario insertar un Material'
        SET @Result_ShowAlert = @Result_ShowViewMessage
        RETURN
    END

    SELECT TOP 1 @Already_Exists  = 1
    FROM APP.Material_Exclusion
    WHERE Tipo_Exclusion_Id = @Tipo_Exclusion_Id
    AND Material_Id = @Material_Id
    AND Material_Exclusion_Id &lt;&gt; @Material_Exclusion_Id

    SET @Registro_Existente = @Material + ' vs ' + @Tipo_Exclusion
    
END

IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](128,1,41, @Registro_Existente)
   SET @Result_ShowAlert = @Result_ShowViewMessage
   RETURN
END 


</Script></update></c><c y="NodeSet" t="2022-01-15T23:26:30"><controller name="Material_Exclusion1" /><field name="Material_Id" /><update><AllowNulls>true</AllowNulls></update></c><c y="NodeSet" t="2022-03-08T23:02:21"><controller name="Resultado_Validacion_Embarque" /><field name="Estatus_Registro_Id" /><update><CodeDefault>1</CodeDefault><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:12:38"><controller name="Resultado_Validacion_Embarque" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-03-08T23:17:36"><controller name="Resultado_Validacion_Embarque" /><view id="grid1" /><update><Label>Resultado Validación Embarque</Label><ReportLabel>Resultado Validación Embarque</ReportLabel><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-08T23:17:47"><controller name="Resultado_Validacion_Embarque" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:20:54"><controller name="Resultado_Validacion_Embarque" /><view id="grid1" /><copy><controller name="Resultado_Validacion_Embarque" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-08T23:21:21"><controller name="Resultado_Validacion_Embarque" /><view id="v100" /><rename>Resultado_Validacion_Embarque_LookupList</rename></c><c y="NodeSet" t="2022-03-08T23:25:07"><controller name="Resultado_Validacion_Embarque" /><view id="Resultado_Validacion_Embarque_LookupList" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:25:07"><controller name="Resultado_Validacion_Embarque" /><view id="Resultado_Validacion_Embarque_LookupList" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:25:07"><controller name="Resultado_Validacion_Embarque" /><view id="Resultado_Validacion_Embarque_LookupList" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:25:14"><controller name="Resultado_Validacion_Embarque" /><view id="Resultado_Validacion_Embarque_LookupList" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-08T23:25:47"><controller name="Resultado_Validacion_Embarque" /><view id="Resultado_Validacion_Embarque_LookupList" /><update><FilterExpression>Estatus_Registro_Id IN (0,1) </FilterExpression></update></c><c y="NodeSet" t="2022-03-08T23:26:27"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><update><Label>Nuevo Resultado validación embarque</Label><HeaderText>Nuevo Resultado validación embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:28:03"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nuevo Resultado validación embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:28:35"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-08T23:28:39"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:28:43"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:28:46"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:29:26"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><update><Label>Resultado validación embarque</Label><HeaderText>Resultado validación embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:29:35"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Resultado validación embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:37:10"><controller name="Bitacora_Validador_Embarques" /><field name="Estatus_Registro_Id" /><update><CodeDefault>1</CodeDefault></update></c><c y="NodeSet" t="2022-03-08T23:37:39"><controller name="Bitacora_Validador_Embarques" /><field name="Estatus_Registro_Id" /><update><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:38:49"><controller name="Bitacora_Validador_Embarques" /><field name="Resultado_Validacion_Embarque_Id" /><update><ItemsDataView>Resultado_Validacion_Embarque_LookupList</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:40:05"><controller name="Bitacora_Validador_Embarques" /><field name="Mensaje_Sistema_Id" /><update><ItemsDataView>Mensaje_Sistema_LookUp_List</ItemsDataView><ItemsNewDataView /><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:41:48"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-03-08T23:42:04"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-08T23:42:17"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:42:28"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:42:39"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Creado_Por_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:42:57"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Actualizado_Por_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:43:10"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:43:25"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:43:53"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><update><Label>Bitácora Validador Embarques</Label><HeaderText>Bitácora Validador Embarques</HeaderText><ReportLabel>Bitácora Validador Embarques</ReportLabel></update></c><c y="NodeSet" t="2022-03-08T23:45:05"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><update><Label>Nueva Bitácora validador embarque</Label><HeaderText>Nueva Bitácora validador embarque</HeaderText><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-03-08T23:45:19"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nueva Bitácora validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:45:37"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:45:37"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:45:37"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:45:38"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:45:38"><controller name="Bitacora_Validador_Embarques" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:46:04"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><update><Label>Bitácora validador embarque</Label><HeaderText>Bitácora validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:46:11"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Bitácora validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:46:36"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:46:37"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:46:37"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:51:21"><controller name="Escaneo_Validador_Embarque" /><field name="Estatus_Registro_Id" /><update><CodeDefault>1</CodeDefault><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:52:00"><controller name="Escaneo_Validador_Embarque" /><field name="Bitacora_Validador_Embarques_Id" /><update><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:52:18"><controller name="Escaneo_Validador_Embarque" /><field name="Mensaje_Sistema_Id" /><update><ItemsDataView>Mensaje_Sistema_LookUp_List</ItemsDataView><ItemsNewDataView /><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:52:47"><controller name="Escaneo_Validador_Embarque" /><field name="Resultado_Validacion_Embarque_Id" /><update><ItemsDataView>Resultado_Validacion_Embarque_LookupList</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:53:12"><controller name="Escaneo_Validador_Embarque" /><field name="Delivery_Id" /><update><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:53:33"><controller name="Escaneo_Validador_Embarque" /><field name="Etiqueta_Embarque_Detalle_Id" /><update><ItemsDataView>Etiqueta_Embarque_Detalle_LookUp</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-08T23:54:23"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-08T23:54:32"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:54:42"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Delivery_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:54:55"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:55:06"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:55:17"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Bitacora_Validador_Embarques_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:55:29"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-08T23:56:30"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><update><Label>Nuevo Escaneo validador embarque</Label><HeaderText>Nuevo Escaneo validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:56:46"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nuevo Escaneo validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:57:12"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-08T23:57:13"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:57:13"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-08T23:57:13"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:57:19"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-08T23:57:49"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><update><Label>Escaneo validador embarque</Label><HeaderText>Escaneo validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:58:02"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Escaneo validador embarque</HeaderText></update></c><c y="NodeSet" t="2022-03-08T23:58:19"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:58:19"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-08T23:58:19"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-08T23:58:23"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:01:25"><controller name="Delivery" /><field name="Estatus_Registro_Id" /><update><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-09T00:02:29"><controller name="Delivery" /><field name="Producto_Id" /><update><ItemsDataView>Producto_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-09T00:03:12"><controller name="Delivery" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:03:29"><controller name="Delivery" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T00:03:39"><controller name="Delivery" /><view id="grid1" /><dataField fieldName="Producto_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T00:04:03"><controller name="Delivery" /><view id="grid1" /><copy><controller name="Delivery" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-09T00:04:16"><controller name="Delivery" /><view id="v100" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:04:16"><controller name="Delivery" /><view id="v100" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:04:16"><controller name="Delivery" /><view id="v100" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:04:17"><controller name="Delivery" /><view id="v100" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:04:22"><controller name="Delivery" /><view id="v100" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:04:38"><controller name="Delivery" /><view id="v100" /><rename>Delivery_LookUp_List</rename></c><c y="NodeSet" t="2022-03-09T00:05:12"><controller name="Delivery" /><view id="createForm1" /><update><Label>Nuevo Delivery</Label><HeaderText>Nuevo Delivery</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:05:25"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nuevo Delivery</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:05:33"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:05:34"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:05:34"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:05:34"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:05:39"><controller name="Delivery" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:06:07"><controller name="Delivery" /><view id="editForm1" /><update><Label>Delivery</Label><HeaderText>Delivery</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:06:29"><controller name="Delivery" /><view id="Delivery_LookUp_List" /><update><FilterExpression>Estatus_Registro_Id IN (0,1)</FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:06:43"><controller name="Delivery" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:06:43"><controller name="Delivery" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:06:43"><controller name="Delivery" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:06:46"><controller name="Delivery" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:14:10"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Estatus_Registro_Id" /><update><CodeDefault>1</CodeDefault><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-09T00:14:45"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Escaneo_Validador_Embarque_Id" /><update><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-09T00:15:18"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:15:38"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-09T00:16:28"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><update><Label>Nueva Evidencia Escaneo</Label><HeaderText>Nueva Evidencia Escaneo</HeaderText><ReportLabel>Evidencia Escaneo</ReportLabel></update></c><c y="NodeSet" t="2022-03-09T00:16:41"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nueva Evidencia Escaneo</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:16:59"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:00"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:00"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:00"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:05"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:33"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><update><Label>Evidencia Escaneo</Label><HeaderText>Evidencia Escaneo</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:17:41"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Evidencia Escaneo</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:17:55"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:55"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T00:17:55"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:21:07"><controller name="Log_Delivery_Procesamiento" /><view id="grid1" /><update><Label>Log Procesamiento Delivery</Label><HeaderText>Log Procesamiento Delivery</HeaderText><ReportLabel>Log Procesamiento Delivery</ReportLabel><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:21:17"><controller name="Log_Delivery_Procesamiento" /><view id="grid1" /><update><FilterExpression /></update></c><c y="NodeSet" t="2022-03-09T00:22:16"><controller name="Log_Delivery_Procesamiento" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nuevo Log Procesamiento Delivery</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:22:43"><controller name="Log_Delivery_Procesamiento" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Log Procesamiento Delivery</HeaderText></update></c><c y="NodeSet" t="2022-03-09T00:23:19"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><copy><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-09T00:23:42"><controller name="Bitacora_Validador_Embarques" /><view id="v100" /><rename>Bitacora_Validador_Embarque_Lo</rename></c><c y="NodeSet" t="2022-03-09T00:23:52"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_Lo" /><rename>Bitacora_Validador_Embarque_LookUp_List</rename></c><c y="NodeSet" t="2022-03-09T00:24:16"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:16"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:16"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Actualizado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:17"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:17"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Creado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:17"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Mensaje_Sistema_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:24"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T00:24:38"><controller name="Bitacora_Validador_Embarques" /><view id="Bitacora_Validador_Embarque_LookUp_List" /><update><FilterExpression>Estatus_Registro_Id IN (0,1) </FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:25:03"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><copy><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-09T00:25:22"><controller name="Escaneo_Validador_Embarque" /><view id="v100" /><rename>Escaneo_Validador_Embarque_LookUp_List</rename></c><c y="NodeSet" t="2022-03-09T00:25:40"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><update><FilterExpression>Estatus_Registro_Id IN (0,1) </FilterExpression></update></c><c y="NodeSet" t="2022-03-09T00:27:05"><controller name="Escaneo_Validador_Embarque" /><field name="Delivery_Id" /><update><ItemsDataView>Delivery_LookUp_List</ItemsDataView></update></c><c y="NodeSet" t="2022-03-09T00:27:39"><controller name="Escaneo_Validador_Embarque" /><field name="Bitacora_Validador_Embarques_Id" /><update><ItemsDataView>Bitacora_Validador_Embarque_LookUp_List</ItemsDataView></update></c><c y="NodeSet" t="2022-03-09T08:58:43"><controller name="Resultado_Validacion_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Resultado_Validacion_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Estatus_Validacion_Embarque)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Estatus_Validacion_Embarque)) -- Verificar si aplica campo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T08:59:25"><controller name="Resultado_Validacion_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>-- Insert/After
UPDATE  
   APP.Resultado_Validacion_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T08:59:55"><controller name="Resultado_Validacion_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>Before</Phase><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Resultado_Validacion_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Estatus_Validacion_Embarque)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Estatus_Validacion_Embarque)) -- Verificar si aplica campo
AND Resultado_Validacion_Embarque_Id &lt;&gt; @Estatus_Validacion_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:00:17"><controller name="Resultado_Validacion_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>--- Update/After
UPDATE  
   APP.Resultado_Validacion_Embarque 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:03:40"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:04:16"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:04:43"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:05:12"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:20:36"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:26:20"><controller name="Bitacora_Validador_Embarques" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>-- Insert/After
UPDATE  
   APP.Bitacora_Validador_Embarques 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:26:50"><controller name="Bitacora_Validador_Embarques" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>--- Update/After
UPDATE  
   APP.Bitacora_Validador_Embarques 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:28:33"><controller name="Bitacora_Validador_Embarques" /><rule id="r101" /><update><Script>--- Update/After
UPDATE  
   APP.Bitacora_Validador_Embarques 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T09:29:30"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data></update></c><c y="NodeSet" t="2022-03-09T09:30:04"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data></update></c><c y="NodeSet" t="2022-03-09T09:30:24"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data></update></c><c y="NodeSet" t="2022-03-09T09:30:47"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data></update></c><c y="NodeSet" t="2022-03-09T09:40:59"><controller name="Delivery" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Delivery 
WHERE 
   Delivery = @Delivery
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1609,1,230,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1609,1,230,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:41:38"><controller name="Delivery" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>
-- Insert/After
UPDATE  
   APP.Delivery 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:42:14"><controller name="Delivery" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>Before</Phase><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Delivery 
WHERE 
   Delivery = @Delivery -- Verificar si aplica campo
AND Delivery_Id &lt;&gt; @Delivery_Id
IF @Already_Exists = 1
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1609,1,230,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1609,1,230,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:43:09"><controller name="Delivery" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>
--- Update/After
UPDATE  
   APP.Delivery 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T09:43:35"><controller name="Delivery" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:44:01"><controller name="Delivery" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:44:16"><controller name="Delivery" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:44:34"><controller name="Delivery" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data></update></c><c y="NodeSet" t="2022-03-09T09:45:00"><controller name="Delivery" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:04:12"><controller name="Evidencia_Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>-- Insert/After
UPDATE  
   APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:04:21"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T10:04:37"><controller name="Evidencia_Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:05:03"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r101" /><update><Script>-- Insert/After
UPDATE  
   APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T10:05:32"><controller name="Evidencia_Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>Before</Phase><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Evidencia_Escaneo_Validador_Embarque)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Evidencia_Escaneo_Validador_Embarque)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Evidencia_Escaneo_Validador_Embarque) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:06:13"><controller name="Evidencia_Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>--- Update/After
UPDATE  
   APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:06:44"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:07:06"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:07:21"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:07:41"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:09:53"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:11:17"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:11:33"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:14:17"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><CssClass>AdministradorEmbarques</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:14:48"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:15:04"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:15:30"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:17:19"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:17:50"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:18:15"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:18:32"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:18:59"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:19:36"><controller name="Delivery" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:19:57"><controller name="Delivery" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:20:23"><controller name="Delivery" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:20:48"><controller name="Delivery" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:21:20"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:21:39"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:21:57"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:22:22"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><CssClass>material-icon-delete</CssClass><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T10:36:54"><controller name="Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>-- Insert/After
UPDATE  
   APP.Escaneo_Validador_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:37:28"><controller name="Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/After
UPDATE  
   APP.Escaneo_Validador_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T10:38:01"><controller name="Escaneo_Validador_Embarque" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>-- Insert/After
UPDATE  
   APP.Escaneo_Validador_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-09T10:38:22"><controller name="Escaneo_Validador_Embarque" /><rule id="r101" /><update><Script>--- Update/After
UPDATE  
   APP.Escaneo_Validador_Embarque 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T10:38:53"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:39:28"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:39:41"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:39:59"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:40:27"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T10:42:36"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:42:47"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:43:00"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:43:19"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Estatus_Validacion_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:43:38"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:43:49"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:44:00"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:44:20"><controller name="Bitacora_Validador_Embarques" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Bitacora_Validador_Embarques 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Bitacora_Validador_Embarques_Id = @Bitacora_Validador_Embarques_Id
</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:45:00"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:45:12"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:45:24"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:45:47"><controller name="Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:46:14"><controller name="Delivery" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:46:51"><controller name="Delivery" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:47:03"><controller name="Delivery" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:47:22"><controller name="Delivery" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Delivery 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Delivery_Id = @Delivery_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:47:41"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:47:51"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:48:03"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:48:19"><controller name="Evidencia_Escaneo_Validador_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Evidencia_Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:59:49"><controller name="Resultado_Validacion_Embarque" /><rule id="r101" /><update><Script>-- Insert/After
UPDATE  
   APP.Resultado_Validacion_Embarque 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:00:04"><controller name="Resultado_Validacion_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Resultado_Validacion_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Estatus_Validacion_Embarque)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Estatus_Validacion_Embarque)) -- Verificar si aplica campo
AND Resultado_Validacion_Embarque_Id &lt;&gt; @Resultado_Validacion_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1605,1,228,@Estatus_Validacion_Embarque) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:00:15"><controller name="Resultado_Validacion_Embarque" /><rule id="r103" /><update><Script>--- Update/After
UPDATE  
   APP.Resultado_Validacion_Embarque 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:02:11"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T11:02:25"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T11:02:52"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T11:03:12"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-03-09T11:06:38"><controller name="Resultado_Validacion_Embarque" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Resultado_Validacion_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Resultado_Validacion_Embarque_Id = @Resultado_Validacion_Embarque_Id</Data><CssClass>material-icon-delete</CssClass></update></c><c y="NodeSet" t="2022-03-09T11:09:08"><controller name="Bitacora_Validador_Embarques" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-09T11:13:51"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:14:12"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Evidencia_Escaneo_Validador_Embarque)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Evidencia_Escaneo_Validador_Embarque)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:14:26"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r103" /><update><Script>--- Update/After
UPDATE  
   APP.Evidencia_Escaneo_Validador_Embarque 
SET 
    Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Evidencia_Escaneo_Validador_Embarque_Id = @Evidencia_Escaneo_Validador_Embarque_Id
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:15:42"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T11:16:59"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:45:09"><controller name="Resultado_Validacion_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T11:45:24"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-09T11:45:24"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T11:45:25"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-09T11:45:28"><controller name="Resultado_Validacion_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-09T11:48:42"><controller name="Delivery" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Delivery 
WHERE 
   Delivery = @Delivery
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:49:01"><controller name="Delivery" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Delivery 
WHERE 
   Delivery = @Delivery -- Verificar si aplica campo
AND Delivery_Id &lt;&gt; @Delivery_Id
IF @Already_Exists = 1
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:50:17"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:50:45"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-09T11:53:40"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="PictureFileName" /><update><Length>250</Length></update></c><c y="NodeSet" t="2022-03-09T11:53:48"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="PictureContentType" /><update><Length>250</Length></update></c><c y="NodeSet" t="2022-03-11T14:19:25"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Dos" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-11T14:22:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Etiqueta_Embarque_Detalle_Id;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery_Id;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Etiqueta_Embarque_Detalle_Id = [Etiqueta_Embarque_Detalle_Id];
    _SOrden_SItem_Tarima = [Sorde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery_Id = [Delivery_Id];
    // Sección del paso uno pero en la sección dos
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque];
    _SOrden_SItem_Tarima = [Sorde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery_Id = [Delivery_Dos];
    // obtener datos de la seccion1 pero en la seccion 3
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque_Tres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Etiqueta_Embarque_Detalle_Id
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery_Id
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-11T14:25:35"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a6" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-11T14:25:47"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-11T14:26:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /></move></c><c y="NodeSet" t="2022-03-11T14:26:07"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /></move></c><c y="NodeSet" t="2022-03-11T14:38:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Etiqueta_Embarque_Detalle_Id;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery_Id;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Etiqueta_Embarque_Detalle_Id = [Etiqueta_Embarque_Detalle_Id];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery_Id = [Delivery_Id];
    // Sección del paso uno pero en la sección dos
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery_Id = [Delivery_Dos];
    // obtener datos de la seccion1 pero en la seccion 3
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque_Tres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Etiqueta_Embarque_Detalle_Id
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery_Id
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-11T14:57:19"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Dos" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-11T14:58:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Etiqueta_Embarque_Detalle_Id;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery_Id;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Etiqueta_Embarque_Detalle_Id = [Etiqueta_Embarque_Detalle_Id];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery_Id = [Delivery_Id];
    // Sección del paso uno pero en la sección dos
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery_Id = [Delivery_Dos];
    // obtener datos de la seccion1 pero en la seccion 3
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque_Tres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Etiqueta_Embarque_Detalle_Id
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery_Id
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-11T15:00:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Etiqueta_Embarque_Detalle_Id;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery_Id;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Etiqueta_Embarque_Detalle_Id = [Etiqueta_Embarque_Detalle_Id];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery_Id = [Delivery_Id];
    // Sección del paso uno pero en la sección dos
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery_Id = [Delivery_Dos];
    // obtener datos de la seccion1 pero en la seccion 3
    _Etiqueta_Embarque_Detalle_Id = [Folio_Etiqueta_Embarque_Tres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Etiqueta_Embarque_Detalle_Id
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery_Id
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-11T17:11:29"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>New</CommandName><Phase>After</Phase><Script>alert('Perfect!!!!');</Script></insert></c><c y="NodeSet" t="2022-03-11T17:13:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>console.log('Se abrió el modal');</Script></update></c><c y="NodeSet" t="2022-03-11T17:14:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><View>createForm1</View></update></c><c y="NodeSet" t="2022-03-11T17:16:59"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>// código para observar cuando se cierra y abren las categorías
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                switch(Num_Category) {
                    case '2':
                        seccionCapturada = 1;
                        break;
                    case '3':
                        seccionCapturada = 2;
                        break;
                    case '5':
                        seccionCapturada = 3;
                        break;
                    default:
                        seccionCapturada = null;
                        break;
                }
                if(seccionCapturada){
                    $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-11T17:29:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Id');
                        break;
                    case '5':
                        //seccionCapturada = 3;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        //seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-11T17:30:04"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Id');
                        break;
                    case '5':
                        //seccionCapturada = 3;
                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        //seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-11T17:43:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Id');
                        break;
                    case '5':
                        //seccionCapturada = 3;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-14T01:01:53"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Surtidor_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:10:42"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Destino" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:10:51"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Destino" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Nombre_Equipo_Llamada" /></move></c><c y="NodeSet" t="2022-03-14T01:12:42"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Surtidor_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Nombre_Equipo_Llamada" /></move></c><c y="NodeSet" t="2022-03-14T01:12:46"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Captura" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Nombre_Equipo_Llamada" /></move></c><c y="NodeSet" t="2022-03-14T01:17:04"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:20:13"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:20:16"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ruta_Optima_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:20:30"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><dataField fieldName="Material_Surtido_Id" /><update><Tag /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-14T01:24:09"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><dataField fieldName="Material_Surtido_Id" /><update><Tag>lookup-details-hidden</Tag><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-14T01:26:54"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:28:21"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Origen" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:31:43"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Usuario_Surtidor_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:31:49"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ubicacion_Destino" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:32:18"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Descripcion" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:34:16"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Tipo_Operacion_Sap_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Ruta_Optima_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:34:16"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Tipo_Operacion_Sap_Id" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:37:22"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><copy><controller name="Bitacora_Captura_Sap2" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-14T01:37:22"><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /><copy><controller name="Bitacora_Captura_Sap2" /><view id="editForm1" /></copy></c><c y="NodeSet" t="2022-03-14T01:37:39"><controller name="Bitacora_Captura_Sap2" /><view id="v101" /><rename>editBatch</rename></c><c y="NodeSet" t="2022-03-14T01:37:49"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Ubicacion_Destino" /><move><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Estatus_Captura_Sap_Id" /></move></c><c y="NodeSet" t="2022-03-14T01:38:52"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Material_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:38:53"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Tipo_Surtido_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:38:53"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Material_Descripcion" /><delete /></c><c y="NodeSet" t="2022-03-14T01:38:57"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Material" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:02"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Cantidad_Entregado" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:15"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Fecha_Captura" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:15"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Nombre_Equipo_Llamada" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:16"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Captura_Local" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:16"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Captura_Remota" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:17"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Nombre_Equipo_Captura" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:17"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Mensaje_Sistema_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:18"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Error" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:18"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:18"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Capturado_Por_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:19"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Captura_De_Surtido" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:19"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Devolucion_De_Material" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:19"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Transferencia_De_Material" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:20"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Devolucion_Material_Descripcion" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:20"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Tipo_Movimiento_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:20"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Captura_Manual_Con_Pdf" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:21"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Movimiento_Descto_Stock_En_Piso" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:21"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Es_Paso_Uno_Transferencia" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:21"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Solicitud_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:22"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Tipo_Operacion_Sap_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:35"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Ruta_Optima_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:39:42"><controller name="Bitacora_Captura_Sap2" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Material_Surtido_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T01:40:01"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editBatch</CommandArgument></update></c><c y="NodeSet" t="2022-03-14T01:41:00"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><HeaderText>"test"</HeaderText></update></c><c y="NodeSet" t="2022-03-14T01:45:04"><controller name="Bitacora_Captura_Sap2" /><actionGroup id="ag1" /><action id="a10" /><update><HeaderText>"Editar"</HeaderText></update></c><c y="NodeSet" t="2022-03-14T08:39:49"><controller name="Orden_Produccion_Pickeo1" /><view id="editForm1" /><copy><controller name="Orden_Produccion_Pickeo1" /><view id="editForm1" /></copy></c><c y="NodeSet" t="2022-03-14T08:39:59"><controller name="Orden_Produccion_Pickeo1" /><view id="v100" /><rename>editBatch</rename></c><c y="NodeSet" t="2022-03-14T08:40:14"><controller name="Orden_Produccion_Pickeo1" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editBatch</CommandArgument></update></c><c y="NodeSet" t="2022-03-14T08:42:27"><controller name="Orden_Produccion_Pickeo1" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Orden_Produccion_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T08:43:57"><controller name="Orden_Produccion_Pickeo1" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Producto_Descripcion" /><delete /></c><c y="NodeSet" t="2022-03-14T08:44:06"><controller name="Orden_Produccion_Pickeo1" /><view id="editBatch" /><category id="c1" /><dataField fieldName="Estatus_Orden_Produccion_Pickeo_Id" /><delete /></c><c y="NodeSet" t="2022-03-14T08:49:43"><controller name="Solicitud2_2" /><view id="editForm1" /><copy><controller name="Solicitud2_2" /><view id="editForm1" /></copy></c><c y="NodeSet" t="2022-03-14T08:49:51"><controller name="Solicitud2_2" /><view id="v100" /><rename>editBatch</rename></c><c y="NodeSet" t="2022-03-14T08:50:10"><controller name="Solicitud2_2" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editBatch</CommandArgument></update></c><c y="NodeSet" t="2022-03-14T08:52:18"><controller name="Solicitud2_2" /><view id="editBatch" /><dataField fieldName="Motivo_Solicitud" /><update><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-14T08:52:33"><controller name="Solicitud2_2" /><view id="editBatch" /><dataField fieldName="Solicitud_Numero_Orden_Produccion" /><update><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-14T09:01:06"><controller name="Solicitud2_2" /><actionGroup id="ag1" /><action id="a10" /><update><CommandArgument>editForm1</CommandArgument></update></c><c y="NodeSet" t="2022-03-14T09:01:23"><controller name="Solicitud2_2" /><view id="editBatch" /><delete /></c><c y="NodeSet" t="2022-03-15T17:23:30"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_ETiqueta_Embarque_SeccionUno</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Etiqueta</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-15T17:24:21"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Etiqueta_Embarque_SeccionDos</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Etiqueta Embarque Sección Dos</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-15T17:24:57"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Etiqueta_Embarque_SeccionTres</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Etiqueta Embarque Seccion Tres</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-15T17:25:35"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_ETiqueta_Embarque_SeccionUno" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-03-15T17:25:43"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionDos" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-03-15T17:26:05"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_ETiqueta_Embarque_SeccionUno" /><rename>Folio_Etiqueta_Embarque_SeccionUno</rename></c><c y="NodeSet" t="2022-03-15T17:26:21"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionUno" /></move></c><c y="NodeSet" t="2022-03-15T17:26:25"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c2" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionUno" /></move></c><c y="NodeSet" t="2022-03-15T17:26:36"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:26:51"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionDos" /></move></c><c y="NodeSet" t="2022-03-15T17:26:54"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionDos" /></move></c><c y="NodeSet" t="2022-03-15T17:27:04"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Folio_Etiqueta_Embarque" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:27:14"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Etiqueta_Embarque_SeccionTres" /></move></c><c y="NodeSet" t="2022-03-15T17:27:17"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Folio_Etiqueta_Embarque_Tres" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionTres" /></move></c><c y="NodeSet" t="2022-03-15T17:27:29"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Folio_Etiqueta_Embarque_Tres" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:27:41"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionDos" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:29:53"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Delivery_SeccionTres</Name><Type>String</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Delivery Seccion Tres</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-15T17:30:49"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_Delivery" /></move></c><c y="NodeSet" t="2022-03-15T17:30:53"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c3" /><dataField fieldName="Delivery_Delivery" /></move></c><c y="NodeSet" t="2022-03-15T17:31:12"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:31:44"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Delivery_SeccionTres" /></move></c><c y="NodeSet" t="2022-03-15T17:31:48"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Delivery_Dos" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c5" /><dataField fieldName="Delivery_SeccionTres" /></move></c><c y="NodeSet" t="2022-03-15T17:32:38"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Dos" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:33:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-15T17:40:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;

// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;

if(_Seccion_Capturada === 1){
    // Sección del paso uno
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
    // El resto de campos queda null
}

// campos para validación de la sección 2
if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    // El resto de campos queda null
}

// campos para validación de la sección 3
if(_Seccion_Capturada === 3){
    // obtener los datos del packing list
    _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
    _Delivery_Packing_List = [Delivery_Packing_List];
    _Cantidad = [Cantidad_Material];
    // obtener datos del delivery en la seccion 3
    _Delivery = [Delivery_SeccionTres];
    // obtener datos de la seccion1 pero en la seccion 3
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
    _Material_Tarima = [Material_Tarima_Tres];
}

// --- Antes de ejecutar la llamada se pueden aplicar validaciones previas

// desde el botón se requiere que toda la sección es obligatoria.
var _Validar = 1;

validaretiquetas(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
    }
    else{
        console.log("ELSE");
        /*
            $app.input.execute({
            values: [
                { name: 'BCUC_Cooling_Capacity', value: null }
                ,{ name: 'BCUC_Cooling_Capacity_Conversion', value: null }
                ,{ name: 'Condensing_Capacity', value: null }
                ,{ name: 'Condensing_Capacity_Conversion', value: null }
                ,{ name: 'Reserve_Capacity', value: null }
                ,{ name: 'Model', value: null }
                ,{ name: 'Compresor_Id_Resultante_1', value: null }
                ,{ name: 'Compresor_Id_Resultante_2', value: null }
                ,{ name: 'Compresor_Capacity_QW_1', value: null }
                ,{ name: 'Compresor_Capacity_QW_2', value: null }
                ,{ name: 'Compresor_Cop_1', value: null }
                ,{ name: 'Compresor_Cop_2', value: null }
            ]
            });
        */ 
   }  

 });</Script></update></c><c y="NodeSet" t="2022-03-15T17:53:40"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Delivery_Delivery" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-15T17:53:48"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionDos" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-23T23:53:59"><controller name="Evidencia_Escaneo_Validador_Embarque" /><clone /></c><c y="NodeSet" t="2022-03-23T23:54:30"><controller name="Escaneo_Validador_Embarque1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-23T23:55:08"><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /><update><DataViewFilterFields>Transaccion_Escaneo</DataViewFilterFields></update></c><c y="NodeSet" t="2022-03-24T00:08:37"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-24T00:12:20"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-24T00:20:21"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   -- AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-24T00:20:40"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   -- AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-24T00:39:00"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><Roles /></update></c><c y="NodeSet" t="2022-03-24T00:49:54"><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /><update><ContextFields>Transaccion_Escaneo = Transaccion_Escaneo</ContextFields></update></c><c y="NodeSet" t="2022-03-24T00:56:57"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><copy><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /></copy></c><c y="NodeSet" t="2022-03-24T00:57:41"><controller name="Escaneo_Validador_Embarque1" /><view id="v100" /><rename>FormNuevo</rename></c><c y="NodeSet" t="2022-03-24T00:59:10"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><Name>ExecJS004</Name><Phase>Execute</Phase><Script>$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    { name: 'Folio_Escaneo_Id', value: 1}
  ]
});</Script></insert></c><c y="NodeSet" t="2022-03-24T00:59:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    //{ name: 'Folio_Escaneo_Id', value: 1}
  ]
});</Script></update></c><c y="NodeSet" t="2022-03-24T01:00:13"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS004</CommandArgument><HeaderText>"NUEVO"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-24T01:08:44"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Edit</CommandName><CommandArgument>FormNuevo</CommandArgument><Phase>After</Phase><Script>console.log('Se abrió el nuevo FORM');</Script></insert></c><c y="NodeSet" t="2022-03-24T01:10:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><View>FormNuevo</View><Name>ExecJS005</Name></update></c><c y="NodeSet" t="2022-03-24T01:13:23"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandName>Custom</CommandName><CommandArgument>ExecJS004</CommandArgument><View /><Script>alert('Se abrió el nuevo FORM');</Script></update></c><c y="NodeSet" t="2022-03-24T01:15:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// alert('Se abrió el nuevo FORM');

const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-24T01:16:01"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T01:19:10"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><HeaderText>"Hola"</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></insert></c><c y="NodeSet" t="2022-03-24T08:37:39"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Escaneo_Id</Name><Type>Int64</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Escaneo Id</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-03-24T08:38:49"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Transaccion_Escaneo" /></move></c><c y="NodeSet" t="2022-03-24T08:55:02"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Resultado_Validacion" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Transaccion_Escaneo" /></move></c><c y="NodeSet" t="2022-03-24T08:56:54"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Escaneo_Id" /><update><IsVirtual>true</IsVirtual></update></c><c y="NodeSet" t="2022-03-24T08:57:05"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Escaneo_Id" /></move></c><c y="NodeSet" t="2022-03-24T08:57:08"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Transaccion_Escaneo" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Folio_Escaneo_Id" /></move></c><c y="NodeSet" t="2022-03-24T09:14:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// alert('Se abrió el nuevo FORM');
fnDebug('Se iniciarón los observadores del formulario');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Escaneo_Validador_Embarque_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Escaneo_Validador_Embarque_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Escaneo_Validador_Embarque_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-24T09:15:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// alert('Se abrió el nuevo FORM');
fnDebug('Se iniciarón los observadores del formulario');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: [Transaccion_Escaneo] }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-24T09:23:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// alert('Se abrió el nuevo FORM');
fnDebug('Se iniciarón los observadores del formulario');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});</Script></update></c><c y="NodeSet" t="2022-03-24T09:42:17"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-24T09:43:26"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a5" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-24T09:48:15"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><Name>ExecJS006</Name><Phase>Execute</Phase><Script>alert('ExecJS006')</Script></insert></c><c y="NodeSet" t="2022-03-24T09:48:47"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><HeaderText>"NUEVO ESCANEO"</HeaderText></update></c><c y="NodeSet" t="2022-03-24T09:50:54"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><CommandArgument>ExecJS006</CommandArgument></update></c><c y="NodeSet" t="2022-03-24T10:06:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>alert('ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T10:07:54"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><WhenLastCommandName /></update></c><c y="NodeSet" t="2022-03-24T10:16:07"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><WhenLastCommandArgument /><WhenView>FormNuevo</WhenView></update></c><c y="NodeSet" t="2022-03-24T10:18:52"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><WhenLastCommandName>Edit</WhenLastCommandName></update></c><c y="NodeSet" t="2022-03-24T10:19:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>this.preventDefault();
alert('ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T10:21:34"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument><WhenView /></update></c><c y="NodeSet" t="2022-03-24T10:27:08"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /></move></c><c y="NodeSet" t="2022-03-24T10:27:11"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><move><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /></move></c><c y="NodeSet" t="2022-03-24T10:27:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());

</Script></update></c><c y="NodeSet" t="2022-03-24T10:28:06"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());

</Script></update></c><c y="NodeSet" t="2022-03-24T10:30:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());

</Script><Phase>After</Phase></update></c><c y="NodeSet" t="2022-03-24T10:33:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>debug('START ExecJS004');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    //{ name: 'Folio_Escaneo_Id', value: 1}
  ]
});

debug('END ExecJS004');</Script></update></c><c y="NodeSet" t="2022-03-24T10:34:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    //{ name: 'Folio_Escaneo_Id', value: 1}
  ]
});

fnDebug('END ExecJS004');</Script></update></c><c y="NodeSet" t="2022-03-24T10:35:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// alert('Se abrió el nuevo FORM');
fnDebug('Se iniciarón los observadores del formulario');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script></update></c><c y="NodeSet" t="2022-03-24T10:35:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T10:41:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>
fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS005');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script></update></c><c y="NodeSet" t="2022-03-24T10:59:08"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a100" /><update><WhenView>grid1</WhenView></update></c><c y="NodeSet" t="2022-03-24T11:01:23"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a100" /><rename>a300</rename></c><c y="NodeSet" t="2022-03-24T11:09:09"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><HeaderText>"F"</HeaderText></update></c><c y="NodeSet" t="2022-03-24T11:11:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T11:28:13"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><WhenLastCommandName /><WhenLastCommandArgument /></update></c><c y="NodeSet" t="2022-03-24T11:33:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 2.- Escuchar los cambios de sección
// 3.- Generar la transacción

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T11:33:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
// this.preventDefault();
// alert('ExecJS006');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 2.- Escuchar los cambios de sección
// 3.- Generar la transacción

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T11:34:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandArgument /><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS005');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script></update></c><c y="NodeSet" t="2022-03-24T11:41:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><CommandArgument>ExecJS004</CommandArgument><Script>fnDebug('START ExecJS004');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    //{ name: 'Folio_Escaneo_Id', value: 1}
  ]
});

fnDebug('END ExecJS004');</Script><Name /></update></c><c y="NodeSet" t="2022-03-24T11:41:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandArgument>ExecJS005</CommandArgument><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS005');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script><Name /></update></c><c y="NodeSet" t="2022-03-24T11:41:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><CommandArgument>ExecJS006</CommandArgument><Script>fnDebug('START ExecJS006');
// this.preventDefault();
// alert('ExecJS006');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 2.- Escuchar los cambios de sección
// 3.- Generar la transacción

fnDebug('END ExecJS006');</Script><Name /></update></c><c y="NodeSet" t="2022-03-24T11:43:49"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a102" /><update><HeaderText>"Nuevo Escaneo"</HeaderText><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></update></c><c y="NodeSet" t="2022-03-24T11:52:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 2.- Escuchar los cambios de sección
// 3.- Generar la transacción

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T11:52:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 2.- Escuchar los cambios de sección
// 3.- Generar la transacción

fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T11:53:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS005');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script></update></c><c y="NodeSet" t="2022-03-24T11:56:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandArgument>ExecJS004</CommandArgument><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS005');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END ExecJS005');</Script></update></c><c y="NodeSet" t="2022-03-24T12:26:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        //seccionCapturada = 2;
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            }
                        });

                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-24T12:26:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    //{ name: 'Folio_Escaneo_Id', value: 1}
  ]
});

fnDebug('END ExecJS004 Execute');</Script></update></c><c y="NodeSet" t="2022-03-24T12:53:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 3.- Generar la transacción
// 
var Nueva_Transaccion = eaton.createGuid();

$app.execute({
  controller: 'Escaneo_Validador_Embarque1'
  ,command: 'Insert'
  ,values: [            
      { name: 'Escaneo_Validador_Embarque_Id', value: null }
      ,{ name: 'Seccion_Capturada', newValue: 1 }
      ,{ name: 'Material_Tarima', newValue: '' } 
      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
      ,{ name: 'Transaccion_Escaneo', newValue: Nueva_Transaccion }
  ]
  ,done: function (result) {
      fnDebug(result);
      // $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
      $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
          ,{ name: 'Transaccion_Escaneo', value: Nueva_Transaccion }
          ,{ name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
        ]
      });
  }
});



fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-24T13:22:49"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T13:22:57"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T13:23:09"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T13:23:52"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><copy><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /></copy></c><c y="NodeSet" t="2022-03-24T13:24:22"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a103" /><update><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></update></c><c y="NodeSet" t="2022-03-24T13:25:46"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a14" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a103" /></move></c><c y="NodeSet" t="2022-03-24T13:27:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    { name: 'Transaccion_Escaneo', value: eaton.createGuid()}
  ]
});

fnDebug('END ExecJS004 Execute');</Script></update></c><c y="NodeSet" t="2022-03-24T13:27:33"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T13:51:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;



if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
                console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                        { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-24T14:17:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];



if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
                console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                        { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-24T14:17:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-24T14:18:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Seccion_Capturada
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-24T14:22:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T14:23:26"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Resultado_Validacion" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T17:25:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];



if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
                console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                        { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-24T17:25:52"><controller name="Escaneo_Validador_Embarque1" /><field name="Transaccion_Escaneo" /><update><AllowNulls>true</AllowNulls></update></c><c y="NodeSet" t="2022-03-24T17:27:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>this.preventDefault();
console.log('Prueba BR');
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];

// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];


if(_Seccion_Capturada === 1)
{
    // Sección del paso uno Datos de sección
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
    _Material_Tarima = [Material_Tarima];
  //Validar formato de datos de sección.
  if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                console.log ("Es numérico");  
            } 
            else 
            {
                //console.log  ("No es numérico");
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
      //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            console.log ("Material valido ");  
        } 
        else 
        {
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
            $app.input.focus({ fieldName: 'Material_Tarima' });
           // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
    if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  	{
      _Validar = 0;
	}//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
  
}//if(_Seccion_Capturada === 1)

if(_Seccion_Capturada === 2){
    // Sección del paso dos
    _Delivery = [Delivery_Delivery];
    // Sección del paso uno pero en la sección dos
    _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
    _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
    _Material_Tarima = [Material_Tarima_Dos];
    if ( _Delivery  !== undefined)
    { //console.log ("Variable sin definir");
            if(  _Delivery.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
              //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
    } //if ( _Delivery  !== undefined)
    if (_Folio_Etiqueta_Embarque !== undefined)
    { //console.log ("Variable sin definir");
            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
    } //if (_Folio_Etiqueta_Embarque !== undefined)
    
  if(_SOrden_SItem_Tarima !== undefined)
    {
        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        {
            _Validar = 1;
        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
    
    else {
        _Validar = 0;
        $app.alert ( 'Estructura de SO/Lin incorrecta.');
        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
        }
    }// if(_SOrden_SItem_Tarima.match !== undefined)
  
    if(_Material_Tarima !== undefined)
    {
        if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            _Validar = 1;
        } 
        else 
        {
            _Validar = 0;
            $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
           // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
        }
    }//if(_Material_Tarima.match !== undefined)
    // El resto de campos queda null
     if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
  	{console.log("null");
      _Validar = 0;
	}// if(_Folio_Etiqueta_Embarque == null)
  	
}//if(_Seccion_Capturada === 2){


if(_Seccion_Capturada === 3){
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if(_SOrden_SItem_PackingLIst !== undefined)
        {
            if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
      
        if (_Delivery_Packing_List  !== undefined)
        { console.log ("DElivery 1");
                if(  _Delivery_Packing_List.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                  //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)

        if ( _Delivery  !== undefined)
            { console.log ("DElivery 2");
                    if(  _Delivery.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                      console.log("no numerico");
                        $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                        $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                    if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                        $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                        //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                    }
            } //if (_Folio_Etiqueta_Embarque !== undefined)
            
        if(_SOrden_SItem_Tarima !== undefined)
            {
                if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if(_Material_Tarima !== undefined)
            {
                if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
   
            if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                {console.log("null pack");
                _Validar = 0;
                }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
if(_Validar==1)
{
validaretiquetasSinObligatoriedad(
    _Folio_Etiqueta_Embarque
    ,_Material_Tarima
    ,_SOrden_SItem_Tarima
    ,_Delivery
    ,_SOrden_SItem_PackingLIst
    ,_Delivery_Packing_List
    //,[Delivery_Dos]
    ,_Cantidad
    ,_Validar
    ,_Seccion_Capturada
  	,_Folio_Escaneo_Id
    ,_Transaccion_Escaneo
).done(function(data) {
   
    // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
   
    if (data.rowsAffected == 1){     
        console.log(data);     
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

    }
    else{
        console.log("ELSE");
        
   }  

 });
}//if(_Validar=1)</Script></update></c><c y="NodeSet" t="2022-03-24T17:28:45"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
                console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                         { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                      	,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                		,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-24T17:28:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
var _Seccion_Capturada = [Seccion_Capturada];



// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
                console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);
                $app.input.execute({
                    values: [
                         { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                      	,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                		,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-24T17:30:36"><controller name="Escaneo_Validador_Embarque1" /><field name="Transaccion_Escaneo" /><update><Default /></update></c><c y="NodeSet" t="2022-03-24T17:32:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');
var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
    mutationList.forEach((mutation) =&gt; {
        // console.log(mutation.type);
        // console.log(mutation.attributeName);
        //console.log(mutation.target);
        if(mutation.attributeName == 'class'){
            var nodo = mutation.target;
            var id_categoria = nodo.getAttribute('data-category');
            var clase = nodo.getAttribute('class');
            if(!clase.includes('app-container-collapsed')){
                // significa que se descolapsó (se abrió)
                var seccionCapturada;
                var Num_Category = id_categoria.substring(1);
                var cat
                switch(Num_Category) {
                    case '2':
                        //seccionCapturada = 1;
                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 1 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                                  $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
                    	*/

                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
                        $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
                        break;
                    case '3':
                        //seccionCapturada = 2;
                        /*
                    	$app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 2 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
						*/
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c5"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
                        $app.touch.contextDataView()._focus('Delivery_Delivery');
                        break;
                    case '5':
                        //seccionCapturada = 3;

                        /*
                        $app.execute({
                            controller: 'Escaneo_Validador_Embarque1'
                            ,command: 'Insert'
                            ,values: [            
                                { name: 'Escaneo_Validador_Embarque_Id', value: null }
                                ,{ name: 'Seccion_Capturada', newValue: 3 }
                                ,{ name: 'Material_Tarima', newValue: '' } 
                                ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                                ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                              
                            ]
                            ,done: function (result) {
                                fnDebug(result);
                                //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                                $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                            $app.input.execute({
                                  values: [
                                   { name: 'Resultado_Validacion', value: null }

                                  ]
                                });
                            }
                        });
						*/
                    
                        cat = document.querySelector('div[data-category="c2"]');
                        cat.className = "app-container-collapsed";
                        cat = document.querySelector('div[data-category="c3"]');
                        cat.className = "app-container-collapsed";

                        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                        $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
                        break;
                    default:
                        // seccionCapturada = null;
                        break;
                }
                // if(seccionCapturada){
                //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
                //     $app.touch.contextDataView()._focus('Seccion_Capturada');
                // }
            }
        }
    })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-24T17:32:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T17:50:16"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T17:50:23"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-24T17:50:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    { name: 'Transaccion_Escaneo', value: null}
  ]
});

fnDebug('END ExecJS004 Execute');</Script></update></c><c y="NodeSet" t="2022-03-24T17:57:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();
// alert('ExecJS006');
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', eaton.createGuid());
//
// 1.- LImpiar todos los campos
// 3.- Generar la transacción
// 
// var Nueva_Transaccion = eaton.createGuid();

/*
$app.execute({
  controller: 'Escaneo_Validador_Embarque1'
  ,command: 'Insert'
  ,values: [            
      { name: 'Escaneo_Validador_Embarque_Id', value: null }
      ,{ name: 'Seccion_Capturada', newValue: 1 }
      ,{ name: 'Material_Tarima', newValue: '' } 
      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
      ,{ name: 'Transaccion_Escaneo', newValue: Nueva_Transaccion }
  ]
  ,done: function (result) {
      fnDebug(result);
      // $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
      $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
          ,{ name: 'Transaccion_Escaneo', value: Nueva_Transaccion }
          ,{ name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
        ]
      });
  }
});

*/



$app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
          ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });


fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-03-28T10:06:50"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T11:42:34"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});



// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T11:45:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>
fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

/*
$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
*/


// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T11:46:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
     // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T11:47:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');
$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
     // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T12:00:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    { name: 'Transaccion_Escaneo', value: null }
  ],
  values: [
      // Seccion 1
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T12:00:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

/*
$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
*/


// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T12:03:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  defaultValues: [
    { name: 'Transaccion_Escaneo', value: null }
  ],
  values: [
      // Seccion 1
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', newValue: null }
    ,{ name: 'SOrde_SItem_Tarima', newValue: null } 
    ,{ name: 'Material_Tarima', newValue: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', newValue: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', newValue: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', newValue: null } 
    ,{ name: 'Material_Tarima_Dos', newValue: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', newValue: null } 
    ,{ name: 'Delivery_Packing_List', newValue: null } 
    ,{ name: 'Delivery_SeccionTres', newValue: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', newValue: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', newValue: null } 
    ,{ name: 'Material_Tarima_Tres', newValue: null } 
    ,{ name: 'Cantidad_Material', newValue: null }
    // resultados
    ,{ name: 'Resultado_Validacion', newValue: null }
    ,{ name: 'Transaccion_Escaneo', newValue: null }
    ,{ name: 'Folio_Escaneo_Id', newValue: null }
  ]
});
  

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T12:07:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});



// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T12:17:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null }
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null }
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T12:19:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
  

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T12:43:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});

/*
$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null }
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null }
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
*/

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T12:53:27"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});


$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null }
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null }
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T13:00:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});


/*
$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null }
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null }
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T13:01:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('Se iniciarón los observadores del formulario: STAR ExecJS004 After');

// var _Transaccion_Escaneo = $app.touch.contextDataView().fieldValue('Transaccion_Escaneo','');
const observer = new MutationObserver((mutationList) =&gt; {
  mutationList.forEach((mutation) =&gt; {
    // console.log(mutation.type);
    // console.log(mutation.attributeName);
    //console.log(mutation.target);
    if(mutation.attributeName == 'class'){
      var nodo = mutation.target;
      var id_categoria = nodo.getAttribute('data-category');
      var clase = nodo.getAttribute('class');
      if(!clase.includes('app-container-collapsed')){
        // significa que se descolapsó (se abrió)
        var seccionCapturada;
        var Num_Category = id_categoria.substring(1);
        var cat
        switch(Num_Category) {
          case '2':
            //seccionCapturada = 1;
            $app.input.execute({
              values: [
                { name: 'Resultado_Validacion', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }

              ]
            });
            /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 1 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                        $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */

            cat = document.querySelector('div[data-category="c3"]');
            cat.className = "app-container-collapsed";
            cat = document.querySelector('div[data-category="c5"]');
            cat.className = "app-container-collapsed";

            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
            $app.touch.contextDataView()._focus('Etiqueta_Embarque_Detalle_Id');
            break;
          case '3':
              //seccionCapturada = 2;
                $app.input.execute({
                  values: [
                     { name: 'Resultado_Validacion', value: null }
                    ,{ name: 'Folio_Escaneo_Id', value: null }
                  ]
                });
              /*
            $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 2 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }
                          , { name: 'Escaneo_Validador_Embarque_Id', value: null }

                        ]
                      });
                  }
              });
  */
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c5"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
              $app.touch.contextDataView()._focus('Delivery_Delivery');
              break;
          case '5':
              //seccionCapturada = 3;
              $app.input.execute({
                values: [
                   {name: 'Resultado_Validacion', value: null }
                  ,{name: 'Folio_Escaneo_Id', value: null }

                ]
              });
              /*
              $app.execute({
                  controller: 'Escaneo_Validador_Embarque1'
                  ,command: 'Insert'
                  ,values: [            
                      { name: 'Escaneo_Validador_Embarque_Id', value: null }
                      ,{ name: 'Seccion_Capturada', newValue: 3 }
                      ,{ name: 'Material_Tarima', newValue: '' } 
                      ,{ name: 'SOrde_SItem_Tarima', newValue: '' }
                      ,{ name: 'Transaccion_Escaneo', newValue: _Transaccion_Escaneo }
                    
                  ]
                  ,done: function (result) {
                      fnDebug(result);
                      //console.log(result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id)
                      $app.touch.contextDataView().updateFieldValue('Folio_Escaneo_Id', result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id);
                  $app.input.execute({
                        values: [
                          { name: 'Resultado_Validacion', value: null }

                        ]
                      });
                  }
              });
            */
          
              cat = document.querySelector('div[data-category="c2"]');
              cat.className = "app-container-collapsed";
              cat = document.querySelector('div[data-category="c3"]');
              cat.className = "app-container-collapsed";

              $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
              $app.touch.contextDataView()._focus('SOrde_SItem_Packing_List');
              break;
          default:
            // seccionCapturada = null;
            break;
        }
        // if(seccionCapturada){
        //     $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', seccionCapturada);
        //     $app.touch.contextDataView()._focus('Seccion_Capturada');
        // }
      }
    }
  })

});
const categorias = document.querySelectorAll('div[data-category]');
const observerOptions = {
    attributes: true,
    childList: false,
    subtree: false
}
categorias.forEach((categoria) =&gt; {
    observer.observe(categoria, observerOptions);
});


/*
$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null }
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null }
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
*/

fnDebug('END  ExecJS004 After');</Script></update></c><c y="NodeSet" t="2022-03-28T13:34:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ],
  done: function (result) {
        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  }
});
  

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T13:37:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ],
  done: function () {
        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  }
});
  

fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T13:43:12"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
	
}, 500);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T14:06:52"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
	
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-28T14:07:25"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionUno" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:10:48"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionDos" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:10:57"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:05"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Material_Tarima_Dos" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:14"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Packing_List" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:24"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Delivery_SeccionTres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:31"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionTres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="SOrde_SItem_Tarima_Tres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T14:11:48"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Material_Tarima_Tres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:10:21"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:10:36"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:10:53"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:11:13"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:11:35"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:11:49"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:12:05"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:12:31"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:12:43"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Creado_Por_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-28T17:13:40"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Creado_Por_Id =  @BusinessRules_UserId</FilterExpression></update></c><c y="NodeSet" t="2022-03-28T17:23:34"><controller name="Mensaje_Sistema" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:23:47"><controller name="Mensaje_Sistema" /><actionGroup id="ag1" /><action id="a3" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:24:02"><controller name="Mensaje_Sistema" /><actionGroup id="ag1" /><action id="a8" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:24:10"><controller name="Mensaje_Sistema" /><actionGroup id="ag1" /><action id="a10" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:24:23"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:24:31"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a2" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:24:40"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a4" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:25:22"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a6" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:25:33"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a7" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:25:44"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a8" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:25:56"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a9" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:26:13"><controller name="Mensaje_Sistema" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:26:22"><controller name="Mensaje_Sistema" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:26:33"><controller name="Mensaje_Sistema" /><actionGroup id="ag4" /><action id="a1" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:26:39"><controller name="Mensaje_Sistema" /><actionGroup id="ag4" /><action id="a2" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:26:52"><controller name="Mensaje_Sistema" /><actionGroup id="ag6" /><action id="a1" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:27:00"><controller name="Mensaje_Sistema" /><actionGroup id="ag6" /><action id="a3" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:27:16"><controller name="Mensaje_Sistema" /><actionGroup id="ag8" /><action id="a4" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:27:24"><controller name="Mensaje_Sistema" /><actionGroup id="ag8" /><action id="a6" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:27:33"><controller name="Mensaje_Sistema" /><actionGroup id="ag9" /><action id="a1" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:27:40"><controller name="Mensaje_Sistema" /><actionGroup id="ag9" /><action id="a2" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T17:32:23"><controller name="Mensaje_Sistema" /><actionGroup id="ag6" /><action id="a3" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-28T17:36:57"><controller name="Mensaje_Sistema" /><actionGroup id="ag5" /><action id="a6" /><update><Roles>Super_Admin</Roles></update></c><c y="NodeSet" t="2022-03-28T18:31:47"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a7" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-28T18:32:15"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-28T18:40:10"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a10" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-28T18:40:26"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-28T18:40:59"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a14" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-29T09:15:52"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /></move></c><c y="NodeSet" t="2022-03-29T09:17:18"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques,UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-29T09:17:31"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques, UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-29T09:18:01"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques,UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-29T09:18:29"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><Roles>Administrador,AdministradorEmbarques, UsuarioEmpacador</Roles></update></c><c y="NodeSet" t="2022-03-29T09:19:40"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Etiqueta_Embarque_Detalle_Id" /><update><Tag>lookup-details-hidden</Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:19:56"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Delivery_Id" /><update><Tag>lookup-details-hidden</Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:20:03"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><Tag>lookup-details-hidden</Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:20:11"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><Tag>lookup-details-hidden</Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:20:18"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Estatus_Registro_Id" /><update><Tag>lookup-details-hidden</Tag><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:23:30"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-29T09:31:42"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><CommandArgument>ExecJS007</CommandArgument><Phase>Execute</Phase><Script>$app.touch.contextDataView().discard();
$app.touch.contextDataView().cancel();</Script></insert></c><c y="NodeSet" t="2022-03-29T09:32:26"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS007</CommandArgument><HeaderText>"Regresar"</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></insert></c><c y="NodeSet" t="2022-03-29T09:34:27"><controller name="Log_eaton_app" /><field name="Mensaje" /><update><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting></update></c><c y="NodeSet" t="2022-03-30T13:48:48"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
              /*  console.log(data);
                $app.input.execute({
                    values: [
                         { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                      	,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                		,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ]
                });
                //Set header
                alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
                //Contenido
                alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();*/
                   if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        {
           //console.log("limpiar");
           $app.input.execute({
        values: [
          // Seccion 1
           { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
          ,{ name: 'SOrde_SItem_Tarima', value: null } 
          ,{ name: 'Material_Tarima', value: null } 
          // Seccion 2
          ,{ name: 'Delivery_Delivery', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
          ,{ name: 'Material_Tarima_Dos', value: null } 
          // Seccion 3
          ,{ name: 'SOrde_SItem_Packing_List', value: null } 
          ,{ name: 'Delivery_Packing_List', value: null } 
          ,{ name: 'Delivery_SeccionTres', value: null } 
          ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
          ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
          ,{ name: 'Material_Tarima_Tres', value: null } 
          ,{ name: 'Cantidad_Material', value: null }
          // resultados
          ,{ name: 'Resultado_Validacion', value: null }
       //   ,{ name: 'Transaccion_Escaneo', value: null }
          ,{ name: 'Folio_Escaneo_Id', value: null }
        ]
      });

        }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
      else
        {
      
        $app.input.execute({
            values: [
                 { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
            ]
        });
          
        }
        //Set header
        alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
      //Contenido
        alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();
            }//if (data.rowsAffected==!)
            else {
                console.log("ELSE");

            }
        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}</Script></update></c><c y="NodeSet" t="2022-03-30T13:49:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
            //console.log("limpiar");
            $app.input.execute({
            values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            ,{ name: 'SOrde_SItem_Tarima', value: null } 
            ,{ name: 'Material_Tarima', value: null } 
            // Seccion 2
            ,{ name: 'Delivery_Delivery', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
            ,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
        //   ,{ name: 'Transaccion_Escaneo', value: null }
            ,{ name: 'Folio_Escaneo_Id', value: null }
            ]
        });

            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            //Set header
            alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
        //Contenido
            alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-03-30T14:01:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
	
$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T14:11:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
	
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T14:16:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  values: [
    // Seccion 1
     { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null } 
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});
	

$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T14:24:19"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Hidden>false</Hidden><Visibility>[Transaccion_Escaneo] != null &amp;&amp; [Transaccion_Escaneo] != ''</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T14:28:26"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T14:45:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
            ,{ name: 'Transaccion_Escaneo', value: null }
            ,{ name: 'Folio_Escaneo_Id', value: null }
  		]
      	,raiseCalculate: true	
	}
);
	

// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
// $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T14:46:06"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
            ,{ name: 'Transaccion_Escaneo', value: null }
            ,{ name: 'Folio_Escaneo_Id', value: null }
  		]
      	,raiseCalculate: true	
	}
);
	

// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T15:02:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: true	
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T15:13:15"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Back</CommandName><HeaderText>"Hola"</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></insert></c><c y="NodeSet" t="2022-03-30T15:15:21"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Back</CommandName><Phase>Before</Phase><Script>console.log('Hi. I am here');</Script></insert></c><c y="NodeSet" t="2022-03-30T15:17:54"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Cancel</CommandName><Phase>Before</Phase><Script>console.log('Cancel BR started');</Script></insert></c><c y="NodeSet" t="2022-03-30T15:31:48"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Confirm</CommandName><Phase>Before</Phase><Script>console.log('Confirm BR is runing');</Script></insert></c><c y="NodeSet" t="2022-03-30T16:39:59"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: true	
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
  cat = document.querySelector('.app-btn.app-btn4.app-btn-close');
  cat.addEventListener('click', function(){
    console.log("validando confirm");
    mostrarAlert = false;

    var t = $app.touch.contextDataView();
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
    // Seccion 2
    if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    // Seccion 3
    if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};

    // if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { console.log('Cerrar sin preguntar')}
    if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { $app.touch.contextDataView().discard();}
   
});
  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T16:44:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: true	
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  
  cat = document.querySelector('.app-btn.app-btn4.app-btn-close');
  cat.addEventListener('click', function(){
    console.log("validando confirm");
    mostrarAlert = false;

    var t = $app.touch.contextDataView();
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
    // Seccion 2
    if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    // Seccion 3
    if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};

    // if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { console.log('Cerrar sin preguntar')}
    if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { $app.touch.contextDataView().discard();}
   
});
  
}, 350);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T17:02:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>mostrarAlert = false;
var t = $app.touch.contextDataView();
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
// Seccion 2
if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
// Seccion 3
if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};


if( mostrarAlert ) {
  // console.log('se debe mostrar el alert')
  $app.touch.contextDataView().discard();
	//$app.touch.contextDataView().cancel();

} else { 
  console.log('Cerrar sin preguntar'); 
  	$app.touch.contextDataView().discard();
	$app.touch.contextDataView().cancel();
}


//$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T17:04:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>mostrarAlert = false;
var t = $app.touch.contextDataView();
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
// Seccion 2
if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
// Seccion 3
if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};


if( mostrarAlert ) {
  console.log('se debe mostrar el alert')
  //$app.touch.contextDataView().discard();
	$app.touch.contextDataView().cancel();

} else { 
   console.log('Cerrar sin preguntar'); 
  	$app.touch.contextDataView().discard();
	$app.touch.contextDataView().cancel();
}


//$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T17:06:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>mostrarAlert = false;
var t = $app.touch.contextDataView();
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
// Seccion 2
if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
// Seccion 3
if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};


if( mostrarAlert ) {
  console.log('se debe mostrar el alert')
  $app.touch.contextDataView().discard();
  //$app.touch.contextDataView().cancel();

} else { 
   console.log('Cerrar sin preguntar'); 
  	$app.touch.contextDataView().discard();
	$app.touch.contextDataView().cancel();
}


//$app.touch.contextDataView().cancel();</Script></update></c><c y="NodeSet" t="2022-03-30T17:07:52"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
  // ,
  // done: function () {
  //        console.log('RESULTADO', 'SE MOSTRÓ LA VENTANA');
  // }
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: true	
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
  /*
  cat = document.querySelector('.app-btn.app-btn4.app-btn-close');
  cat.addEventListener('click', function(){
    console.log("validando confirm");
    mostrarAlert = false;

    var t = $app.touch.contextDataView();
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionUno', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima', null) !== null ) { mostrarAlert = true};
    // Seccion 2
    if (t.fieldValue('Delivery_Delivery', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionDos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Dos', null) !== null ) { mostrarAlert = true};
    // Seccion 3
    if (t.fieldValue('SOrde_SItem_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_Packing_List', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Delivery_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Folio_Etiqueta_Embarque_SeccionTres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('SOrde_SItem_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Material_Tarima_Tres', null) !== null ) { mostrarAlert = true};
    if (t.fieldValue('Cantidad_Material', null) !== null ) { mostrarAlert = true};

    // if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { console.log('Cerrar sin preguntar')}
    if( mostrarAlert ) {console.log('se debe mostrar el alert')} else { $app.touch.contextDataView().discard();}
   
});
*/
  
}, 350);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-30T17:10:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>$app.touch.contextDataView().discard();
//$app.touch.contextDataView().cancel();
</Script></update></c><c y="NodeSet" t="2022-03-30T17:11:33"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>$app.touch.contextDataView().discard();
//$app.touch.contextDataView().cancel();
</Script></update></c><c y="NodeSet" t="2022-03-30T17:28:06"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a106" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-30T17:47:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>console.log('BACK');</Script></update></c><c y="NodeSet" t="2022-03-30T17:47:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r112" /><update><Script>console.log('CANCEL');</Script></update></c><c y="NodeSet" t="2022-03-30T17:48:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r113" /><update><Script>console.log('CONFIRM EXECUTE');</Script><Phase>Execute</Phase></update></c><c y="NodeSet" t="2022-03-30T18:15:00"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><Roles /></update></c><c y="NodeSet" t="2022-03-30T18:20:58"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag6" /><action id="a1" /><update><HeaderText>"Guardar"</HeaderText></update></c><c y="NodeSet" t="2022-03-30T18:21:11"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag6" /><action id="a1" /><update><HeaderText>"Guardar ag6a1"</HeaderText></update></c><c y="NodeSet" t="2022-03-30T18:23:27"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag6" /><action id="a1" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-30T18:47:54"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Evidencia_Escaneo_Validador_Embarque1" /><delete /></c><c y="NodeSet" t="2022-03-30T19:02:16"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><CommandArgument>Guardar</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T19:02:36"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a13" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /></move></c><c y="NodeSet" t="2022-03-30T19:04:35"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-03-30T22:54:13"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Emabarque" /><update><Label>SOrder/SItem (Embarque)</Label></update></c><c y="NodeSet" t="2022-03-30T22:57:02"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Dos" /><update><Label>SOrder SItem Tarima</Label></update></c><c y="NodeSet" t="2022-03-30T22:57:13"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Packing_List" /><update><Label>SOrder SItem Packing List</Label></update></c><c y="NodeSet" t="2022-03-30T22:57:35"><controller name="Escaneo_Validador_Embarque1" /><field name="SOrde_SItem_Tarima_Tres" /><update><Label>SOrder SItem Tarima </Label></update></c><c y="NodeSet" t="2022-03-30T23:00:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2022-03-30T23:00:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r112" /><delete /></c><c y="NodeSet" t="2022-03-30T23:00:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r113" /><delete /></c><c y="NodeSet" t="2022-03-30T23:01:20"><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id" /><copy><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id" /></copy></c><c y="NodeSet" t="2022-03-30T23:01:51"><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id_1" /><update><IsPrimaryKey>false</IsPrimaryKey><Label>Folio_Escaneo</Label></update></c><c y="NodeSet" t="2022-03-30T23:02:06"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id_1" /></move></c><c y="NodeSet" t="2022-03-30T23:02:11"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id_1" /></move></c><c y="NodeSet" t="2022-03-30T23:02:17"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id_1" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /></move></c><c y="NodeSet" t="2022-03-30T23:02:50"><controller name="Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id_1" /><rename>Folio_Escaneo</rename></c><c y="NodeSet" t="2022-03-30T23:06:38"><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Escaneo" /><update><Label>Folio Escaneo</Label></update></c><c y="NodeSet" t="2022-03-30T23:13:10"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a106" /><delete /></c><c y="NodeSet" t="2022-03-30T23:14:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><CommandArgument>"Guardar"</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T23:16:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><CommandArgument>save</CommandArgument></update></c><c y="NodeSet" t="2022-03-30T23:23:48"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><CommandArgument /><HeaderText>Guardar</HeaderText></update></c><c y="NodeSet" t="2022-03-30T23:35:46"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="MensajeValidacionAplicada" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Transaccion_Escaneo" /></move></c><c y="NodeSet" t="2022-03-30T23:35:57"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-30T23:41:25"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility /></update></c><c y="NodeSet" t="2022-03-30T23:42:13"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><insert type="category"><HeaderText>Evidencias</HeaderText></insert></c><c y="NodeSet" t="2022-03-30T23:42:25"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /></move></c><c y="NodeSet" t="2022-03-30T23:58:30"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><update><Label>Evidencias y comentarios</Label></update></c><c y="NodeSet" t="2022-03-31T00:04:39"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

  
}, 350);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T00:07:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filters: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

  
}, 350);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T00:15:43"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

  
}, 350);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T00:19:22"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	$appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T01:13:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	//
	setTimeout(function(){ $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();}, 150);
	

  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T01:15:36"><controller name="Escaneo_Validador_Embarque1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /><update><Label>Evidencias y comentarios</Label></update></c><c y="NodeSet" t="2022-03-31T01:22:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});


setTimeout(function(){ 
	$app.input.execute({
  		values: [
    		// Seccion 1
     		{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	//
	//setTimeout(function(){ $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();}, 150);
   $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();
	

  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T08:34:22"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><update><HeaderText /></update></c><c y="NodeSet" t="2022-03-31T08:36:31"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Floating>true</Floating></update></c><c y="NodeSet" t="2022-03-31T08:41:02"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /></move></c><c y="NodeSet" t="2022-03-31T08:41:14"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-03-31T08:45:29"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><update><Tags>modal-when-lg</Tags></update></c><c y="NodeSet" t="2022-03-31T09:30:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
            //console.log("limpiar");
            $app.input.execute({
            values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            ,{ name: 'SOrde_SItem_Tarima', value: null } 
            ,{ name: 'Material_Tarima', value: null } 
            // Seccion 2
            ,{ name: 'Delivery_Delivery', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
            ,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
        //   ,{ name: 'Transaccion_Escaneo', value: null }
            ,{ name: 'Folio_Escaneo_Id', value: null }
            ]
        });

            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            //Set header
            alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
        //Contenido
            alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-03-31T09:31:01"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><update><Tags /></update></c><c y="NodeSet" t="2022-03-31T10:23:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});



setTimeout(function(){ 
  	// Cerrar todas las secciones
  	grupo = document.querySelector('div[data-category="c2"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c3"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c5"]');
    grupo.className = "app-container-collapsed";
  
	$app.input.execute({
  		values: [
          	// seccion capturada
          	{ name: 'Seccion_Capturada', value: undefined }
    		// Seccion 1
     		,{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	});
	

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	//setTimeout(function(){ $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();}, 150);
   $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

  
}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T10:30:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});



setTimeout(function(){ 
	$app.input.execute({
  		values: [
          	// seccion capturada
          	{ name: 'Seccion_Capturada', value: undefined }
    		// Seccion 1
     		,{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	
    });
	
  	// Cerrar todas las secciones
  	grupo = document.querySelector('div[data-category="c2"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c3"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c5"]');
    grupo.className = "app-container-collapsed";

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	//$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	//setTimeout(function(){ $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();}, 150);
   $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T10:30:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Execute');

$app.touch.show({
  controller: 'Escaneo_Validador_Embarque1',
  startCommand: 'Edit',
  startArgument: 'FormNuevo',
  // defaultValues: [
  //   { name: 'Transaccion_Escaneo', value: null }
  // ],
  filter: [
    { name: 'Escaneo_Validador_Embarque_Id', value: 0 }
  ],
  defaultValues: [
      // Seccion 1	
      { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    ,{ name: 'SOrde_SItem_Tarima', value: null }
    ,{ name: 'Material_Tarima', value: null } 
    // Seccion 2
    ,{ name: 'Delivery_Delivery', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    ,{ name: 'Material_Tarima_Dos', value: null } 
    // Seccion 3
    ,{ name: 'SOrde_SItem_Packing_List', value: null } 
    ,{ name: 'Delivery_Packing_List', value: null } 
    ,{ name: 'Delivery_SeccionTres', value: null } 
    ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
    ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
    ,{ name: 'Material_Tarima_Tres', value: null } 
    ,{ name: 'Cantidad_Material', value: null }
    // resultados
    ,{ name: 'Resultado_Validacion', value: null }
    ,{ name: 'Transaccion_Escaneo', value: null }
    ,{ name: 'Folio_Escaneo_Id', value: null }
  ]
});



setTimeout(function(){ 
	$app.input.execute({
  		values: [
          	// seccion capturada
          	{ name: 'Seccion_Capturada', value: undefined }
    		// Seccion 1
     		,{ name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
    		,{ name: 'SOrde_SItem_Tarima', value: null } 
    		,{ name: 'Material_Tarima', value: null } 
    		// Seccion 2
    		,{ name: 'Delivery_Delivery', value: null } 
    		,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
    		,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
    		,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
			,{ name: 'Transaccion_Escaneo', value: '' }
			,{ name: 'Folio_Escaneo_Id', value: null }
			//,{ name: 'Evidencia_Escaneo_Validador_Embarque1', value: null }
  		]
      	,raiseCalculate: false
	
    });
	
  	// Cerrar todas las secciones
  	grupo = document.querySelector('div[data-category="c2"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c3"]');
    grupo.className = "app-container-collapsed";
    grupo = document.querySelector('div[data-category="c5"]');
    grupo.className = "app-container-collapsed";

	$app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '');
	// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', '00000000-0000-0000-0000-000000000000');
	// setTimeout(function(){ $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();}, 150);
    $appfactory.find('Evidencia_Escaneo_Validador_Embarque1').sync();

}, 300);



fnDebug('END ExecJS004 Execute');

</Script></update></c><c y="NodeSet" t="2022-03-31T14:47:39"><controller name="Delivery" /><view id="Delivery_LookUp_List" /><dataField fieldName="Es_Negativo_En_Sap" /><delete /></c><c y="NodeSet" t="2022-03-31T14:47:45"><controller name="Delivery" /><view id="Delivery_LookUp_List" /><dataField fieldName="Valor_Real_Reporte_Sap" /><delete /></c><c y="NodeSet" t="2022-03-31T14:47:48"><controller name="Delivery" /><view id="Delivery_LookUp_List" /><dataField fieldName="Planta_Id" /><delete /></c><c y="NodeSet" t="2022-03-31T14:48:21"><controller name="Delivery" /><view id="createForm1" /><dataField fieldName="Valor_Real_Reporte_Sap" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-31T14:48:34"><controller name="Delivery" /><view id="createForm1" /><dataField fieldName="Es_Negativo_En_Sap" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-31T14:51:46"><controller name="Delivery" /><view id="grid1" /><dataField fieldName="Planta_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-31T15:06:59"><controller name="Almacen" /><field name="Es_Default" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2022-03-31T15:08:26"><controller name="Almacen" /><field name="Estatus_Registro_Id" /><update><CodeDefault>1</CodeDefault><ItemsDataView>Estatus_Registro_LookUp_List</ItemsDataView><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-31T15:09:34"><controller name="Almacen" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-03-31T15:09:52"><controller name="Almacen" /><view id="grid1" /><dataField fieldName="Estatus_Registro_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-31T15:10:31"><controller name="Almacen" /><view id="grid1" /><copy><controller name="Almacen" /><view id="grid1" /></copy></c><c y="NodeSet" t="2022-03-31T15:10:47"><controller name="Almacen" /><view id="v100" /><rename>Almacen_LookUp_List</rename></c><c y="NodeSet" t="2022-03-31T15:10:59"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-03-31T15:11:07"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><update><FilterExpression>Estatus_Registro_Id IN (0,1) </FilterExpression></update></c><c y="NodeSet" t="2022-03-31T15:11:19"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><dataField fieldName="Es_Default" /><delete /></c><c y="NodeSet" t="2022-03-31T15:11:19"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:11:19"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:11:20"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:11:23"><controller name="Almacen" /><view id="Almacen_LookUp_List" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:11:50"><controller name="Almacen" /><view id="grid1" /><update><ShowInSelector>false</ShowInSelector></update></c><c y="NodeSet" t="2022-03-31T15:13:10"><controller name="Almacen" /><view id="createForm1" /><update><Label>Nuevo Almacén</Label><HeaderText>Nuevo Almacén</HeaderText></update></c><c y="NodeSet" t="2022-03-31T15:13:17"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><update><HeaderText>Nuevo Almacén</HeaderText></update></c><c y="NodeSet" t="2022-03-31T15:13:25"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Estatus_Registro_Id" /><delete /></c><c y="NodeSet" t="2022-03-31T15:13:25"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:13:25"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:13:25"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:13:28"><controller name="Almacen" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:14:19"><controller name="Almacen" /><view id="editForm1" /><update><Label>Almacén</Label><HeaderText>Almacén</HeaderText></update></c><c y="NodeSet" t="2022-03-31T15:14:26"><controller name="Almacen" /><view id="editForm1" /><category id="c1" /><update><HeaderText>Almacén</HeaderText></update></c><c y="NodeSet" t="2022-03-31T15:14:42"><controller name="Almacen" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Ultima_Actualizacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:14:43"><controller name="Almacen" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Actualizado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:14:43"><controller name="Almacen" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Fecha_Creacion" /><delete /></c><c y="NodeSet" t="2022-03-31T15:14:46"><controller name="Almacen" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Creado_Por" /><delete /></c><c y="NodeSet" t="2022-03-31T15:30:42"><controller name="Almacen" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>Before</Phase><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Almacen 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Almacen)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Almacen)) -- Verificar si aplica campo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-31T15:31:21"><controller name="Almacen" /><insert type="rule"><Type>Sql</Type><CommandName>Insert</CommandName><Phase>After</Phase><Script>-- Insert/After
UPDATE  
   APP.Almacen 
SET 
   Creado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Creacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
   ,Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-31T15:31:43"><controller name="Almacen" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>Before</Phase><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Almacen 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Almacen)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Almacen)) -- Verificar si aplica campo
AND Almacen_Id &lt;&gt; @Almacen_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   RETURN 
END
--</Script></insert></c><c y="NodeSet" t="2022-03-31T15:31:52"><controller name="Almacen" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Almacen 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Almacen)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Almacen)) -- Verificar si aplica campo
AND Almacen_Id &lt;&gt; @Almacen_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-31T15:32:07"><controller name="Almacen" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Almacen 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Numero_Almacen)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Numero_Almacen)) -- Verificar si aplica campo
AND Almacen_Id &lt;&gt; @Almacen_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1702,1,233,@Numero_Almacen) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-31T15:32:28"><controller name="Almacen" /><insert type="rule"><Type>Sql</Type><CommandName>Update</CommandName><Phase>After</Phase><Script>--- Update/After
UPDATE  
   APP.Almacen 
SET 
   Actualizado_Por_Id = @BusinessRules_UserId 
   ,Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id
--</Script></insert></c><c y="NodeSet" t="2022-03-31T15:33:42"><controller name="Almacen" /><actionGroup id="ag1" /><action id="a3" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-31T15:34:07"><controller name="Almacen" /><actionGroup id="ag2" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-31T15:35:00"><controller name="Almacen" /><actionGroup id="ag4" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Almacen 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id</Data><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-31T15:35:30"><controller name="Almacen" /><actionGroup id="ag9" /><action id="a2" /><update><CommandName>SQL</CommandName><HeaderText>"Borrar"</HeaderText><Data>-- "Borrar"
UPDATE APP.Almacen 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id</Data><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-31T15:36:25"><controller name="Almacen" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Almacen 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id</Data><CssClass>material-icon-delete</CssClass></update></c><c y="NodeSet" t="2022-03-31T15:37:17"><controller name="Almacen" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Almacen 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id</Data><CssClass>material-icon-delete</CssClass></update></c><c y="NodeSet" t="2022-03-31T15:37:36"><controller name="Almacen" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Almacen 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Almacen_Id = @Almacen_Id</Data><CssClass>material-icon-delete</CssClass></update></c><c y="NodeSet" t="2022-03-31T15:38:08"><controller name="Delivery" /><view id="grid1" /><dataField fieldName="Almacen_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-03-31T15:39:51"><controller name="Delivery" /><field name="Planta_Id" /><update><ItemsDataView>Planta_LookUp_List</ItemsDataView><ItemsNewDataView /><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-31T15:40:23"><controller name="Delivery" /><field name="Almacen_Id" /><update><ItemsDataView>Almacen_LookUp_List</ItemsDataView><ItemsNewDataView /><SearchOnStart>false</SearchOnStart><ItemsPageSize>15</ItemsPageSize></update></c><c y="NodeSet" t="2022-03-31T15:42:46"><controller name="Delivery" /><field name="Es_Negativo_En_Sap" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2022-03-31T15:45:39"><controller name="Delivery" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Delivery 
WHERE 
   Delivery = @Delivery
   AND Sales_Order = @Sales_Order
   AND Sales_Item = @Sales_Item
   AND Producto_Id = @Producto_Id
   
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-31T15:46:39"><controller name="Delivery" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT TOP 1 @Already_Exists  = 1
FROM APP.Delivery 
WHERE Delivery = @Delivery -- Verificar si aplica campo
AND Sales_Order = @Sales_Order
AND Sales_Item = @Sales_Item
AND Producto_Id = @Producto_Id
AND Delivery_Id &lt;&gt; @Delivery_Id
IF @Already_Exists = 1
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1611,1,231,CONVERT(VARCHAR,@Delivery)) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-03-31T17:58:17"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>Sql</Type><CommandName>Edit</CommandName><Phase>Before</Phase><Script>SET @Transaccion_Escaneo = NEWID();</Script></insert></c><c y="NodeSet" t="2022-03-31T17:58:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><CommandArgument>FormNuevo</CommandArgument></update></c><c y="NodeSet" t="2022-03-31T18:19:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Phase>Execute</Phase></update></c><c y="NodeSet" t="2022-03-31T18:29:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Phase>Before</Phase></update></c><c y="NodeSet" t="2022-03-31T18:31:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Phase>Execute</Phase></update></c><c y="NodeSet" t="2022-03-31T18:59:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>[Transaccion_Escaneo] = null;
fnOpenModalNuevoValidador([Transaccion_Escaneo]);

</Script></update></c><c y="NodeSet" t="2022-03-31T19:10:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /></move></c><c y="NodeSet" t="2022-03-31T19:11:01"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /></move></c><c y="NodeSet" t="2022-03-31T19:11:05"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /></move></c><c y="NodeSet" t="2022-03-31T19:11:08"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /></move></c><c y="NodeSet" t="2022-03-31T19:14:38"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /></move></c><c y="NodeSet" t="2022-03-31T19:18:50"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>

[Transaccion_Escaneo] = null;

setTimeout(function(){
	fnOpenModalNuevoValidador([Transaccion_Escaneo]);
}, 400)


</Script></update></c><c y="NodeSet" t="2022-03-31T19:21:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>
[Transaccion_Escaneo] = null;
fnDebug("Transaccion_Escaneo = null")
setTimeout(function(){
	fnOpenModalNuevoValidador([Transaccion_Escaneo]);
}, 400);

fnDebug("timeout");


</Script></update></c><c y="NodeSet" t="2022-03-31T19:27:53"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenClientScript>$app.touch.dataView()._selectedKeyList.length == 0</WhenClientScript></update></c><c y="NodeSet" t="2022-03-31T19:28:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>[Transaccion_Escaneo] = null;
fnDebug("Transaccion_Escaneo = null")
//setTimeout(function(){
	fnOpenModalNuevoValidador([Transaccion_Escaneo]);
//}, 400);

fnDebug("timeout");


</Script></update></c><c y="NodeSet" t="2022-03-31T19:30:08"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><CausesValidation>false</CausesValidation></update></c><c y="NodeSet" t="2022-03-31T19:31:38"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenKeySelected>false</WhenKeySelected></update></c><c y="NodeSet" t="2022-03-31T19:32:04"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag4" /><action id="a1" /><update><WhenKeySelected>false</WhenKeySelected></update></c><c y="NodeSet" t="2022-03-31T19:32:30"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenKeySelected>false</WhenKeySelected></update></c><c y="NodeSet" t="2022-03-31T19:46:18"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenClientScript>$app.touch.dataView()._selectedKeyList == []</WhenClientScript></update></c><c y="NodeSet" t="2022-03-31T19:46:36"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenClientScript>$app.touch.dataView()._selectedKeyList == [] || $app.touch.dataView()._selectedKeyList == 0</WhenClientScript></update></c><c y="NodeSet" t="2022-03-31T19:49:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenClientScript>$app.touch.dataView()._selectedKeyList == [] || $app.touch.dataView()._selectedKeyList.length == 0</WhenClientScript></update></c><c y="NodeSet" t="2022-03-31T19:57:44"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><insert type="action"><CommandName>Select</CommandName><CommandArgument>FormNuevo</CommandArgument><HeaderText>"Abrir"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-03-31T20:03:26"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a100" /><update><CommandName>EditModal</CommandName></update></c><c y="NodeSet" t="2022-03-31T20:05:38"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a100" /><update><CommandName>Edit</CommandName></update></c><c y="NodeSet" t="2022-03-31T20:31:42"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-03-31T20:32:24"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-03-31T20:45:52"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility /></update></c><c y="NodeSet" t="2022-03-31T20:54:20"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-03-31T21:06:31"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>New</CommandName><Phase>Execute</Phase><Script>console.log([Master.Transaccion_Escaneo])</Script></insert></c><c y="NodeSet" t="2022-03-31T21:12:36"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r104" /><delete /></c><c y="NodeSet" t="2022-03-31T21:39:27"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><update><Visibility /></update></c><c y="NodeSet" t="2022-03-31T21:39:37"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c6" /><update><Visibility /></update></c><c y="NodeSet" t="2022-04-01T00:43:01"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
        fnDebug("============");
        fnDebug(data);
      
        
    
        if (data.rowsAffected == 1){
        
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
            //console.log("limpiar");
            $app.input.execute({
            values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            ,{ name: 'SOrde_SItem_Tarima', value: null } 
            ,{ name: 'Material_Tarima', value: null } 
            // Seccion 2
            ,{ name: 'Delivery_Delivery', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
            ,{ name: 'Material_Tarima_Dos', value: null } 
            // Seccion 3
            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
            ,{ name: 'Delivery_Packing_List', value: null } 
            ,{ name: 'Delivery_SeccionTres', value: null } 
            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
            ,{ name: 'Material_Tarima_Tres', value: null } 
            ,{ name: 'Cantidad_Material', value: null }
            // resultados
            ,{ name: 'Resultado_Validacion', value: null }
        //   ,{ name: 'Transaccion_Escaneo', value: null }
            ,{ name: 'Folio_Escaneo_Id', value: null }
            ]
        });

            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            //Set header
            alertify.confirm().setHeader('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;').show();
        //Contenido
            alertify.confirm().setContent(data.Escaneo_Validador_Embarque1.Resultado_Validacion).show();

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-01T01:03:39"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a300" /><update><WhenClientScript /></update></c><c y="NodeSet" t="2022-04-01T08:53:57"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('STAR ExecJS004 After');
agregarEventoValidadorEmbarques();
fnDebug('END  ExecJS004 After');

</Script></update></c><c y="NodeSet" t="2022-04-01T08:55:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r107" /><update><Script>fnDebug('START ExecJS004 Before');

[Transaccion_Escaneo] = null;
fnDebug("Transaccion_Escaneo = null")

fnOpenModalNuevoValidador([Transaccion_Escaneo]);

fnDebug('END ExecJS004 Before');

</Script></update></c><c y="NodeSet" t="2022-04-01T08:55:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><delete /></c><c y="NodeSet" t="2022-04-01T10:07:54"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Select</CommandName><CommandArgument>grid1</CommandArgument><Phase>After</Phase><Script>var r = $appfactory.find('Escaneo_Validador_Embarque1', 'Controller');
r.multiSelect('Multiple');
r.sync();</Script></insert></c><c y="NodeSet" t="2022-04-01T10:09:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>var r = $appfactory.find('Escaneo_Validador_Embarque1', 'Controller');
r.multiSelect('Multiple');
r.refresh();</Script></update></c><c y="NodeSet" t="2022-04-01T10:12:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>/*
var r = $appfactory.find('Escaneo_Validador_Embarque1', 'Controller');
r.multiSelect('Multiple');
r.refresh();
*/</Script></update></c><c y="NodeSet" t="2022-04-01T10:18:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>
var r = $appfactory.find('Escaneo_Validador_Embarque1', 'Controller');
if (r._multiSelect == false) {
	r.multiSelect('Multiple');
	r.refresh();
}

</Script></update></c><c y="NodeSet" t="2022-04-01T10:38:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r111" /><update><Script>var r = $appfactory.find('Escaneo_Validador_Embarque1', 'Controller');
if (r._multiSelect == false) {
  	fnDebug("Activando la multiselección...");
	r.multiSelect('Multiple');
	r.refresh();
}

</Script></update></c><c y="NodeSet" t="2022-04-01T11:12:06"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug('STAR ExecJS004 After');
fnResetSeccion_Capturada();
agregarEventoValidadorEmbarques();
fnDebug('END  ExecJS004 After');

</Script></update></c><c y="NodeSet" t="2022-04-01T16:49:15"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// fnDebug('STAR ExecJS004 After');
agregarEventoValidadorEmbarques();
fnResetSeccion_Capturada();
//fnDebug('END  ExecJS004 After');
</Script></update></c><c y="NodeSet" t="2022-04-01T16:54:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T16:55:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T16:55:34"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                  //  console.log("Es numérico");
                }
                else {
                    //console.log ("No es numérico");
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    // this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                }
                else {
                  _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) {
               // console.log("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)



            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                  //  console.log("no numerico");
                    $app.alert('El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    // this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido en Etiqueta embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    $app.alert('Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                    if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    $app.alert('El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)





        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T17:00:43"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if(_Material_Tarima.length &lt;=18 ){
                console.log ("Material valido ");  
            } 
            else 
            {
            _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    $app.alert ( 'El tipo de dato requerido es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            $app.alert ( 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if(_Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                $app.alert ( 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                $app.alert ( 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            $app.alert ( 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            $app.alert ( 'El tipo de dato requerido en Etiqueta embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    $app.alert ( 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    if(_Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        $app.alert ( 'El tipo de dato requerido para Material es alfanumérico y de 18 caracteres máximo.');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
        fnDebug("============");
        fnDebug(data);
    

        
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
//Calculate</Script></update></c><c y="NodeSet" t="2022-04-01T17:05:28"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><update><Tags>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tags></update></c><c y="NodeSet" t="2022-04-01T17:15:53"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists_Transaccion = 0 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Transaccion_Escaneo = @Transaccion_Escaneo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-04-01T17:16:21"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists_Transaccion = 0 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Transaccion_Escaneo = @Transaccion_Escaneo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-04-01T17:16:35"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Transaccion_Escaneo = @Transaccion_Escaneo
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-04-01T17:23:23"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>New</CommandName><CommandArgument>createForm1</CommandArgument><Phase>After</Phase><Script>console.log("Este es el folio del escaneo");
console.log([Master.Folio_Escaneo_Id]);</Script></insert></c><c y="NodeSet" t="2022-04-01T17:28:16"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>fnDebug("Este es el folio del escaneo");
fnDebug([Master.Folio_Escaneo_Id]);
[EscaneoValidadorEmbarqueId] = [Master.Folio_Escaneo_Id];</Script></update></c><c y="NodeSet" t="2022-04-01T17:59:06"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag3" /><action id="a100" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-04-01T18:15:56"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>fnDebug("Este es el folio del escaneo");
fnDebug([Master.Folio_Escaneo_Id]);

fnDebug("Este es el folio del Escaneo_Id PK");
fnDebug([Master.Escaneo_Validador_Embarque_Id]);

[EscaneoValidadorEmbarqueId] = [Master.Folio_Escaneo_Id];</Script></update></c><c y="NodeSet" t="2022-04-01T18:16:40"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>fnDebug("Este es el folio del escaneo");
fnDebug([Master.Folio_Escaneo_Id]);

fnDebug("Este es el folio del Escaneo_Id PK");
fnDebug([Master.Escaneo_Validador_Embarque_Id]);

if ([Master.Folio_Escaneo_Id] == null) {
	[EscaneoValidadorEmbarqueId] = [Master.Escaneo_Validador_Embarque_Id];
} else {
	[EscaneoValidadorEmbarqueId] = [Master.Folio_Escaneo_Id];
}
</Script></update></c><c y="NodeSet" t="2022-04-01T18:35:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
           //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                console.log ("Es numérico");  
                            } 
                            else 
                            {
                                //console.log  ("No es numérico");
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                            }
                    } //if (_Folio_Etiqueta_Embarque !== undefined)
                    
                if(_SOrden_SItem_Tarima !== undefined)
                    {
                        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if(_Material_Tarima !== undefined)
                    {
                        // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                        if (_Material_Tarima.length &lt;= 18) {
                            console.log("Material valido ");
                            _Validar = 1;
                        } 
                        else 
                        {
                        _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                            $app.input.focus({ fieldName: 'Material_Tarima' });
                        // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                        }
                    }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else 
        {
                        if ( _Delivery  !== undefined)
                    { //console.log ("Variable sin definir");
                            if(  _Delivery.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                            //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                            }
                    } //if ( _Delivery  !== undefined)
                    if (_Folio_Etiqueta_Embarque !== undefined)
                    { //console.log ("Variable sin definir");
                            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                            }
                    } //if (_Folio_Etiqueta_Embarque !== undefined)
                    
                if(_SOrden_SItem_Tarima !== undefined)
                    {
                        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if(_Material_Tarima !== undefined)
                    {
                        // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                        if (_Material_Tarima.length &lt;= 18) {
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                        // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                        }
                    }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else 
        {
                    if(_SOrden_SItem_PackingLIst !== undefined)
                    {
                        if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if (_Delivery_Packing_List  !== undefined)
                    { //console.log ("DElivery 1");
                            if(  _Delivery_Packing_List.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                            //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                            }
                    } //if ( _Delivery  !== undefined)

                    if ( _Delivery  !== undefined)
                        { console.log ("DElivery 2");
                                if(  _Delivery.match(soloNumeros)){
                                    _Validar = 1;
                                } 
                                else 
                                {
                                    _Validar = 0;
                                // console.log("no numerico");
                                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                                }
                        } //if ( _Delivery  !== undefined)
                        if (_Folio_Etiqueta_Embarque !== undefined)
                        { //console.log ("Variable sin definir");
                                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                    _Validar = 1;
                                } 
                                else 
                                {
                                    _Validar = 0;
                                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                                }
                        } //if (_Folio_Etiqueta_Embarque !== undefined)
                        
                    if(_SOrden_SItem_Tarima !== undefined)
                        {
                            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                            {
                                _Validar = 1;
                            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        
                        else {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                            }
                        }// if(_SOrden_SItem_Tarima.match !== undefined)
                    
                        if(_Material_Tarima !== undefined)
                        {
                            // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                            if (_Material_Tarima.length &lt;= 18) {
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                            }
                        }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-01T18:41:09"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                console.log ("Material valido "); 
                _Validar = 1;
            } 
            else 
            {
            _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
      
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    if(_Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm1',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm1',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-03T20:39:54"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// fnDebug('STAR ExecJS004 After');
// agregarEventoValidadorEmbarques();
fnResetSeccion_Capturada();
//fnDebug('END  ExecJS004 After');
</Script></update></c><c y="NodeSet" t="2022-04-03T22:15:58"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Mostrar_Campos_Sistema</Name><Type>Boolean</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Mostrar Campos Sistema</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><ItemsStyle>CheckBox</ItemsStyle><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-03T22:16:30"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Mostrar_Campos_Sistema" /></move></c><c y="NodeSet" t="2022-04-03T22:16:46"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Mostrar_Campos_Sistema" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-03T22:17:23"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-03T22:17:58"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><Visibility>[Mostar_Campos_Sistemas] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-03T22:19:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><Visibility>[Mostar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-03T22:21:58"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Resultado_Validacion" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Mostrar_Campos_Sistema" /></move></c><c y="NodeSet" t="2022-04-03T22:23:39"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-03T22:24:07"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Id" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-04T00:23:09"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Seccion_Capturada" /></move></c><c y="NodeSet" t="2022-04-04T00:23:13"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Mostrar_Campos_Sistema" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Seccion_Capturada" /></move></c><c y="NodeSet" t="2022-04-04T00:23:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Visibility>[Mostrar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-04T00:30:29"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-04T00:46:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r110" /><update><Script>fnDebug("Custom ExecJS007...");
$app.touch.contextDataView().discard();
//$app.touch.contextDataView().cancel();
</Script></update></c><c y="NodeSet" t="2022-04-04T01:22:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>// fnDebug('STAR ExecJS004 After');
// agregarEventoValidadorEmbarques();
// fnResetSeccion_Capturada();
//fnDebug('END  ExecJS004 After');
</Script></update></c><c y="NodeSet" t="2022-04-04T01:39:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                console.log ("Material valido "); 
                _Validar = 1;
            } 
            else 
            {
            _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
      
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    if(_Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
    if(_Validar==1)
    {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-04T01:53:36"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Folio_Escaneo_Anterior</Name><Type>Int64</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Folio Escaneo Anterior</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-04T01:53:51"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Folio_Escaneo_Anterior" /></move></c><c y="NodeSet" t="2022-04-04T01:53:59"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Transaccion_Escaneo" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Folio_Escaneo_Anterior" /></move></c><c y="NodeSet" t="2022-04-04T01:54:12"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Folio_Escaneo_Anterior" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-04T01:56:08"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico=/^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if(_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
    //Validar formato de datos de sección.
    if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    console.log ("Es numérico");  
                } 
                else 
                {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
        //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                console.log ("Material valido "); 
                _Validar = 1;
            } 
            else 
            {
            _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
            // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        {
        _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
      
    
    }//if(_Seccion_Capturada === 1)

    if(_Seccion_Capturada === 2){
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if ( _Delivery  !== undefined)
        { //console.log ("Variable sin definir");
                if(  _Delivery.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined)
        { //console.log ("Variable sin definir");
                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                    _Validar = 1;
                } 
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
    if(_SOrden_SItem_Tarima !== undefined)
        {
            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
        
        else {
            _Validar = 0;
            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)
    
        if(_Material_Tarima !== undefined)
        {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if(_Material_Tarima.length &lt;=18 ){
                _Validar = 1;
            } 
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if(_Delivery == null ||_Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null)
        {console.log("null");
        _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
        
    }//if(_Seccion_Capturada === 2){


    if(_Seccion_Capturada === 3){
            // obtener los datos del packing list
            _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
            _Delivery_Packing_List = [Delivery_Packing_List];
            _Cantidad = [Cantidad_Material];
            // obtener datos del delivery en la seccion 3
            _Delivery = [Delivery_SeccionTres];
            // obtener datos de la seccion1 pero en la seccion 3
            _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
            _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
            _Material_Tarima = [Material_Tarima_Tres];

            if(_SOrden_SItem_PackingLIst !== undefined)
            {
                if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
            
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)
        
            if (_Delivery_Packing_List  !== undefined)
            { //console.log ("DElivery 1");
                    if(  _Delivery_Packing_List.match(soloNumeros)){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                        $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                    }
            } //if ( _Delivery  !== undefined)

            if ( _Delivery  !== undefined)
                { console.log ("DElivery 2");
                        if(  _Delivery.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                        // console.log("no numerico");
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                            $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                        //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                        }
                } //if ( _Delivery  !== undefined)
                if (_Folio_Etiqueta_Embarque !== undefined)
                { //console.log ("Variable sin definir");
                        if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                            $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                            //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                        }
                } //if (_Folio_Etiqueta_Embarque !== undefined)
                
            if(_SOrden_SItem_Tarima !== undefined)
                {
                    if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    {
                        _Validar = 1;
                    }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                    }
                }// if(_SOrden_SItem_Tarima.match !== undefined)
            
                if(_Material_Tarima !== undefined)
                {
                    // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                    if(_Material_Tarima.length &lt;=18 ){
                        _Validar = 1;
                    } 
                    else 
                    {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                        $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                    }
                }//if(_Material_Tarima.match !== undefined)
    
                if(_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List==null &amp;&amp; _Delivery==null || _SOrden_SItem_PackingLIst !== null &amp;&amp;  _Delivery_Packing_List!==null &amp;&amp; _Delivery==null)
                    {//console.log("null pack");
                    _Validar = 0;
                    }// if(_Folio_Etiqueta_Embarque == null)
        }//if(_Seccion_Capturada === 3){
if(_Validar==1) {
    validaretiquetasSinObligatoriedad(
        _Folio_Etiqueta_Embarque
        ,_Material_Tarima
        ,_SOrden_SItem_Tarima
        ,_Delivery
        ,_SOrden_SItem_PackingLIst
        ,_Delivery_Packing_List
        //,[Delivery_Dos]
        ,_Cantidad
        ,_Validar
        ,_Seccion_Capturada
        ,_Folio_Escaneo_Id
        ,_Transaccion_Escaneo
    ).done(function(data) {
    
        // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();
    
        if (data.rowsAffected == 1){
            console.log(data);
        
            if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1) {
                //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                function(){ fnDebug('OK');
                        //Genera create de evidencias
                        $app.touch.show({
                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                            startCommand: 'New',
                            startArgument: 'createForm2',
                            
                            filter: [
                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                
                            ],
                            defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                
                            ]
                        });
                        
                        //Realiza limpieza de campos
                        $app.input.execute({
                            values: [
                            // Seccion 1
                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                            ,{ name: 'Material_Tarima', value: null } 
                            // Seccion 2
                            ,{ name: 'Delivery_Delivery', value: null } 
                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                            ,{ name: 'Material_Tarima_Dos', value: null } 
                            // Seccion 3
                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                            ,{ name: 'Delivery_Packing_List', value: null } 
                            ,{ name: 'Delivery_SeccionTres', value: null } 
                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                            ,{ name: 'Material_Tarima_Tres', value: null } 
                            ,{ name: 'Cantidad_Material', value: null }
                            // resultados
                            ,{ name: 'Resultado_Validacion', value: null }
                            //   ,{ name: 'Transaccion_Escaneo', value: null }
                            ,{ name: 'Folio_Escaneo_Id', value: null }
                            ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            ]
                        });
                    }
                , function(){ fnDebug('CANCEL');
                        //No desea evidencias raliza limpieza de campos
                        $app.input.execute({
                            values: [
                            // Seccion 1
                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                            ,{ name: 'Material_Tarima', value: null } 
                            // Seccion 2
                            ,{ name: 'Delivery_Delivery', value: null } 
                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                            ,{ name: 'Material_Tarima_Dos', value: null } 
                            // Seccion 3
                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                            ,{ name: 'Delivery_Packing_List', value: null } 
                            ,{ name: 'Delivery_SeccionTres', value: null } 
                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                            ,{ name: 'Material_Tarima_Tres', value: null } 
                            ,{ name: 'Cantidad_Material', value: null }
                            // resultados
                            ,{ name: 'Resultado_Validacion', value: null }
                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                            ,{ name: 'Folio_Escaneo_Id', value: null }
                            ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            ]
                        });
                }).set('labels', {ok:'SI', cancel:'NO'});
                //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
        }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else {
        
            if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
            {//Significa que algo salio mal
                    
                alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                function(){ 
                        fnDebug('OK');
                        //Genera create de evidencias
                        $app.touch.show({
                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                            startCommand: 'New',
                            startArgument: 'createForm2',
                        
                            filter: [
                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            
                            ],
                            defaultValues: [
                            { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            
                            ]
                        });
                           
                   }
                ,function(){ 
                    fnDebug('CANCEL');
                     
                }).set('labels', {ok:'SI', cancel:'NO'});

            }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
            else {
                /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                function(){ fnDebug('OK'); }
                , function(){ fnDebug('CANCEL');});*/
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function(){  fnDebug('OK'); });          

            }
            //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                ]
            });
        
        }
            

    } else {
        console.log("ELSE");    
    }  

    });
}//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-04T01:57:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
  	agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined ) clase = '';
    if(!clase.includes('app-container-collapsed')){
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {
        
        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined ) clase = '';
        if(!clase.includes('app-container-collapsed')){
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined ) clase = '';
            if(!clase.includes('app-container-collapsed')){
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id =  [Folio_Escaneo_Id];
var _Transaccion_Escaneo =  [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
           //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined)
            { //console.log ("Variable sin definir");
                            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                console.log ("Es numérico");  
                            } 
                            else 
                            {
                                //console.log  ("No es numérico");
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                            }
                    } //if (_Folio_Etiqueta_Embarque !== undefined)
                    
                if(_SOrden_SItem_Tarima !== undefined)
                    {
                        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if(_Material_Tarima !== undefined)
                    {
                        // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                        if (_Material_Tarima.length &lt;= 18) {
                            console.log("Material valido ");
                            _Validar = 1;
                        } 
                        else 
                        {
                        _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                            $app.input.focus({ fieldName: 'Material_Tarima' });
                        // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                        }
                    }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else 
        {
                        if ( _Delivery  !== undefined)
                    { //console.log ("Variable sin definir");
                            if(  _Delivery.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                            //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                            }
                    } //if ( _Delivery  !== undefined)
                    if (_Folio_Etiqueta_Embarque !== undefined)
                    { //console.log ("Variable sin definir");
                            if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                            }
                    } //if (_Folio_Etiqueta_Embarque !== undefined)
                    
                if(_SOrden_SItem_Tarima !== undefined)
                    {
                        if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if(_Material_Tarima !== undefined)
                    {
                        // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                        if (_Material_Tarima.length &lt;= 18) {
                            _Validar = 1;
                        } 
                        else 
                        {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                            $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                        // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                        }
                    }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else 
        {
                    if(_SOrden_SItem_PackingLIst !== undefined)
                    {
                        if(_SOrden_SItem_PackingLIst.includes('/')===true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        {
                            _Validar = 1;
                        }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                    
                    else {
                        _Validar = 0;
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                        $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                        //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                        }
                    }// if(_SOrden_SItem_Tarima.match !== undefined)
                
                    if (_Delivery_Packing_List  !== undefined)
                    { //console.log ("DElivery 1");
                            if(  _Delivery_Packing_List.match(soloNumeros)){
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                            //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                            }
                    } //if ( _Delivery  !== undefined)

                    if ( _Delivery  !== undefined)
                        { console.log ("DElivery 2");
                                if(  _Delivery.match(soloNumeros)){
                                    _Validar = 1;
                                } 
                                else 
                                {
                                    _Validar = 0;
                                // console.log("no numerico");
                                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                                }
                        } //if ( _Delivery  !== undefined)
                        if (_Folio_Etiqueta_Embarque !== undefined)
                        { //console.log ("Variable sin definir");
                                if( _Folio_Etiqueta_Embarque.match(soloNumeros)){
                                    _Validar = 1;
                                } 
                                else 
                                {
                                    _Validar = 0;
                                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                                }
                        } //if (_Folio_Etiqueta_Embarque !== undefined)
                        
                    if(_SOrden_SItem_Tarima !== undefined)
                        {
                            if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                            {
                                _Validar = 1;
                            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )
                        
                        else {
                            _Validar = 0;
                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                            $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                            //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                            }
                        }// if(_SOrden_SItem_Tarima.match !== undefined)
                    
                        if(_Material_Tarima !== undefined)
                        {
                            // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                            if (_Material_Tarima.length &lt;= 18) {
                                _Validar = 1;
                            } 
                            else 
                            {
                                _Validar = 0;
                                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                            // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                            }
                        }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
          	, _Folio_Escaneo_Id
            ,_Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

                 if (data.rowsAffected == 1){
        console.log(data);
        
        if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
            {
             //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
             alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                                  function(){ fnDebug('OK');
                                        //Genera create de evidencias
                                        $app.touch.show({
                                            controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                            startCommand: 'New',
                                            startArgument: 'createForm2',
                                          
                                            filter: [
                                            //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             
                                            ],
                                            defaultValues: [
                                              { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                             ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                             
                                            ]
                                          });
                                          //Realiza limpieza de campos
                                          $app.input.execute({
                                            values: [
                                            // Seccion 1
                                            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                            ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                            ,{ name: 'Material_Tarima', value: null } 
                                            // Seccion 2
                                            ,{ name: 'Delivery_Delivery', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                            ,{ name: 'Material_Tarima_Dos', value: null } 
                                            // Seccion 3
                                            ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                            ,{ name: 'Delivery_Packing_List', value: null } 
                                            ,{ name: 'Delivery_SeccionTres', value: null } 
                                            ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                            ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                            ,{ name: 'Material_Tarima_Tres', value: null } 
                                            ,{ name: 'Cantidad_Material', value: null }
                                            // resultados
                                            ,{ name: 'Resultado_Validacion', value: null }
                                            //   ,{ name: 'Transaccion_Escaneo', value: null }
                                            ,{ name: 'Folio_Escaneo_Id', value: null }
                                            ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                            ]
                                        });
                                 }
                				, function(){ fnDebug('CANCEL');
                                    //No desea evidencias raliza limpieza de campos
                                    $app.input.execute({
                                        values: [
                                        // Seccion 1
                                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                        ,{ name: 'SOrde_SItem_Tarima', value: null } 
                                        ,{ name: 'Material_Tarima', value: null } 
                                        // Seccion 2
                                        ,{ name: 'Delivery_Delivery', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Dos', value: null } 
                                        ,{ name: 'Material_Tarima_Dos', value: null } 
                                        // Seccion 3
                                        ,{ name: 'SOrde_SItem_Packing_List', value: null } 
                                        ,{ name: 'Delivery_Packing_List', value: null } 
                                        ,{ name: 'Delivery_SeccionTres', value: null } 
                                        ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null } 
                                        ,{ name: 'SOrde_SItem_Tarima_Tres', value: null } 
                                        ,{ name: 'Material_Tarima_Tres', value: null } 
                                        ,{ name: 'Cantidad_Material', value: null }
                                        // resultados
                                        ,{ name: 'Resultado_Validacion', value: null }
                                        //   ,{ name: 'Transaccion_Escaneo', value: null }
                                        ,{ name: 'Folio_Escaneo_Id', value: null }
                                        ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        ]
                                    });
                            }).set('labels', {ok:'SI', cancel:'NO'});
                          //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
            }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
        else
            {
        
                if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto'))
                {//Significa que algo salio mal
                    
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion+'&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                    function(){ fnDebug('OK');
                          //Genera create de evidencias
                          $app.touch.show({
                              controller: 'Evidencia_Escaneo_Validador_Embarque1',
                              startCommand: 'New',
                              startArgument: 'createForm2',
                            
                              filter: [
                              //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               
                              ],
                              defaultValues: [
                                { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                               ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                               
                              ]
                            });
                           
                   }
                  , function(){ 
                    fnDebug('CANCEL');
                     
              }).set('labels', {ok:'SI', cancel:'NO'});

                }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                else
                             {
                           /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                            function(){ fnDebug('OK'); }
                                            , function(){ fnDebug('CANCEL');});*/
                                            alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, 
                                            function(){  fnDebug('OK'); });
                                            

                            }
             //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
            $app.input.execute({
                values: [
                    { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion } 
                    ,{ name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo } 
                    ,{ name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id } 
                    ,{ name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                ]
            });
            
            }
            

        }
        else{
            console.log("ELSE");
            
    }  

    });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-04T02:01:49"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r104" /><update><Script>fnDebug("Este es el folio del escaneo");
fnDebug([Master.Folio_Escaneo_Anterior]);

fnDebug("Este es el folio del Escaneo_Id PK");
fnDebug([Master.Escaneo_Validador_Embarque_Id]);

if ([Master.Folio_Escaneo_Anterior] == null) {
	[EscaneoValidadorEmbarqueId] = [Master.Escaneo_Validador_Embarque_Id];
} else {
	[EscaneoValidadorEmbarqueId] = [Master.Folio_Escaneo_Anterior];
}
</Script></update></c><c y="NodeSet" t="2022-04-04T10:17:38"><controller name="Escaneo_Validador_Embarque1" /><insert type="field"><Name>Captura_Iniciada</Name><Type>Boolean</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>true</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>false</OnDemand><Label>Captura Iniciada</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-04-04T10:17:51"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Captura_Iniciada" /></move></c><c y="NodeSet" t="2022-04-04T10:18:17"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Folio_Escaneo_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Captura_Iniciada" /></move></c><c y="NodeSet" t="2022-04-04T10:18:42"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Captura_Iniciada" /><update><Hidden>false</Hidden><Visibility>[Mostrar_Campos_Sistema] == true</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-04T10:23:49"><controller name="Escaneo_Validador_Embarque1" /><field name="Captura_Iniciada" /><update><ItemsStyle>CheckBox</ItemsStyle></update></c><c y="NodeSet" t="2022-04-04T10:41:31"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><delete /></c><c y="NodeSet" t="2022-04-04T10:52:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) {

    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];

        if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-04-04T11:08:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];



        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];



        if (_SOrden_SItem_PackingLIst == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-04-04T11:22:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();



$app.execute({
    controller: 'Escaneo_Validador_Embarque1'
    , command: 'Insert'
    , values: [
        { name: 'Escaneo_Validador_Embarque_Id', value: null }
        , { name: 'Transaccion_Escaneo', newValue: null }
    ]
    , done: function (result) {
        fnDebug("Insert result : ");
        fnDebug(result);

        // Consultar la transacción del rgistro creado
        $app.execute({
            controller: 'Escaneo_Validador_Embarque1',
            pageSize: 1,
            filter: [
                { field: 'Escaneo_Validador_Embarque_Id', operator: '=', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
            ],
            done: function (result) {
                fnDebug("result select:");
                fnDebug("result select Escaneo_Validador_Embarque_Id:" + result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id);
                fnDebug("result select Transaccion_Escaneo:" + result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo);

                $app.input.execute({
                    values: [
                        // Seccion 1
                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                        , { name: 'SOrde_SItem_Tarima', value: null }
                        , { name: 'Material_Tarima', value: null }
                        // Seccion 2
                        , { name: 'Delivery_Delivery', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                        , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                        , { name: 'Material_Tarima_Dos', value: null }
                        // Seccion 3
                        , { name: 'SOrde_SItem_Packing_List', value: null }
                        , { name: 'Delivery_Packing_List', value: null }
                        , { name: 'Delivery_SeccionTres', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                        , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                        , { name: 'Material_Tarima_Tres', value: null }
                        , { name: 'Cantidad_Material', value: null }
                        // resultados
                        , { name: 'Resultado_Validacion', value: null }
                        , { name: 'Transaccion_Escaneo', value: result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo }
                        , { name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id }
                        , { name: 'Folio_Escaneo_Anterior', value:  result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id}
                        , { name: 'Captura_Iniciada', value: false }
                    ]
                });


            }
        });

    }
});


// var Nueva_Transaccion = eaton.createGuid();
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', Nueva_Transaccion);



fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-04-04T12:38:59"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Cantidad_Material" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="MensajeValidacionAplicada" /></move></c><c y="NodeSet" t="2022-04-04T12:39:04"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Cantidad_Material" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Mensaje_Sistema_Id" /></move></c><c y="NodeSet" t="2022-04-18T13:18:49"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><update><HyperlinkFormatString /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-18T13:19:43"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><update><HeaderText>Folio Escaneo Validador Embarque</HeaderText><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-04-18T13:19:51"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><update><Alias /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-12T12:56:38"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><Phase>Execute</Phase><Script>console.log("Salir de pantalla");</Script></insert></c><c y="NodeSet" t="2022-05-12T12:57:25"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-05-12T12:57:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandArgument>ExecJS008</CommandArgument></update></c><c y="NodeSet" t="2022-05-12T12:58:50"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJs008</CommandArgument><HeaderText>Guardar</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>FormNuevo</WhenLastCommandArgument></insert></c><c y="NodeSet" t="2022-05-12T12:58:56"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a14" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a106" /></move></c><c y="NodeSet" t="2022-05-12T13:08:32"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a106" /><update><CommandArgument>ExecJS008</CommandArgument></update></c><c y="NodeSet" t="2022-05-12T17:17:44"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Dos" /><update><Label>Número de material en la tarima</Label></update></c><c y="NodeSet" t="2022-05-12T17:20:41"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima" /><update><Label>Número de material en la tarima.</Label></update></c><c y="NodeSet" t="2022-05-12T17:21:36"><controller name="Escaneo_Validador_Embarque1" /><field name="Material_Tarima_Tres" /><update><Label>Número de material en la tarima</Label></update></c><c y="NodeSet" t="2022-05-12T17:23:30"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Dos" /><update><Label>línea de la sales order</Label></update></c><c y="NodeSet" t="2022-05-12T17:24:13"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Uno" /><update><Label>línea de la sales order</Label></update></c><c y="NodeSet" t="2022-05-12T17:25:55"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Tres" /><update><Label>línea de la sales order</Label></update></c><c y="NodeSet" t="2022-05-12T17:29:32"><controller name="Escaneo_Validador_Embarque1" /><field name="Sales_Item_Packing" /><update><Label>línea de la sales order Packing</Label></update></c><c y="NodeSet" t="2022-05-13T10:12:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

       /*     if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se solicitó por usuario que el campo se omita
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
           /* if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-13T10:14:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-05-13T10:14:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];



if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        _Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-05-13T10:15:02"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Delivery_SeccionTres" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T10:27:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
[Delivery_SeccionTres] = [Delivery_Packing_List];


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-05-13T18:18:18"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Order_Dos" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T18:18:27"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Item_Dos" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T18:18:55"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Order_Tres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T18:19:03"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Item_Tres" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T18:19:24"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Order_Packing" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-13T18:19:32"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><dataField fieldName="Sales_Item_Packing" /><update><Rows /><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-16T09:18:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
[Delivery_SeccionTres] = [Delivery_Packing_List];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

       /*     if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se solicitó por usuario que el campo se omita
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
           /* if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-16T09:18:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales
console.log('_Seccion_Capturada', _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}






// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
[Delivery_SeccionTres] = [Delivery_Packing_List];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

       /*     if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                    //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se solicitó por usuario que el campo se omita
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
           /* if (_SOrden_SItem_PackingLIst !== undefined) {
                if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

           /* if (_SOrden_SItem_Tarima !== undefined) {
                if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                    _Validar = 1;
                }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                    $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                    //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
                }
            }// if(_SOrden_SItem_Tarima.match !== undefined)*/
            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                 _Validar=1;
                //console.log(_Sales_Order_Uno);
                //console.log(_Sales_Item_Uno);
                //console.log(_SOrden_SItem_Tarima);
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){




    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c></log><log type="Application"><c y="NodeSet" t="2020-02-27T17:15:41"><page name="Log_eaton_app" />
<update>
  <Name>Log_app</Name>
</update></c><c y="NodeSet" t="2020-09-10T14:40:27"><page name="Estatus_Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-09-10T14:40:37"><page name="Estatus_Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-09-10T14:41:30"><page name="Estatus_Etiqueta" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <About>Está página permite administrar toda la información relacionada con el Estatus de Etiqueta.
</About>
</update></c><c y="NodeSet" t="2020-09-10T14:42:03"><page name="Estatus_Etiqueta" />
<update>
  <Description>Ver Estatus Etiqueta</Description>
  <About>Está página permite administrar toda la información relacionada con el Estatus de Etiqueta.
</About>
</update></c><c y="NodeSet" t="2020-09-10T14:42:52"><page name="Estatus_Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con el Estatus de Etiqueta.
</About>
</update></c><c y="NodeSet" t="2020-09-10T14:43:33"><page name="Etiqueta" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Description>Ver Etiqueta</Description>
  <About>Está página permite administrar toda la información relacionada con las Etiquetas.
</About>
</update></c><c y="NodeSet" t="2020-09-10T14:44:19"><page name="Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-09-10T14:45:23"><page name="Tamanio_Etiqueta" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Tamaño de Etiqueta</Title>
  <Description>Ver Tamaño de Etiqueta</Description>
  <About>Está página permite administrar toda la información relacionada con los tamaños de etiqueta.</About>
</update></c><c y="NodeSet" t="2020-09-10T14:46:01"><page name="Tamanio_Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none 
</Tag>
</update></c><c y="NodeSet" t="2020-09-10T17:12:29"><page name="Tamanio_Etiqueta" />
<rename>Tamaño de  Etiqueta</rename></c><c y="NodeSet" t="2020-09-10T17:25:50"><pages />
<insert type="page">
  <Name>Etiquetas</Name>
  <Generate>Always</Generate>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Path>Etiquetas</Path>
  <Title>Etiquetas</Title>
  <Roles>Administrators,Surtidor</Roles>
</insert></c><c y="NodeSet" t="2020-09-10T17:26:06"><page name="Etiquetas" />
<move>
  <page name="Estatus_Etiqueta" />
</move></c><c y="NodeSet" t="2020-09-10T17:26:23"><page name="Etiquetas" />
<move>
  <page name="Tamanio_Etiqueta" />
</move></c><c y="NodeSet" t="2020-09-10T17:26:45"><page name="Etiquetas" />
<move>
  <page name="Etiqueta" />
</move></c><c y="NodeSet" t="2020-09-10T17:30:31"><page name="Etiquetas" />
<update>
  <Roles>Administrators,administrador,Surtidor</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:41:54"><page name="Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con las Etiquetas.
</About>
  <Roles>UsuarioEtiqueta</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:43:16"><page name="Tamanio_Etiqueta" />
<update>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:43:30"><page name="Estatus_Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con el Estatus de Etiqueta.
</About>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:44:01"><page name="Etiquetas" />
<update>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:45:55"><page name="Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con las Etiquetas.
</About>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-10T17:46:10"><page name="Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con las Etiquetas.
</About>
</update></c><c y="NodeSet" t="2020-09-10T22:48:03"><page name="Estatus_Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con el Estatus de Etiqueta.
</About>
</update></c><c y="NodeSet" t="2020-09-11T10:48:45"><pages />
<insert type="page">
  <Name>Etiqueta_UE</Name>
  <Generate>Always</Generate>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Path>Etiqueta</Path>
  <Title>Etiqueta</Title>
  <Roles>UsuarioEtiqueta</Roles>
</insert></c><c y="NodeSet" t="2020-09-11T10:49:29"><page name="Etiquetas" />
<move>
  <page name="Etiqueta_UE" />
</move></c><c y="NodeSet" t="2020-09-11T10:51:14"><page name="Etiqueta" />
<update>
  <About>Está página permite administrar toda la información relacionada con las Etiquetas.
</About>
  <Roles>administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-11T10:54:10"><page name="Etiqueta_UE" />
<insert type="container">
  <Flow>NewRow</Flow>
</insert></c><c y="NodeSet" t="2020-09-11T10:54:45"><page name="Etiqueta_UE" />
<container id="c101" />
<insert type="dataView">
  <Controller>Etiqueta1</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-09-11T10:54:58"><page name="Etiqueta_UE" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-09-11T10:55:02"><page name="Etiqueta_UE" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-09-11T10:58:10"><page name="Etiqueta_UE" />
<update>
  <Name>Etiqueta_surtidor</Name>
</update></c><c y="NodeSet" t="2020-09-11T10:58:21"><page name="Etiqueta_surtidor" />
<rename>Etiqueta surtidor</rename></c><c y="NodeSet" t="2020-09-11T16:24:14"><page name="Etiqueta_surtidor" />
<update>
  <Roles>Surtidor</Roles>
</update></c><c y="NodeSet" t="2020-09-11T16:25:43"><page name="Etiquetas" />
<update>
  <Roles>UsuarioEtiqueta,administrador,Surtidor</Roles>
</update></c><c y="NodeSet" t="2020-09-12T23:16:15"><page name="Etiqueta_surtidor" />
<rename>Etiquetas (surtido)</rename></c><c y="NodeSet" t="2020-09-12T23:16:28"><page name="Ubicacion_Origen_Transfer_V" />
<after>
  <page name="Etiqueta_surtidor" />
</after></c><c y="NodeSet" t="2020-09-12T23:16:33"><page name="Ubicacion_Origen_Transfer_V" />
<after>
  <page name="Etiqueta_surtidor" />
</after></c><c y="NodeSet" t="2020-09-12T23:16:41"><page name="Grid_Mat_Surtido_Coment_V" />
<after>
  <page name="Etiqueta_surtidor" />
</after></c><c y="NodeSet" t="2020-09-12T23:16:51"><page name="Grid_Mat_Surtido_Coment_V" />
<after>
  <page name="Ubicacion_Origen_Transfer_V" />
</after></c><c y="NodeSet" t="2020-09-13T15:32:08"><page name="Etiquetas" />
<update>
  <Roles>UsuarioEtiqueta,administrador</Roles>
</update></c><c y="NodeSet" t="2020-09-13T15:40:05"><page name="Estatus_Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <ShowViewSelector>false</ShowViewSelector>
</update></c><c y="NodeSet" t="2020-09-13T15:52:36"><page name="Estatus_Etiqueta" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <ShowViewSelector>true</ShowViewSelector>
</update></c><c y="NodeSet" t="2020-12-01T15:03:58"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Solicitudes pendientes por entregar</Title>
  <Description>Ver Solicitudes pendientes por entregar</Description>
  <About>Está página permite administrar toda la información relacionada con las Solicitudes pendientes por entregar.</About>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T19:33:38"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<rename>Solicitudes Pendientes Por Entregar Cadista</rename></c><c y="NodeSet" t="2020-12-01T20:01:26"><page name="Rol_Logico" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Rol Lógico</Title>
  <Description>Ver Rol Lógico</Description>
  <About>Está página permite administrar toda la información relacionada con el Rol Lógico</About>
  <Roles>administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-01T20:07:35"><page name="Rol_Logico" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none</Tag>
</update></c><c y="NodeSet" t="2020-12-01T22:03:41"><page name="Usuario_Aplicacion_Rol_Logico" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Usuario Aplicación vs Rol lógico</Title>
  <Description>Ver Usuario Aplicación vs Rol lógico</Description>
  <About>Está página permite administrar toda la información relacionada con el Usuario Aplicación vs Rol lógico</About>
</update></c><c y="NodeSet" t="2020-12-01T22:04:06"><page name="Usuario_Aplicacion_Rol_Logico" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-01T22:54:45"><page name="RelacionUsuarioAplicacion" />
<move>
  <page name="Usuario_Aplicacion_Rol_Logico" />
</move></c><c y="NodeSet" t="2020-12-01T22:54:59"><page name="Usuario_Aplicacion_Rol_Logico" />
<rename>Usuario Aplicacion vs. Rol Logico</rename></c><c y="NodeSet" t="2020-12-01T22:56:06"><page name="RelacionUsuarioAplicacion" />
<container id="c102" />
<insert type="dataView">
  <Controller>Usuario_Aplicacion_Rol_Logico</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Usuario_Sistema_Id</FilterFields>
  <FilterField2>Usuario_Aplicacion_Id</FilterField2>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-01T22:56:35"><page name="RelacionUsuarioAplicacion" />
<dataView id="view6" />
<update>
  <Sequence>50</Sequence>
</update></c><c y="NodeSet" t="2020-12-01T22:58:43"><page name="RelacionUsuarioAplicacion" />
<dataView id="view6" />
<update>
  <Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none</Tag>
</update></c><c y="NodeSet" t="2020-12-01T22:59:15"><page name="RelacionUsuarioAplicacion" />
<dataView id="view6" />
<update>
  <Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none</Tag>
  <Activator>Tab</Activator>
  <Text>Rol lógico</Text>
</update></c><c y="NodeSet" t="2020-12-01T22:59:22"><page name="RelacionUsuarioAplicacion" />
<dataView id="view6" />
<update>
  <Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none</Tag>
</update></c><c y="NodeSet" t="2020-12-01T23:02:51"><pages />
<renameRefs type="field">
  <Controller>Usuario_Aplicacion_Rol_Logico</Controller>
  <Name>Usuario_Sistema_Id</Name>
  <NewName>Usuario_Id</NewName>
</renameRefs></c><c y="NodeSet" t="2020-12-01T23:03:51"><page name="RelacionUsuarioAplicacion" />
<dataView id="view6" />
<update>
  <Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none</Tag>
  <FilterFields>Usuario_Aplicacion_Id</FilterFields>
  <FilterField2>Usuario_Id</FilterField2>
</update></c><c y="NodeSet" t="2020-12-02T12:25:55"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<update>
  <Roles>Administrators,Cadista</Roles>
</update></c><c y="NodeSet" t="2020-12-02T22:23:05"><page name="Catalogo_Aplicacion" />
<move>
  <page name="Rol_Logico" />
</move></c><c y="NodeSet" t="2020-12-02T22:24:36"><page name="moduloincan" />
<move>
  <page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
</move></c><c y="NodeSet" t="2020-12-02T22:24:44"><page name="moduloincan" />
<after>
  <page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
</after></c><c y="NodeSet" t="2020-12-03T09:34:23"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<insert type="container">
  <Flow>NewRow</Flow>
</insert></c><c y="NodeSet" t="2020-12-03T09:35:51"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<container id="c101" />
<insert type="dataView">
  <Controller>Documento_Comentario</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Solicitud_Id</FilterFields>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-03T13:43:06"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<dataView id="view2" />
<update>
  <Controller>Documento_Comentario1</Controller>
</update></c><c y="NodeSet" t="2020-12-03T20:40:12"><page name="Grid_Desglose_Captura_Cadista_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Desglose Captura</Title>
  <Description>Ver Desglose Captura</Description>
  <About>Esta página permite administrar toda la información relacionada con el Desglose Captura</About>
</update></c><c y="NodeSet" t="2020-12-03T20:41:17"><page name="Grid_Desglose_Captura_Cadista_V" />
<update>
  <Roles>Administrators, cadista</Roles>
</update></c><c y="NodeSet" t="2020-12-03T20:41:44"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-03T20:42:00"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-03T21:02:39"><page name="Grid_Desglose_Captura_Cadista_V" />
<insert type="container">
  <Flow>NewRow</Flow>
</insert></c><c y="NodeSet" t="2020-12-03T22:07:37"><page name="Grid_Solicitud_BCS_V" />
<rename>Solicitud Bitacora Sistema</rename></c><c y="NodeSet" t="2020-12-03T22:08:48"><page name="Grid_Solicitud_BCS_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Roles>hidden</Roles>
</update></c><c y="NodeSet" t="2020-12-03T22:13:28"><page name="Grid_Desglose_Captura_Cadista_V" />
<rename>Desglose Captura</rename></c><c y="NodeSet" t="2020-12-03T22:15:25"><page name="Grid_Desglose_Captura_Cadista_V" />
<container id="c101" />
<insert type="dataView">
  <Controller>Grid_Solicitud_BCS_V</Controller>
  <View>grid1</View>
  <Activator>Tab</Activator>
  <Text>Solicitudes</Text>
  <Sequence>10</Sequence>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Ruta_Optima_Id</FilterFields>
  <FilterField2>Material_Surtido_Id</FilterField2>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-03T23:00:59"><page name="Grid_Desglose_Captura_Cadista_V" />
<container id="c101" />
<insert type="dataView">
  <Controller>Etiqueta1</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Bitacora_Captura_Sap_Id</FilterFields>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-03T23:01:16"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view3" />
<update>
  <Activator>Tab</Activator>
  <Text>Etiquetas</Text>
  <Sequence>20</Sequence>
</update></c><c y="NodeSet" t="2020-12-03T23:09:39"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view3" />
<update>
  <Controller>Etiqueta</Controller>
</update></c><c y="NodeSet" t="2020-12-03T23:12:18"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view3" />
<update>
  <Controller>Etiqueta2</Controller>
</update></c><c y="NodeSet" t="2020-12-04T08:25:34"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-04T08:25:41"><page name="Grid_Desglose_Captura_Cadista_V" />
<dataView id="view3" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-04T08:42:13"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<rename>Solicitudes Pendientes Por Entregar</rename></c><c y="NodeSet" t="2020-12-04T09:07:42"><page name="reportes" />
<before>
  <page name="Grid_Desglose_Captura_Cadista_V" />
</before></c><c y="NodeSet" t="2020-12-04T09:30:01"><page name="Usuario_Aplicacion_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Roles>Administrators</Roles>
</update></c><c y="NodeSet" t="2020-12-21T19:30:36"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<rename>Solicitudes Entregadas Por Cadista</rename></c><c y="NodeSet" t="2020-12-21T19:32:22"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Solicitudes Entregadas Por Cadista</Title>
  <Description>Ver solicitudes entregadas por caditas</Description>
  <About>Está página permite administrar toda la información relacionada con las Solicitudes Entregadas Por Cadista</About>
</update></c><c y="NodeSet" t="2020-12-21T19:32:32"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<update>
  <About>Está página permite administrar toda la información relacionada con las Solicitudes Entregadas Por Cadista.</About>
</update></c><c y="NodeSet" t="2020-12-21T19:37:42"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<rename>Solicitudes Entregadas</rename></c><c y="NodeSet" t="2020-12-21T19:40:31"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<update>
  <UseExtenders>false</UseExtenders>
  <Offline>false</Offline>
  <Title>Solicitudes Entregadas</Title>
  <Description>Ver Solicitudes Entregadas</Description>
  <About>Está página permite administrar toda la información relacionada con las Solicitudes Entregadas</About>
</update></c><c y="NodeSet" t="2020-12-21T19:43:16"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<update>
  <Description>Ver solicitudes entregadas por cadita</Description>
</update></c><c y="NodeSet" t="2020-12-21T19:43:32"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-21T19:48:40"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-21T20:19:12"><pages />
<renameRefs type="view">
  <Controller>Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V</Controller>
  <Name>grid1</Name>
  <NewName>Solicitude_Entregadas_Dia_Actual</NewName>
</renameRefs></c><c y="NodeSet" t="2020-12-21T20:19:24"><pages />
<renameRefs type="view">
  <Controller>Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V</Controller>
  <Name>Solicitude_Entregadas_Dia_Actual</Name>
  <NewName>Solicitudes_Entregadas_Dia_Actual</NewName>
</renameRefs></c><c y="NodeSet" t="2020-12-21T20:29:38"><pages />
<renameRefs type="view">
  <Controller>Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V</Controller>
  <Name>grid1</Name>
  <NewName>Solicitudes_Entregadas_Por_Cadista_Dia_Actual</NewName>
</renameRefs></c><c y="NodeSet" t="2020-12-22T08:38:07"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<insert type="container">
  <Flow>NewRow</Flow>
</insert></c><c y="NodeSet" t="2020-12-22T08:39:01"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<container id="c101" />
<insert type="dataView">
  <Controller>Documento_Comentario1</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Solicitud_Id</FilterFields>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-22T08:39:12"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<insert type="container">
  <Flow>NewRow</Flow>
</insert></c><c y="NodeSet" t="2020-12-22T08:39:51"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<container id="c101" />
<insert type="dataView">
  <Controller>Documento_Comentario1</Controller>
  <View>grid1</View>
  <ShowInSummary>false</ShowInSummary>
  <MultiSelect>false</MultiSelect>
  <ShowActionBar>true</ShowActionBar>
  <ShowDescription>true</ShowDescription>
  <ShowViewSelector>true</ShowViewSelector>
  <ShowSearchBar>true</ShowSearchBar>
  <ShowQuickFind>true</ShowQuickFind>
  <SearchByFirstLetter>false</SearchByFirstLetter>
  <ShowRowNumber>false</ShowRowNumber>
  <ShowPager>Bottom</ShowPager>
  <ShowPageSize>true</ShowPageSize>
  <ShowModalForms>false</ShowModalForms>
  <SearchOnStart>false</SearchOnStart>
  <ShowDetailsInListMode>true</ShowDetailsInListMode>
  <AutoHighlightFirstRow>false</AutoHighlightFirstRow>
  <AutoSelectFirstRow>false</AutoSelectFirstRow>
  <FilterSource>view1</FilterSource>
  <FilterFields>Solicitud_Id</FilterFields>
  <AutoHide>Nothing</AutoHide>
</insert></c><c y="NodeSet" t="2020-12-22T08:44:57"><page name="reportes" />
<move>
  <page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
</move></c><c y="NodeSet" t="2020-12-22T08:45:10"><page name="reportes" />
<move>
  <page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
</move></c><c y="NodeSet" t="2020-12-22T08:45:55"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<update>
  <Roles>Cadista</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:47:03"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<update>
  <Roles>administrador,SupervisorAlmacen</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:52:42"><page name="reportes" />
<update>
  <Roles>Administrators,Solicitante,administrador,Surtidor,SurtidorMaterialConAreaAsignada,SupervisorAlmacen,SupervisorProduccion,ConsultaReporte,ConsultaReporteMuestra,SurtidorDevolucion,SurtidorReciboTransferencia,SupervisorAlmacen,OperadorInventario,Cadista</Roles>
</update></c><c y="NodeSet" t="2020-12-22T08:58:56"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-22T08:59:11"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-22T17:44:43"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<dataView id="view1" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-charts-disabled,
view-style-cards-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-22T17:44:57"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-charts-disabled,
view-style-cards-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-22T17:45:04"><page name="Grid_Solicitudes_Pendientes_Por_Entregar_Cadista_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-charts-disabled,
view-style-cards-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
</update></c><c y="NodeSet" t="2020-12-22T19:16:47"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<rename>Reporte de Solicitudes Entregadas</rename></c><c y="NodeSet" t="2020-12-22T19:17:11"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <View>Documento_Comentario_Solicitud_Entregado</View>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <FilterFields />
</update></c><c y="NodeSet" t="2020-12-22T19:17:25"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <View>Documento_Comentario_Solicitud_Entregado</View>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <FilterFields />
</update></c><c y="NodeSet" t="2021-01-04T14:11:51"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Para_Admin_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <FilterFields>Solicitud_Id</FilterFields>
</update></c><c y="NodeSet" t="2021-01-04T14:12:09"><page name="Grid_Solicitudes_Entregadas_Por_Cadista_Dia_Actual_V" />
<dataView id="view2" />
<update>
  <Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag>
  <FilterFields>Solicitud_Id</FilterFields>
</update></c><c y="NodeSet" t="2021-01-15T08:55:22"><pages /><insert type="page"><Name>Etiqueta_Proveedor_Usuario</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Etiqueta Proveedor Usuario</Path><Title>Etiqueta Proveedor Usuario</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2021-01-15T08:55:39"><page name="Etiqueta_Proveedor_Usuario" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2021-01-15T08:56:24"><page name="Etiqueta_Proveedor_Usuario" /><container id="c101" /><insert type="dataView"><Controller>Etiqueta_Proveedor1</Controller><View>v100</View><ShowInSummary>false</ShowInSummary><MultiSelect>false</MultiSelect><ShowActionBar>true</ShowActionBar><ShowDescription>true</ShowDescription><ShowViewSelector>true</ShowViewSelector><ShowSearchBar>true</ShowSearchBar><ShowQuickFind>true</ShowQuickFind><SearchByFirstLetter>false</SearchByFirstLetter><ShowRowNumber>false</ShowRowNumber><ShowPager>Bottom</ShowPager><ShowPageSize>true</ShowPageSize><ShowModalForms>false</ShowModalForms><SearchOnStart>false</SearchOnStart><ShowDetailsInListMode>true</ShowDetailsInListMode><AutoHighlightFirstRow>false</AutoHighlightFirstRow><AutoSelectFirstRow>false</AutoSelectFirstRow><AutoHide>Nothing</AutoHide></insert></c><c y="NodeSet" t="2021-01-15T09:35:14"><pages /><insert type="page"><Name>Etiqueta_Usuario_Proveedor</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Etiqueta Usuario Proveedor</Path><Title>Etiqueta Usuario Proveedor</Title><Roles>ProveedorCooper</Roles></insert></c><c y="NodeSet" t="2021-01-15T09:35:28"><page name="Etiqueta_Usuario_Proveedor" /><move><page name="Etiqueta_Proveedor_Usuario" /><container id="c101" /></move></c><c y="NodeSet" t="2021-01-15T09:35:40"><page name="Etiqueta_Proveedor_Usuario" /><delete /></c><c y="NodeSet" t="2021-01-16T12:56:15"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view1" /><update><Controller>Etiqueta_Proveedor</Controller></update></c><c y="NodeSet" t="2021-01-16T13:48:32"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view2" /><update><Controller>Etiqueta_Detalle_Proveedor</Controller></update></c><c y="NodeSet" t="2021-01-16T14:50:20"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view1" /><update><Controller>Etiqueta_Proveedor1</Controller></update></c><c y="NodeSet" t="2021-01-16T14:52:28"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view2" /><update><Controller>Etiqueta_Detalle_Proveedor1</Controller></update></c><c y="NodeSet" t="2021-01-16T23:08:09"><page name="Grid_Etiqueta_Proveedor_V" /><delete /></c><c y="NodeSet" t="2021-01-17T22:40:14"><page name="Grid_Usuario_Rol_Logico_V" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Roles>hidden</Roles></update></c><c y="NodeSet" t="2021-01-17T23:12:36"><page name="Administracion" /><after><page name="Administracion_de_Proveedores" /></after></c><c y="NodeSet" t="2021-01-17T23:12:43"><page name="Administracion" /><move><page name="Administracion_de_Proveedores" /></move></c><c y="NodeSet" t="2021-01-17T23:12:51"><page name="RelacionUsuarioAplicacion" /><after><page name="Administracion_de_Proveedores" /></after></c><c y="NodeSet" t="2021-01-17T23:29:34"><page name="Administracion_de_Proveedores" /><rename>Administración de Proveedores</rename></c><c y="NodeSet" t="2021-01-17T23:39:13"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2021-01-17T23:39:22"><page name="Etiqueta_Usuario_Proveedor" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2021-02-23T23:55:21"><pages /><insert type="page"><Name>CargaMasivaDeEtiquetasdeproveedores</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Carga Masiva De Etiquetas de proveedores</Path><Title>Carga Masiva De Etiquetas de proveedores</Title><Roles>EtiquetaCargaMasivaUsuarioCooper</Roles></insert></c><c y="NodeSet" t="2021-02-23T23:55:34"><page name="CargaMasivaDeEtiquetasdeproveedores" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2021-02-23T23:55:46"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view1" /></copy></c><c y="NodeSet" t="2021-02-23T23:55:57"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view2" /></copy></c><c y="NodeSet" t="2021-02-23T23:55:57"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view6" /></copy></c><c y="NodeSet" t="2021-02-23T23:55:57"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view4" /></copy></c><c y="NodeSet" t="2021-02-23T23:55:57"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view3" /></copy></c><c y="NodeSet" t="2021-02-23T23:55:57"><page name="CargaMasivaDeEtiquetasdeproveedores" /><container id="c101" /><copy><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view5" /></copy></c><c y="NodeSet" t="2021-02-23T23:56:07"><page name="CargaMasivaDeEtiquetasdeproveedores" /><copy><page name="Carga_Masiva_de_Etiquetas" /><container id="c102" /></copy></c><c y="NodeSet" t="2021-02-23T23:59:13"><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view7" /><update><FilterSource>view5</FilterSource></update></c><c y="NodeSet" t="2021-02-25T20:29:09"><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-25T20:51:45"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view1" /><update><Controller>Temporal_Etiqueta_Proveedor1_3</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-25T20:52:48"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view2" /><update><Controller>Temporal_Etiqueta_Proveedor1_2_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-25T23:44:37"><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view5" /><update><Controller>Etiqueta_Proveedor1_1_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T00:02:11"><page name="Carga_Masiva_de_Etiquetas" /><dataView id="view5" /><update><Controller>Etiqueta_Proveedor1_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T00:02:37"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view5" /><update><Controller>Etiqueta_Proveedor1_1_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T01:21:00"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view2" /><update><Controller>Temporal_Etiqueta_Proveedor1_2_1_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T01:29:36"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view2" /><update><Controller>Bitacora_Captura_Sap1_2_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T01:31:25"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view2" /><update><Controller>Temporal_Etiqueta_Proveedor1_2_1_1</Controller><Tag>view-style-grid,  
view-style-list,  
view-style-cards-disabled, 
view-style-charts-disabled, 
view-style-calendar-disabled, 
inline-editing-none, 
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2021-02-26T01:32:54"><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view2" /><move><page name="CargaMasivaDeEtiquetasdeproveedores" /><dataView id="view1" /></move></c><c y="NodeSet" t="2021-02-27T13:15:51"><page name="Etiquetas_Para_Proveedores" /><rename>Crear Material</rename></c><c y="NodeSet" t="2021-04-14T15:39:42"><page name="Tipo_Ubicacion" /><update><Roles>Administrators,administrador</Roles></update></c><c y="NodeSet" t="2021-10-16T17:33:11"><page name="Bitacora_Captura_SAP_" /><update><Roles>SolicitanteReciboTransferencia</Roles></update></c><c y="NodeSet" t="2021-10-16T17:33:32"><page name="reportes" /><update><Roles>Solicitante,administrador,Surtidor,SurtidorMaterialConAreaAsignada,SupervisorAlmacen,SupervisorProduccion,ConsultaReporte,ConsultaReporteMuestra,SurtidorDevolucion,SurtidorReciboTransferencia,SupervisorAlmacen,OperadorInventario,Cadista,SolicitanteReciboTransferencia</Roles></update></c><c y="NodeSet" t="2022-03-08T22:41:04"><pages /><insert type="page"><Name>garantias</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>garantias</Path><Title>garantias</Title><Roles>*</Roles></insert></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Resultado_Validacion_Embarque" /></move></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Bitacora_Validador_Embarques" /></move></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Delivery" /></move></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Evidencia_Escaneo_Validador_Embarque" /></move></c><c y="NodeSet" t="2022-03-08T22:44:57"><page name="garantias" /><move><page name="Log_Delivery_Procesamiento" /></move></c><c y="NodeSet" t="2022-03-08T22:59:42"><page name="Resultado_Validacion_Embarque" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Description>Ver Resultado validación embarque</Description><About>Esta página permite administrar toda la información relacionada con el Resultado validación embarque</About><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-08T23:00:49"><page name="Resultado_Validacion_Embarque" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-08T23:31:54"><page name="Bitacora_Validador_Embarques" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Bitacora validador embarque</Title><Description>Ver Bitacora validador embarque</Description><About>Esta página permite administrar toda la información relacionada con la Bitacora validador embarque</About></update></c><c y="NodeSet" t="2022-03-08T23:32:06"><page name="Bitacora_Validador_Embarques" /><update><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-08T23:34:34"><page name="Bitacora_Validador_Embarques" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-08T23:49:27"><page name="Escaneo_Validador_Embarque" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Escaneo validador embarque</Title><Description>Ver Escaneo validador embarque</Description><About>Esta página permite administrar toda la información relacionada con el Escaneo validador embarque.</About></update></c><c y="NodeSet" t="2022-03-08T23:49:38"><page name="Escaneo_Validador_Embarque" /><update><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-08T23:50:03"><page name="Escaneo_Validador_Embarque" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-08T23:59:59"><page name="Delivery" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Description>Ver Delivery</Description><About>Esta página permite administrar toda la información relacionada con el Delivery.</About></update></c><c y="NodeSet" t="2022-03-09T00:00:16"><page name="Delivery" /><update><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T00:00:37"><page name="Delivery" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-09T00:08:31"><page name="Evidencia_Escaneo_Validador_Embarque" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Evidencia Escaneo</Title><Description>Ver Evidencia Escaneo</Description><About>Esta página permite administrar toda la información relacionada con la Evidencia Escaneo.</About></update></c><c y="NodeSet" t="2022-03-09T00:13:33"><page name="Evidencia_Escaneo_Validador_Embarque" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-09T00:19:13"><page name="Log_Delivery_Procesamiento" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Log Procesamiento Delivery</Title><About>Ver Log Procesamiento Delivery</About><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-09T00:19:38"><page name="Log_Delivery_Procesamiento" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-09T00:19:52"><page name="Log_Delivery_Procesamiento" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-09T10:41:16"><page name="Resultado_Validacion_Embarque" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:41:27"><page name="Bitacora_Validador_Embarques" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:41:37"><page name="Escaneo_Validador_Embarque" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:41:47"><page name="Delivery" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:41:56"><page name="Evidencia_Escaneo_Validador_Embarque" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-09T10:42:06"><page name="Log_Delivery_Procesamiento" /><update><Roles>Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-23T23:50:50"><page name="Validar_Etiquetas" /><container id="c102" /><delete /></c><c y="NodeSet" t="2022-03-28T17:48:48"><page name="Embarques" /><update><Roles>UsuarioEmpacador,Administrador,AdministradorEmbarques</Roles></update></c><c y="NodeSet" t="2022-03-30T18:38:57"><page name="Validar_Etiquetas" /><insert type="container"><Flow>NewRow</Flow></insert></c><c y="NodeSet" t="2022-03-30T18:40:12"><page name="Validar_Etiquetas" /><container id="c102" /><insert type="dataView"><Controller>Evidencia_Escaneo_Validador_Embarque1</Controller><View>grid1</View><ShowInSummary>false</ShowInSummary><MultiSelect>false</MultiSelect><ShowActionBar>true</ShowActionBar><ShowDescription>true</ShowDescription><ShowViewSelector>true</ShowViewSelector><ShowSearchBar>true</ShowSearchBar><ShowQuickFind>true</ShowQuickFind><SearchByFirstLetter>false</SearchByFirstLetter><ShowRowNumber>false</ShowRowNumber><ShowPager>Bottom</ShowPager><ShowPageSize>true</ShowPageSize><ShowModalForms>false</ShowModalForms><SearchOnStart>false</SearchOnStart><ShowDetailsInListMode>true</ShowDetailsInListMode><AutoHighlightFirstRow>false</AutoHighlightFirstRow><AutoSelectFirstRow>false</AutoSelectFirstRow><FilterSource>view1</FilterSource><FilterFields>Transaccion_Escaneo</FilterFields><AutoHide>Nothing</AutoHide></insert></c><c y="NodeSet" t="2022-03-30T18:44:02"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><StartCommandName>Edit</StartCommandName><StartCommandArgument>editForm1</StartCommandArgument></update></c><c y="NodeSet" t="2022-03-30T18:47:40"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><StartCommandName /></update></c><c y="NodeSet" t="2022-03-30T23:29:59"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><StartCommandArgument /></update></c><c y="NodeSet" t="2022-03-30T23:39:32"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-03-31T15:04:08"><page name="Catalogo_Aplicacion" /><move><page name="Almacen" /></move></c><c y="NodeSet" t="2022-03-31T15:04:16"><page name="Planeador" /><before><page name="Almacen" /></before></c><c y="NodeSet" t="2022-03-31T15:05:38"><page name="Almacen" /><update><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Title>Almacén</Title><Description>Ver Almacén</Description><About>Esta página permite administrar toda la información relacionada con el Almacén</About><Roles>Administrador</Roles></update></c><c y="NodeSet" t="2022-03-31T15:06:18"><page name="Almacen" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-31T19:38:10"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><MultiSelect>true</MultiSelect></update></c><c y="NodeSet" t="2022-03-31T19:44:34"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><MultiSelect>false</MultiSelect></update></c><c y="NodeSet" t="2022-03-31T19:46:51"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c><c y="NodeSet" t="2022-03-31T20:31:21"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Roles /></update></c><c y="NodeSet" t="2022-03-31T20:50:39"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><VisibleWhen>$app.touch.dataView()._lastCommandArgument == 'editForm1'</VisibleWhen></update></c><c y="NodeSet" t="2022-03-31T20:57:09"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><VisibleWhen /></update></c><c y="NodeSet" t="2022-03-31T21:39:13"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Roles>hidden</Roles></update></c><c y="NodeSet" t="2022-04-01T09:27:29"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag><MultiSelect>true</MultiSelect></update></c><c y="NodeSet" t="2022-04-01T09:35:53"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none,
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:36:15"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none,
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:38:35"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none,
multi-select-hide
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:40:07"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:45:04"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:46:34"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T09:49:58"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag><MultiSelect>false</MultiSelect></update></c><c y="NodeSet" t="2022-04-01T09:58:07"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T10:01:45"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T10:03:53"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T10:16:24"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T11:35:36"><page name="Validar_Etiquetas" /><dataView id="view1" /><update><Tag>view-style-grid, 
view-style-list-disabled, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none,
multi-select-none
</Tag></update></c><c y="NodeSet" t="2022-04-01T17:03:09"><page name="Validar_Etiquetas" /><dataView id="view2" /><update><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none </Tag></update></c></log></logs>