<?xml version="1.0" encoding="utf-8"?><logs><log type="Controllers"><c y="NodeSet" t="2022-05-18T15:35:11"><controller name="Etiqueta_Embarque1" /><clone /></c><c y="NodeSet" t="2022-05-18T15:48:22"><controller name="Etiqueta_Embarque_Detalle1" /><clone /></c><c y="NodeSet" t="2022-05-19T12:08:47"><controller name="Etiqueta_Embarque1_1" /><actionGroup id="ag1" /><action id="a3" /><update><Data>UPDATE APP.Etiqueta_Embarque SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:09:09"><controller name="Etiqueta_Embarque1_1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:09:43"><controller name="Etiqueta_Embarque1_1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:10:02"><controller name="Etiqueta_Embarque1_1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId,
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Id = @Etiqueta_Embarque_Id
</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:10:19"><controller name="Etiqueta_Embarque_Detalle1_1" /><actionGroup id="ag1" /><action id="a3" /><update><Data>UPDATE APP.Etiqueta_Embarque_Detalle SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Detalle_Id = @Etiqueta_Embarque_Detalle_Id</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:10:31"><controller name="Etiqueta_Embarque_Detalle1_1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque_Detalle SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Detalle_Id = @Etiqueta_Embarque_Detalle_Id</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:10:52"><controller name="Etiqueta_Embarque_Detalle1_1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque_Detalle SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Detalle_Id = @Etiqueta_Embarque_Detalle_Id
</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T12:11:12"><controller name="Etiqueta_Embarque_Detalle1_1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>UPDATE APP.Etiqueta_Embarque_Detalle SET Estatus_Registro_Id = 3, Actualizado_Por_Id = @BusinessRules_UserId, 
Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE Etiqueta_Embarque_Detalle_Id = @Etiqueta_Embarque_Detalle_Id</Data><Roles>administrador,UsuarioEtiquetaEmbarque,UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-19T15:21:26"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><insert type="category"><HeaderText>Primera Validacion</HeaderText></insert></c><c y="NodeSet" t="2022-05-19T15:21:46"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><insert type="category"><HeaderText>Segunda validacion</HeaderText></insert></c><c y="NodeSet" t="2022-05-19T15:25:00"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><insert type="category"><HeaderText>Tercera validacion</HeaderText></insert></c><c y="NodeSet" t="2022-05-19T15:25:08"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /></before></c><c y="NodeSet" t="2022-05-19T15:25:12"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /></before></c><c y="NodeSet" t="2022-05-19T15:26:21"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><update><HeaderText>Primera Validación</HeaderText></update></c><c y="NodeSet" t="2022-05-19T15:26:32"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><update><HeaderText>Segunda Validación</HeaderText></update></c><c y="NodeSet" t="2022-05-19T15:26:38"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><update><HeaderText>Tercera Validación</HeaderText></update></c><c y="NodeSet" t="2022-05-19T15:28:36"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><rename>c6</rename></c><c y="NodeSet" t="2022-05-19T15:28:44"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><rename>c2</rename></c><c y="NodeSet" t="2022-05-19T15:28:51"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><rename>c3</rename></c><c y="NodeSet" t="2022-05-19T15:29:59"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionUno" /></move></c><c y="NodeSet" t="2022-05-19T15:30:18"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><dataField fieldName="Material_Tarima" /></move></c><c y="NodeSet" t="2022-05-19T15:30:27"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><dataField fieldName="Sales_Order_Uno" /></move></c><c y="NodeSet" t="2022-05-19T15:30:37"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c2" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c2" /><dataField fieldName="Sales_Item_Uno" /></move></c><c y="NodeSet" t="2022-05-19T15:31:26"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Delivery_Delivery" /></move></c><c y="NodeSet" t="2022-05-19T15:31:54"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionDos" /></move></c><c y="NodeSet" t="2022-05-19T15:32:13"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Material_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-05-19T15:32:23"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Sales_Order_Dos" /></move></c><c y="NodeSet" t="2022-05-19T15:32:30"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="Sales_Item_Dos" /></move></c><c y="NodeSet" t="2022-05-19T15:33:04"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Packing" /></move></c><c y="NodeSet" t="2022-05-19T15:33:19"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Item_Packing" /></move></c><c y="NodeSet" t="2022-05-19T15:33:30"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Delivery_Packing_List" /></move></c><c y="NodeSet" t="2022-05-19T15:34:33"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionTres" /></move></c><c y="NodeSet" t="2022-05-19T15:34:50"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Order_Tres" /></move></c><c y="NodeSet" t="2022-05-19T15:35:00"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Sales_Item_Tres" /></move></c><c y="NodeSet" t="2022-05-19T15:35:09"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Material_Tarima_Tres" /></move></c><c y="NodeSet" t="2022-05-19T15:35:25"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Cantidad_Material" /></move></c><c y="NodeSet" t="2022-05-19T15:37:38"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><insert type="category"><HeaderText>Resultado</HeaderText></insert></c><c y="NodeSet" t="2022-05-19T15:37:42"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c6" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /></before></c><c y="NodeSet" t="2022-05-19T15:38:25"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Resultado_Validacion" /></move></c><c y="NodeSet" t="2022-05-19T15:43:20"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-19T15:43:25"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Resultado_Validacion" /></move></c><c y="NodeSet" t="2022-05-19T15:43:54"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Mostrar_Campos_Sistema" /></move></c><c y="NodeSet" t="2022-05-19T15:43:58"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Seccion_Capturada" /></move></c><c y="NodeSet" t="2022-05-19T15:44:04"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Transaccion_Escaneo" /></move></c><c y="NodeSet" t="2022-05-19T15:44:12"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Folio_Escaneo_Anterior" /></move></c><c y="NodeSet" t="2022-05-19T15:44:22"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Folio_Escaneo_Id" /></move></c><c y="NodeSet" t="2022-05-19T15:44:30"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Captura_Iniciada" /></move></c><c y="NodeSet" t="2022-05-19T15:44:33"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c4" /><dataField fieldName="Mensaje_Sistema_Id" /></move></c><c y="NodeSet" t="2022-05-19T15:53:40"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><delete /></c><c y="NodeSet" t="2022-05-19T15:55:10"><controller name="Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Edit</CommandName><Phase>After</Phase><Script>console.log("Edit After JS")</Script></insert></c><c y="NodeSet" t="2022-05-19T15:56:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><CommandName>Select</CommandName><CommandArgument>editForm1</CommandArgument></update></c><c y="NodeSet" t="2022-05-19T16:14:33"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>console.log("Edit After JS")
[Folio_Etiqueta_Embarque_SeccionTres] = [Etiqueta_Embarque_Detalle_Id];</Script></update></c><c y="NodeSet" t="2022-05-19T16:18:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><View>editForm1</View><Script>console.log("Edit After JS")
[Folio_Etiqueta_Embarque_SeccionTres] = [Etiqueta_Embarque_Detalle_Id];</Script></update></c><c y="NodeSet" t="2022-05-19T16:21:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>console.log("Edit After JS")
$app.input.execute({
    values: [
        { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
    ]
});
</Script></update></c><c y="NodeSet" t="2022-05-19T16:23:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>console.log("Edit After JS")
$app.input.execute({
    values: [
        { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
    ]
    ,raiseCalculate: false
});
</Script></update></c><c y="NodeSet" t="2022-05-19T16:23:30"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>console.log("Edit After JS")
$app.input.execute({
    values: [
        { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
    ]
    ,raiseCalculate: false
});
</Script></update></c><c y="NodeSet" t="2022-05-19T17:13:34"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>debug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        debug('No se seleccionó la seccio capturada')
        break;
}
</Script></update></c><c y="NodeSet" t="2022-05-19T17:15:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}


</Script></update></c><c y="NodeSet" t="2022-05-19T17:41:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque] + '';
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}
</Script></update></c><c y="NodeSet" t="2022-05-19T17:42:49"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque] + '';
fnDebug('_SOrde_SItem_Emabarque');
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}
</Script></update></c><c y="NodeSet" t="2022-05-19T17:44:23"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque] + '';
fnDebug('_SOrde_SItem_Emabarque', _SOrde_SItem_Emabarque);
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}
</Script></update></c><c y="NodeSet" t="2022-05-19T17:45:24"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque] + '';
fnDebug(_SOrde_SItem_Emabarque);
arraySOEmbarque = _SOrde_SItem_Emabarque.splite("/");
_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}
</Script></update></c><c y="NodeSet" t="2022-05-19T17:47:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
fnDebug(_SOrde_SItem_Emabarque);
arraySOEmbarque = _SOrde_SItem_Emabarque.toString().splite("/");

_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}

</Script></update></c><c y="NodeSet" t="2022-05-19T17:51:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


_SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
console.log(typeof _SOrde_SItem_Emabarque)
fnDebug(_SOrde_SItem_Emabarque);
arraySOEmbarque = _SOrde_SItem_Emabarque.toString().splite("/");

_Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
_Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}

</Script></update></c><c y="NodeSet" t="2022-05-19T17:56:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
console.log(typeof _SOrde_SItem_Emabarque)
fnDebug(_SOrde_SItem_Emabarque);
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().splite("/");

var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}

</Script></update></c><c y="NodeSet" t="2022-05-19T18:06:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
console.log(typeof _SOrde_SItem_Emabarque)
fnDebug(_SOrde_SItem_Emabarque);
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().splite('/');

var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}

</Script></update></c><c y="NodeSet" t="2022-05-19T18:11:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var _Seccion_Capturada = [Seccion_Capturada];


var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
console.log(typeof _SOrde_SItem_Emabarque)
fnDebug(_SOrde_SItem_Emabarque);
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');

var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}

</Script></update></c><c y="NodeSet" t="2022-05-19T18:16:25"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
            ,raiseCalculate: false
        });
        break;
    default:
        fnDebug('No se seleccionó la seccio capturada')
        break;
}


</Script></update></c><c y="NodeSet" t="2022-05-20T07:59:37"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><Roles /></update></c><c y="NodeSet" t="2022-05-20T08:00:21"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><WhenLastCommandName>Edit</WhenLastCommandName><WhenLastCommandArgument>editForm1</WhenLastCommandArgument></update></c><c y="NodeSet" t="2022-05-20T08:05:15"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><WhenLastCommandName /></update></c><c y="NodeSet" t="2022-05-20T08:19:15"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><copy><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a6" /></copy></c><c y="NodeSet" t="2022-05-20T08:21:07"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a107" /><copy><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a104" /></copy></c><c y="NodeSet" t="2022-05-20T08:21:30"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a108" /><update><WhenLastCommandArgument /></update></c><c y="NodeSet" t="2022-05-20T08:24:06"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a108" /><copy><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a103" /></copy></c><c y="NodeSet" t="2022-05-20T08:24:17"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a109" /><update><WhenLastCommandArgument /></update></c><c y="NodeSet" t="2022-05-20T08:31:02"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><update><Visibility>false</Visibility></update></c><c y="NodeSet" t="2022-05-20T08:39:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")

var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);

var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}











</Script></update></c><c y="NodeSet" t="2022-05-20T08:41:02"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);











</Script></update></c><c y="NodeSet" t="2022-05-20T08:49:58"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><dataField fieldName="Delivery_Packing_List" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="Delivery_SeccionTres" /></move></c><c y="NodeSet" t="2022-05-20T09:11:43"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? arraySOEmbarque[0] : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? arraySOEmbarque[1] : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);



</Script></update></c><c y="NodeSet" t="2022-05-20T09:22:11"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a109" /><move><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a108" /></move></c><c y="NodeSet" t="2022-05-20T09:25:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
[Delivery_SeccionTres] = [Delivery_Packing_List];


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-05-20T09:36:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
     {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        Ya no se escanea junto la Sales Order y Sales item

        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima' });
                //  this.result.focus('SOrde_SItem_Tarima', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/

        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        /*
        if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Dos' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

      /*  if (_SOrden_SItem_PackingLIst !== undefined) {
            if (_SOrden_SItem_PackingLIst.includes('/') === true &amp;&amp; ((_SOrden_SItem_PackingLIst.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin de Packing incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Packing_List' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/


        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

     /*   if (_SOrden_SItem_Tarima !== undefined) {
            if (_SOrden_SItem_Tarima.includes('/') === true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros)) {
                _Validar = 1;
            }//if(_SOrden_SItem_Tarima.includes('/')===true &amp;&amp; ((_SOrden_SItem_Tarima.replace(/ /g, "")).replace('/', "")).match(soloNumeros) )

            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Estructura de SO/Lin incorrecta.');
                $app.input.focus({ fieldName: 'SOrde_SItem_Tarima_Tres' });
                //this.result.focus('SOrde_SItem_Tarima_Dos', 'Estructura de SO/Lin incorrecta.');
            }
        }// if(_SOrden_SItem_Tarima.match !== undefined)*/
        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)

}
</Script></update></c><c y="NodeSet" t="2022-05-20T09:49:37"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);











</Script></update></c><c y="NodeSet" t="2022-05-20T09:51:48"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);











</Script></update></c><c y="NodeSet" t="2022-05-20T09:56:07"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:
        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: '' } // Pendiente obtener
                ,{ name: 'Sales_Item_Packing', value: '' } // Pendiente obtener
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);











</Script></update></c><c y="NodeSet" t="2022-05-20T10:47:04"><controller name="Escaneo_Validador_Embarque1" /><field name="Sorder_Sitem_Packing_List" /><update><Label>Sorder/Sitem (Packing List)</Label></update></c><c y="NodeSet" t="2022-05-20T10:48:02"><controller name="Escaneo_Validador_Embarque" /><field name="Sorder_Sitem_Packing_List" /><update><Label>Sorder/Sitem (Packing List)</Label></update></c><c y="NodeSet" t="2022-05-20T10:52:55"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);
</Script></update></c><c y="NodeSet" t="2022-05-20T11:05:53"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);
</Script></update></c><c y="NodeSet" t="2022-05-20T11:06:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId);
</Script></update></c><c y="NodeSet" t="2022-05-20T11:08:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id] }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id] }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T11:10:44"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Emabarque = [SOrde_SItem_Emabarque];
var arraySOEmbarque = _SOrde_SItem_Emabarque.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T11:51:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : null;
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : null;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : null;
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : null;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T12:54:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
            
                break;
            case 3:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-20T13:03:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Etiqueta_Embarque_Detalle_Id', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
        
        



    }

}
</Script></update></c><c y="NodeSet" t="2022-05-20T13:09:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T13:11:04"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
fnDebug(_Sales_Order_Tarima);
fnDebug(_Sales_Item_Tarima);

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T13:14:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
fnDebug(_Sales_Order_Tarima);
fnDebug(_Sales_Item_Tarima);

_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T13:16:19"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Embarque', value: [Material_Embarque] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Embarque] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Embarque] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T13:28:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Etiqueta_Embarque_Detalle_Id].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T17:50:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-20T18:00:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
console.log('Prueba BR');
var _Seccion_Capturada = [Seccion_Capturada];
console.log('_Seccion_Capturada', _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
        
        



    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T12:08:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}


fnDebug(this.arguments());

// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            $app.input.execute({
                                values: [
                                    // Seccion 1
                                    { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                                    , { name: 'SOrde_SItem_Tarima', value: null }
                                    , { name: 'Material_Tarima', value: null }
                                    , { name: 'Sales_Order_Uno', value: null }
                                    , { name: 'Sales_Item_Uno', value: null }
                                    // Seccion 2
                                    , { name: 'Delivery_Delivery', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                                    , { name: 'Material_Tarima_Dos', value: null }
                                    , { name: 'Sales_Order_Dos', value: null }
                                    , { name: 'Sales_Item_Dos', value: null }
                                    // Seccion 3
                                    , { name: 'SOrde_SItem_Packing_List', value: null }
                                    , { name: 'Delivery_Packing_List', value: null }
                                    , { name: 'Delivery_SeccionTres', value: null }
                                    , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                                    , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                                    , { name: 'Material_Tarima_Tres', value: null }
                                    , { name: 'Cantidad_Material', value: null }
                                    , { name: 'Sales_Order_Tres', value: null }
                                    , { name: 'Sales_Item_Tres', value: null }
                                    , { name: 'Sales_Order_Packing', value: null }
                                    , { name: 'Sales_Item_Packing', value: null }
                                    // resultados
                                    , { name: 'Resultado_Validacion', value: null }
                                    //   ,{ name: 'Transaccion_Escaneo', value: null }
                                    , { name: 'Folio_Escaneo_Id', value: null }
                                    , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    , { name: 'Captura_Iniciada', value: false }
                                ]
                                ,raiseCalculate: false
                            });
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                        function(){ fnDebug('OK'); }
                        , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
        
        



    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T12:22:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                console.log("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                console.log("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
            //console.log(_Sales_Order_Uno);
            //console.log(_Sales_Item_Uno);
            //console.log(_SOrden_SItem_Tarima);
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            console.log("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            console.log("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                // console.log("no numerico");
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            //Realiza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            //     ,raiseCalculate: false
                            // });
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            //     ,raiseCalculate: false
                            // });
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                console.log("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        console.log(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
        
        



    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T13:28:17"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
var _Seccion_Capturada = [Seccion_Capturada];
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Material_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
[Delivery_SeccionTres] = [Delivery_Packing_List];

if (_Seccion_Capturada !== undefined) {
    if (_Seccion_Capturada === 1) {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)



    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se solicitó por usuario que el campo se omita
        _Delivery = [Delivery_SeccionTres];
        // obtener datos de la seccion1 pero en la seccion 3
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {
        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            // });

                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }


                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            // });
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }

                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');

                            }).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T13:51:03"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',

                                filter: [
                                    //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            //Realiza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            // });
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }

                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            // $app.input.execute({
                            //     values: [
                            //         // Seccion 1
                            //         { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                            //         , { name: 'SOrde_SItem_Tarima', value: null }
                            //         , { name: 'Material_Tarima', value: null }
                            //         , { name: 'Sales_Order_Uno', value: null }
                            //         , { name: 'Sales_Item_Uno', value: null }
                            //         // Seccion 2
                            //         , { name: 'Delivery_Delivery', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                            //         , { name: 'Material_Tarima_Dos', value: null }
                            //         , { name: 'Sales_Order_Dos', value: null }
                            //         , { name: 'Sales_Item_Dos', value: null }
                            //         // Seccion 3
                            //         , { name: 'SOrde_SItem_Packing_List', value: null }
                            //         , { name: 'Delivery_Packing_List', value: null }
                            //         , { name: 'Delivery_SeccionTres', value: null }
                            //         , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                            //         , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                            //         , { name: 'Material_Tarima_Tres', value: null }
                            //         , { name: 'Cantidad_Material', value: null }
                            //         , { name: 'Sales_Order_Tres', value: null }
                            //         , { name: 'Sales_Item_Tres', value: null }
                            //         , { name: 'Sales_Order_Packing', value: null }
                            //         , { name: 'Sales_Item_Packing', value: null }
                            //         // resultados
                            //         , { name: 'Resultado_Validacion', value: null }
                            //         //   ,{ name: 'Transaccion_Escaneo', value: null }
                            //         , { name: 'Folio_Escaneo_Id', value: null }
                            //         , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            //         , { name: 'Captura_Iniciada', value: false }
                            //     ]
                            // });
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        /* alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                                         function(){ fnDebug('OK'); }
                                         , function(){ fnDebug('CANCEL');});*/
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
    /*else
    {
    $app.alert ( '´Capture la información requerida para la validación.');
    
    } */
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T14:32:45"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    console.log("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    console.log("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                console.log(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',
                                filter: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });

                            // if(viewName == 'FormNuevo') {
                            //     fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            // }
                            fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);
                        }
                        , function () {
                            fnDebug('CANCEL');
                            
                            // if(viewName == 'FormNuevo') {
                            fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);
                            // }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            }
            else {
                console.log("ELSE");

            }

        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T14:40:14"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',
                                filter: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                ]
                            });
                            // if(viewName == 'FormNuevo') {
                            //     fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            // }
                            // fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                $app.touch.show({
                                    controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                    startCommand: 'New',
                                    startArgument: 'createForm2',

                                    filter: [
                                        //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                    ],
                                    defaultValues: [
                                        { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                        ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                    ]
                                });

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T14:48:10"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Resultado_Validacion" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-22T14:48:34"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T14:49:19"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Seccion_Capturada" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T14:49:28"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Seccion_Capturada" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T14:49:51"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Transaccion_Escaneo" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T14:50:10"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><ReadOnly>true</ReadOnly><TextMode>Static</TextMode><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T14:51:06"><controller name="Escaneo_Validador_Embarque1" /><field name="Resultado_Validacion" /><update><Label>Resultado Validación</Label></update></c><c y="NodeSet" t="2022-05-22T14:51:23"><controller name="Escaneo_Validador_Embarque1" /><field name="Transaccion_Escaneo" /><update><Label>Transacción Escaneo</Label></update></c><c y="NodeSet" t="2022-05-22T14:53:16"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><update><FilterExpression>Estatus_Registro_Id &lt;&gt; 0 AND Creado_Por_Id =  @BusinessRules_UserId AND Seccion_Capturada &gt; 0</FilterExpression></update></c><c y="NodeSet" t="2022-05-22T15:34:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            // $app.touch.show({
                            //     controller: 'Evidencia_Escaneo_Validador_Embarque1',
                            //     startCommand: 'New',
                            //     startArgument: 'createForm2',
                            //     filter: [
                            //         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            //     ],
                            //     defaultValues: [
                            //         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            //         , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                            //     ]
                            // });
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            // if(viewName == 'FormNuevo') {
                            //     fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            // }
                            // fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                //Genera create de evidencias
                                // $app.touch.show({
                                //     controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                //     startCommand: 'New',
                                //     startArgument: 'createForm2',

                                //     filter: [
                                //         //  { name: 'Escaneo_Validador_Embarque_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                                //         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }

                                //     ],
                                //     defaultValues: [
                                //         { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                //         ,{ name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }

                                //     ]
                                // });
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);

                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });


                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');

}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T15:42:35"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-22T16:02:58"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var agregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T16:05:42"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T16:11:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T16:18:16"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            // fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            $app.touch.show({
                                controller: 'Evidencia_Escaneo_Validador_Embarque1',
                                startCommand: 'New',
                                startArgument: 'createForm2',
                                filter: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                ],
                                defaultValues: [
                                    { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                                    , { name: 'EscaneoValidadorEmbarqueId', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }    
                                ]
                            });
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T16:59:25"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Transaccion_Escaneo" /></move></c><c y="NodeSet" t="2022-05-22T16:59:41"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Transaccion_Escaneo" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T17:05:46"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T17:31:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: [Folio_Etiqueta_Embarque_Detalle].toString() }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-22T17:36:26"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-22T17:37:00"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T17:37:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-22T17:37:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
</Script></update></c><c y="NodeSet" t="2022-05-22T18:46:47"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Es_Correcto" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T18:46:56"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Es_Incorrecto" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T18:47:03"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Es_Correcto_En_Progreso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T18:47:10"><controller name="Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-22T18:47:59"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:47:59"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:00"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:03"><controller name="Escaneo_Validador_Embarque" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:14"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:14"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:15"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:17"><controller name="Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:26"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:27"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:27"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:30"><controller name="Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:56"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:56"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:48:56"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:03"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:13"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:13"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:13"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:18"><controller name="Escaneo_Validador_Embarque1" /><view id="Escaneo_Validador_Embarque_LookUp_List" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:45"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:46"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:49:51"><controller name="Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:50:05"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Es_Correcto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:50:05"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Es_Incorrecto" /><delete /></c><c y="NodeSet" t="2022-05-22T18:50:06"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Es_Correcto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T18:50:10"><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><delete /></c><c y="NodeSet" t="2022-05-22T21:50:17"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><WhenClientScript>[Es_Correcto_En_Progreso] == true || [Es_Incorrecto_En_Progreso] == true</WhenClientScript></update></c><c y="NodeSet" t="2022-05-22T22:03:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
BotonCerrarPersonalizado();
</Script></update></c><c y="NodeSet" t="2022-05-22T22:18:36"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
BotonCerrarPersonalizado();
</Script></update></c><c y="NodeSet" t="2022-05-22T22:23:28"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a105"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a108"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
fnPersonalizarBtnCloseEdit();
</Script></update></c><c y="NodeSet" t="2022-05-22T22:26:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a108"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a105"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
fnPersonalizarBtnCloseEdit();
</Script></update></c><c y="NodeSet" t="2022-05-23T00:24:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) {//console.log("null pack");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:39:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:44:10"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:46:47"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDEbug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDEbug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDEbug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:48:11"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDEbug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:50:06"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T00:52:41"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Delivery_SeccionTres" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T00:58:51"><controller name="Escaneo_Validador_Embarque1" /><rule id="r105" /><update><Script>// calculate Mercedes

this.preventDefault();
fnDebug('Calculate');
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId) =&gt; {
    $app.input.execute({
        values: [
            // Seccion 1
            { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
            , { name: 'SOrde_SItem_Tarima', value: null }
            , { name: 'Material_Tarima', value: null }
            , { name: 'Sales_Order_Uno', value: null }
            , { name: 'Sales_Item_Uno', value: null }
            // Seccion 2
            , { name: 'Delivery_Delivery', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
            , { name: 'SOrde_SItem_Tarima_Dos', value: null }
            , { name: 'Material_Tarima_Dos', value: null }
            , { name: 'Sales_Order_Dos', value: null }
            , { name: 'Sales_Item_Dos', value: null }
            // Seccion 3
            , { name: 'SOrde_SItem_Packing_List', value: null }
            , { name: 'Delivery_Packing_List', value: null }
            , { name: 'Delivery_SeccionTres', value: null }
            , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
            , { name: 'SOrde_SItem_Tarima_Tres', value: null }
            , { name: 'Material_Tarima_Tres', value: null }
            , { name: 'Cantidad_Material', value: null }
            , { name: 'Sales_Order_Tres', value: null }
            , { name: 'Sales_Item_Tres', value: null }
            , { name: 'Sales_Order_Packing', value: null }
            , { name: 'Sales_Item_Packing', value: null }
            // resultados
            , { name: 'Resultado_Validacion', value: null }
            //   ,{ name: 'Transaccion_Escaneo', value: null }
            , { name: 'Folio_Escaneo_Id', value: null }
            , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
            , { name: 'Captura_Iniciada', value: false }
        ]
        ,raiseCalculate: false
    });
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    return $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }    
        ]
    });
}



// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
fnDebug('_Delivery_Packing_List: ' + [Delivery_Packing_List]);
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});
fnDebug('Delivery_SeccionTres: ' + [Delivery_SeccionTres]);


if (_Seccion_Capturada !== undefined) 
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        //Validar formato de datos de sección.
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                fnDebug("Es numérico");
            }
            else {
                //console.log  ("No es numérico");
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)
        
        if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
        {
            if (_Sales_Order_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
        {
            if (_Sales_Item_Uno.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Itemo' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
        {
             _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                fnDebug("Material valido ");
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima' });
                // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Folio_Etiqueta_Embarque !== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima == null) {
            _Validar = 0;
        }//  if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)


    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];
        if (_Delivery !== undefined) { //console.log ("Variable sin definir");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                $app.input.focus({ fieldName: 'Delivery_Delivery' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
        {
            if (_Sales_Order_Dos.match(soloNumeros)) {
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
        {
            if (_Sales_Item_Dos.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
         if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
         {
             _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
             _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)
        // El resto de campos queda null
        if (_Delivery == null || _Folio_Etiqueta_Embarque == null &amp;&amp; _Delivery !== null) {
            fnDebug("null");
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)

    }//if(_Seccion_Capturada === 2){

    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = _Delivery_Packing_List; // [Delivery_SeccionTres];
        fnDebug('_Delivery: '+ _Delivery)
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];

        if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
        {
            if (_Sales_Order_Packing.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
        {
            if (_Sales_Item_Packing.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
        {
             _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
             _Validar=1;
        }

        if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
            if (_Delivery_Packing_List.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)

        if (_Delivery !== undefined) {
            fnDebug("DElivery 2");
            if (_Delivery.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
            }
        } //if ( _Delivery  !== undefined)
        if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
            if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
            }
        } //if (_Folio_Etiqueta_Embarque !== undefined)

        if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
        {
            if (_Sales_Order_Tres.match(soloNumeros)) {
              //  console.log("Es numérica la Sales Order");
                _Validar = 1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
            }
        }// if(_Sales_Order_Uno.match !== undefined)
        if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
        {
            if (_Sales_Item_Tres.match(soloNumeros)) {
                _Validar=1;
            }
            else 
            {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
            }
        }// if (_Sales_Item_Uno !== undefined) 
        if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
        {
            _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
            _Validar=1;
        }

        if (_Material_Tarima !== undefined) {
            // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
            if (_Material_Tarima.length &lt;= 18) {
                _Validar = 1;
            }
            else {
                _Validar = 0;
                alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
            }
        }//if(_Material_Tarima.match !== undefined)

        if (_SOrden_SItem_PackingLIst == null &amp;&amp; _Delivery_Packing_List == null &amp;&amp; _Delivery == null || 
            _SOrden_SItem_PackingLIst !== null &amp;&amp; _Delivery_Packing_List !== null &amp;&amp; _Delivery == null) 
        {//console.log("null pack");
            fnDebug('_SOrden_SItem_PackingLIst: ' + _SOrden_SItem_PackingLIst);
            fnDebug('_Delivery_Packing_List: ' + _Delivery_Packing_List);
            fnDebug('_Delivery: ' + _Delivery);
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null)
    }//if(_Seccion_Capturada === 3){
    
    fnDebug('Validar: ' + _Validar);

    if (_Validar == 1) {

        validaretiquetasSinObligatoriedad(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , _Validar
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            //Genera create de evidencias
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            //Realiza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            
                        }
                        , function () {
                            fnDebug('CANCEL');
                            //No desea evidencias raliza limpieza de campos
                            if(viewName == 'FormNuevo') {
                                fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                    //  alertify.confirm('labels changed!').set('labels', {ok:'Alright!', cancel:'Naa!'}); 
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion, function () { fnDebug('OK'); });

                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });

                }


            } else {
                fnDebug("ELSE");
            }

        });
    }//if(_Validar=1)\
    else {
        // No se invoca al SP, pero si se realizaron cambios en los primeros campos, se debe guardar en la base de datos

        _Sales_Order_Uno = (_Sales_Order_Uno == undefined) ? '' : _Sales_Order_Uno;
        _Sales_Item_Uno = (_Sales_Item_Uno == undefined) ? '' : _Sales_Item_Uno;

        switch (_Seccion_Capturada) {
            case 1:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
                
                break;
            case 2:
                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        // { name: 'Cantidad_Material', newValue: _Cantidad },
                        // { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                })
            
                break;
            case 3:
                _Sales_Order_Packing = (_Sales_Order_Packing == undefined) ? '' : _Sales_Order_Packing;
                _Sales_Item_Packing = (_Sales_Item_Packing == undefined) ? '' : _Sales_Item_Packing;

                $app.execute({
                    controller: 'Escaneo_Validador_Embarque1',
                    command: 'Update',
                    values: [
                        { name: 'Escaneo_Validador_Embarque_Id', value: _Folio_Escaneo_Id },
                        { name: 'Seccion_Capturada', newValue: _Seccion_Capturada },
                        // ------------
                        { name: 'Folio_Etiqueta_Embarque_Detalle', newValue: _Folio_Etiqueta_Embarque },
                        { name: 'Material_Tarima', newValue: _Material_Tarima },
                        { name: 'SOrde_SItem_Tarima', newValue: _Sales_Order_Uno + '/' + _Sales_Item_Uno },
                        // ------------
                        { name: 'Delivery_Delivery', newValue: _Delivery },
                        // ------------
                        { name: 'Sorder_Sitem_Packing_List', newValue: _Sales_Order_Packing + '/' + _Sales_Item_Packing },
                        { name: 'Delivery_Packing_List', newValue: _Delivery_Packing_List },
                        { name: 'Cantidad_Material', newValue: _Cantidad }
                    ],
                    done: function (result) {
                        fnDebug(result);
                    }
                });
            
                break;
        
            default:
                break;
        }
    }

}
</Script></update></c><c y="NodeSet" t="2022-05-23T01:57:47"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Delivery_SeccionTres" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T02:21:20"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-23T08:17:12"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();



$app.execute({
    controller: 'Escaneo_Validador_Embarque1'
    , command: 'Insert'
    , values: [
        { name: 'Escaneo_Validador_Embarque_Id', value: null }
        , { name: 'Transaccion_Escaneo', newValue: null }
    ]
    , done: function (result) {
        fnDebug("Insert result : ");
        fnDebug(result);

        // Consultar la transacción del rgistro creado
        $app.execute({
            controller: 'Escaneo_Validador_Embarque1',
            view: 'Escaneo_Validador_Embarque_LookUp_List',
            pageSize: 1,
            filter: [
                { field: 'Escaneo_Validador_Embarque_Id', operator: '=', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
            ],
            done: function (result) {
                fnDebug("result select:");
                fnDebug("result select Escaneo_Validador_Embarque_Id:" + result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id);
                fnDebug("result select Transaccion_Escaneo:" + result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo);

                $app.input.execute({
                    values: [
                        // Seccion 1
                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                        , { name: 'SOrde_SItem_Tarima', value: null }
                        , { name: 'Material_Tarima', value: null }
                        // Seccion 2
                        , { name: 'Delivery_Delivery', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                        , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                        , { name: 'Material_Tarima_Dos', value: null }
                        // Seccion 3
                        , { name: 'SOrde_SItem_Packing_List', value: null }
                        , { name: 'Delivery_Packing_List', value: null }
                        , { name: 'Delivery_SeccionTres', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                        , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                        , { name: 'Material_Tarima_Tres', value: null }
                        , { name: 'Cantidad_Material', value: null }
                        // resultados
                        , { name: 'Resultado_Validacion', value: null }
                        , { name: 'Transaccion_Escaneo', value: result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo }
                        , { name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id }
                        , { name: 'Folio_Escaneo_Anterior', value:  result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id}
                        , { name: 'Captura_Iniciada', value: false }
                    ]
                });


            }
        });

    }
});


// var Nueva_Transaccion = eaton.createGuid();
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', Nueva_Transaccion);



fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-05-23T08:21:53"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c3" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-05-23T08:21:56"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><dataField fieldName="Material_Tarima_Dos" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c3" /><dataField fieldName="SOrde_SItem_Tarima_Dos" /></move></c><c y="NodeSet" t="2022-05-23T08:23:15"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /></move></c><c y="NodeSet" t="2022-05-23T08:23:18"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><dataField fieldName="Sales_Order_Packing" /><before><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Packing_List" /></before></c><c y="NodeSet" t="2022-05-23T08:24:39"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="FormNuevo" /><category id="c5" /><dataField fieldName="SOrde_SItem_Tarima_Tres" /></move></c><c y="NodeSet" t="2022-05-23T08:24:43"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><dataField fieldName="Folio_Etiqueta_Embarque_SeccionTres" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c5" /><dataField fieldName="SOrde_SItem_Tarima_Tres" /></move></c><c y="NodeSet" t="2022-05-23T08:26:27"><controller name="Escaneo_Validador_Embarque1" /><rule id="r109" /><update><Script>fnDebug('START ExecJS006');
this.preventDefault();



$app.execute({
    controller: 'Escaneo_Validador_Embarque1'
    , command: 'Insert'
    , values: [
        { name: 'Escaneo_Validador_Embarque_Id', value: null }
        , { name: 'Transaccion_Escaneo', newValue: null }
    ]
    , done: function (result) {
        fnDebug("Insert result : ");
        fnDebug(result);

        // Consultar la transacción del rgistro creado
        $app.execute({
            controller: 'Escaneo_Validador_Embarque1',
            view: 'Escaneo_Validador_Embarque_LookUp_List',
            pageSize: 1,
            filter: [
                { field: 'Escaneo_Validador_Embarque_Id', operator: '=', value: result.Escaneo_Validador_Embarque1.Escaneo_Validador_Embarque_Id }
            ],
            done: function (result) {
                fnDebug("result select:");
                fnDebug("result select Escaneo_Validador_Embarque_Id:" + result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id);
                fnDebug("result select Transaccion_Escaneo:" + result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo);

                $app.input.execute({
                    values: [
                        // Seccion 1
                        { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                        , { name: 'SOrde_SItem_Tarima', value: null }
                        , { name: 'Material_Tarima', value: null }
                        , { name: 'Sales_Order_Uno', value: null }
                        , { name: 'Sales_Item_Uno', value: null }
                        // Seccion 2
                        , { name: 'Delivery_Delivery', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                        , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                        , { name: 'Material_Tarima_Dos', value: null }
                        , { name: 'Sales_Order_Dos', value: null }
                        , { name: 'Sales_Item_Dos', value: null }
                        // Seccion 3
                        , { name: 'SOrde_SItem_Packing_List', value: null }
                        , { name: 'Delivery_Packing_List', value: null }
                        , { name: 'Delivery_SeccionTres', value: null }
                        , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                        , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                        , { name: 'Material_Tarima_Tres', value: null }
                        , { name: 'Cantidad_Material', value: null }
                        , { name: 'Sales_Order_Packing', value: null }
                        , { name: 'Sales_Item_Packing', value: null }
                        , { name: 'Sales_Order_Tres', value: null }
                        , { name: 'Sales_Item_Tres', value: null }

                        // resultados
                        , { name: 'Resultado_Validacion', value: null }
                        , { name: 'Transaccion_Escaneo', value: result.Escaneo_Validador_Embarque1[0].Transaccion_Escaneo }
                        , { name: 'Folio_Escaneo_Id', value: result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id }
                        , { name: 'Folio_Escaneo_Anterior', value:  result.Escaneo_Validador_Embarque1[0].Escaneo_Validador_Embarque_Id}
                        , { name: 'Captura_Iniciada', value: false }
                    ]
                    ,raiseCalculate: false
                });


            }
        });

    }
});


// var Nueva_Transaccion = eaton.createGuid();
// $app.touch.contextDataView().updateFieldValue('Transaccion_Escaneo', Nueva_Transaccion);



fnDebug('END ExecJS006');</Script></update></c><c y="NodeSet" t="2022-05-23T08:34:03"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto_En_Progreso] == true || [Es_Incorrecto_En_Progreso] == true</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T08:34:14"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag1" /><action id="a3" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto_En_Progreso] == true || [Es_Incorrecto_En_Progreso] == true</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T08:34:32"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto_En_Progreso] == true || [Es_Incorrecto_En_Progreso] == true</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T08:34:48"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto_En_Progreso] == true || [Es_Incorrecto_En_Progreso] == true</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T08:35:07"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data></update></c><c y="NodeSet" t="2022-05-23T08:41:21"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _SOrden_SItem_Tarima == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-23T08:43:41"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        _Delivery = [Delivery_SeccionTres];
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-23T09:10:11"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Es_Correcto" /></move></c><c y="NodeSet" t="2022-05-23T09:10:11"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Es_Incorrecto" /></move></c><c y="NodeSet" t="2022-05-23T09:10:11"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Es_Correcto_En_Progreso" /></move></c><c y="NodeSet" t="2022-05-23T09:10:11"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Escaneo_Validador_Embarque1" /><field name="Es_Incorrecto_En_Progreso" /></move></c><c y="NodeSet" t="2022-05-23T09:10:18"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Correcto" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:10:24"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Incorrecto" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:10:30"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Correcto_En_Progreso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:10:36"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:10:50"><controller name="Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Es_Incorrecto_En_Progreso" /><update><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:29:56"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a1" /><update><WhenClientScript>[Es_Correcto] == false</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T09:30:04"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto] == false</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T09:30:19"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag4" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto] == false</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T09:30:36"><controller name="Escaneo_Validador_Embarque1" /><actionGroup id="ag9" /><action id="a2" /><update><Data>-- "Borrar"
UPDATE APP.Escaneo_Validador_Embarque 
SET 
   Estatus_Registro_Id = 3, 
   Actualizado_Por_Id = @BusinessRules_UserId,
   Fecha_Ultima_Actualizacion = dbo.fn_Convertir_UTC_A_Fecha_Hora_Local(GETDATE(),NULL) 
WHERE 
   Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id</Data><WhenClientScript>[Es_Correcto] == false</WhenClientScript></update></c><c y="NodeSet" t="2022-05-23T09:58:14"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><Hidden>false</Hidden><Visibility>$app.touch.contextDataView()..get_isEditing() == false</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:58:23"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><Hidden>false</Hidden><Visibility>$app.touch.contextDataView()..get_isEditing() == false</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:59:30"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Mensaje_Sistema_Id" /><update><Hidden>false</Hidden><Visibility>$app.touch.contextDataView().get_isEditing() == false</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T09:59:47"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><update><Hidden>false</Hidden><Visibility>$app.touch.contextDataView().get_isEditing() == false</Visibility><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-23T10:00:37"><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Resultado_Validacion_Embarque_Id" /><move><controller name="Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c4" /><dataField fieldName="Mensaje_Sistema_Id" /></move></c><c y="NodeSet" t="2022-05-23T10:11:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a108"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a105"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
fnPersonalizarBtnCloseEdit();
addRemplazarValoresMaterial();
</Script></update></c><c y="NodeSet" t="2022-05-23T10:13:56"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a108"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a105"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
nuevoModal = fnPersonalizarBtnCloseEdit();
if (nuevoModal != false) {
  	// cuando la funcion devuevlve un false es porque ya se agrego el boton custo, y entonces tambien los eventos
	addRemplazarValoresMaterial();
}

</Script></update></c><c y="NodeSet" t="2022-05-23T10:15:18"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a108"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a105"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
nuevoModal = fnPersonalizarBtnCloseEdit();
if (nuevoModal != false) {
  	// cuando la funcion devuevlve un false es porque ya se agrego el boton custo, y entonces tambien los eventos
	addRemplazarValoresMaterial();
}

</Script></update></c><c y="NodeSet" t="2022-05-23T11:06:29"><controller name="Escaneo_Validador_Embarque1" /><rule id="r108" /><update><Script>fnDebug("Edit After JS")


var mostrarSeccionCapturada = (categoria, SeccionCapturada) =&gt; {
    // colapsa las 3 secciones principales de captura
    fnResetSeccion_Capturada();
    // Descolapsar la seccion correcta
    grupo = document.querySelector('div[data-category="' + categoria + '"]');
    grupo.classList.remove("app-container-collapsed");
    switch (SeccionCapturada) {
        case 1:
            // document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 2:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            // document.querySelector('div[data-category="c3"]').style.display = 'none';
            document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        case 3:
            document.querySelector('div[data-category="c2"]').style.display = 'none';
            document.querySelector('div[data-category="c3"]').style.display = 'none';
            // document.querySelector('div[data-category="c5"]').style.display = 'none';
            break;
        default:
            break;
    }
}

var fnPersonalizarBtnCloseEdit = () =&gt; {
    fnDebug("Personalizando botón close...");
    // identificar el botón natural de COT y removerlo
    btn = document.querySelector('.app-btn.app-btn4.app-btn-close');
    if(!btn) return;
    padre = btn.parentNode;
    padre.removeChild(btn);
    // crear un nuevo botón muy parecido al original y agregarlo al html
    var nuevoBtn = document.createElement("span");
    nuevoBtn.className = 'custom-btn custom-btn4 custom-btn-close'
    padre.appendChild(nuevoBtn);

    var cerrar = () =&gt; {
        fnDebug("Se dió clic en el botón [X]");
        var actionPath;
        if($app.touch.contextDataView().get_isEditing() == true){
            actionPath = 'a[data-action-path="ag2/a108"]';
        } else {
            actionPath =  'a[data-action-path="ag2/a105"]'; // No se esta editando, solo visualizando la informacion
        }
        regresar = document.querySelector(actionPath);
        regresar.click()
    }

    nuevoBtn.addEventListener('click', cerrar);
    nuevoBtn.addEventListener('touchend', cerrar);

}


var _Seccion_Capturada = [Seccion_Capturada];
var _CategoryId;

var _SOrde_SItem_Tarima = [SOrde_SItem_Tarima];
var arraySOEmbarque = _SOrde_SItem_Tarima.toString().split('/');
var _Sales_Order_Tarima = (arraySOEmbarque.length &gt; 0) ? parseInt(arraySOEmbarque[0]) : '';
var _Sales_Item_Tarima = (arraySOEmbarque.length &gt; 1) ? parseInt(arraySOEmbarque[1]) : '';
_Sales_Order_Tarima = (isNaN(_Sales_Order_Tarima)) ? '' : _Sales_Order_Tarima ;
_Sales_Item_Tarima = (isNaN(_Sales_Item_Tarima)) ? '' : _Sales_Item_Tarima;

var _Folio_Etiqueta_Embarque_Detalle = [Folio_Etiqueta_Embarque_Detalle]
_Folio_Etiqueta_Embarque_Detalle = (_Folio_Etiqueta_Embarque_Detalle == undefined) ? '' : _Folio_Etiqueta_Embarque_Detalle.toString();


switch (_Seccion_Capturada) {
    case 1:
        $app.input.execute({
            values: [
                 { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: _Folio_Etiqueta_Embarque_Detalle }
                // ,{ name: 'Material_Tarima', value: [Material_Tarima] } este campo se guarda directamente en una columna de la tabla
                ,{ name: 'Sales_Order_Uno', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Uno', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c2';
        break;
    case 2:
        $app.input.execute({
            values: [
                 //  { name: 'Delivery_Delivery', value: [] } Este valor se guarda directamente en un campo de la tabla
                 { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Material_Tarima_Dos', value: [Material_Tarima] }
                ,{ name: 'Sales_Order_Dos', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Dos', value: _Sales_Item_Tarima.toString() }
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c3';
        break;
    case 3:

        // obtener datos de SalesOrder en packing list
        var _SOrde_SItem_Packing = [Sorder_Sitem_Packing_List];
        _SOrde_SItem_Packing = (_SOrde_SItem_Packing == undefined) ? '' : _SOrde_SItem_Packing ;
        var arraySOPacking = _SOrde_SItem_Packing.toString().split('/');
        var _Sales_Order_Packing = (arraySOPacking.length &gt; 0) ? parseInt(arraySOPacking[0]) : '';
        var _Sales_Item_Packing = (arraySOPacking.length &gt; 1) ? parseInt(arraySOPacking[1]) : '';
        _Sales_Order_Packing = (isNaN(_Sales_Order_Packing)) ? '' : _Sales_Order_Packing ;
        _Sales_Item_Packing = (isNaN(_Sales_Item_Packing)) ? '' : _Sales_Item_Packing;

        $app.input.execute({
            values: [
                 { name: 'Sales_Order_Packing', value: _Sales_Order_Packing.toString() }
                ,{ name: 'Sales_Item_Packing', value: _Sales_Item_Packing.toString() }
                // ,{ name: 'Delivery_Packing', value:  } // Se guarda directamente en un campo de la tabla
                ,{ name: 'Folio_Etiqueta_Embarque_SeccionTres', value: _Folio_Etiqueta_Embarque_Detalle }
                ,{ name: 'Sales_Order_Tres', value: _Sales_Order_Tarima.toString() }
                ,{ name: 'Sales_Item_Tres', value: _Sales_Item_Tarima.toString() }
                ,{ name: 'Material_Tarima_Tres', value: [Material_Tarima] }
                // ,{ name: 'Cantida_Material', value:  } // se garda directamente en el campo
                // Campos de sistema
                ,{ name: 'Folio_Escaneo_Anterior', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Folio_Escaneo_Id', value: [Escaneo_Validador_Embarque_Id] }
                ,{ name: 'Captura_Iniciada', value: true }
            ]
            ,raiseCalculate: false
        });
        _CategoryId = 'c5';
        break;
    default:
        _CategoryId = '';
        fnDebug('No se seleccionó la seccion capturada')
        break;
}


mostrarSeccionCapturada(_CategoryId, _Seccion_Capturada);
nuevoModal = fnPersonalizarBtnCloseEdit();
if (nuevoModal != false) {
  	// cuando la funcion devuevlve un false es porque ya se agrego el boton custo, y entonces tambien los eventos
	addRemplazarValoresMaterial();
}

</Script></update></c><c y="NodeSet" t="2022-05-23T13:32:32"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-23T13:33:38"><controller name="Escaneo_Validador_Embarque1" /><rule id="r103" /><update><Script>// Botón Mercedes

this.preventDefault();
fnDebug('Custom')
var _Seccion_Capturada = [Seccion_Capturada];
fnDebug('_Seccion_Capturada: ' + _Seccion_Capturada);
// aun no se ah podido determinar la seccion capturada entonces tratar de obtenerla antes de la petición
if (_Seccion_Capturada === undefined) {
    agregarEventoValidadorEmbarques();
    fnDebug('No se tiene el dato de la seccion capturada');

    // sección capturada 1
    var grupo = document.querySelector('div[data-category="c2"]');
    var clase = grupo.getAttribute('class');
    if (clase === undefined) clase = '';
    if (!clase.includes('app-container-collapsed')) {
        _Seccion_Capturada = 1;
        $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 1);
        fnDebug('Se detectó la sección 1 abierta');
    } else {

        // sección capturada 2
        grupo = document.querySelector('div[data-category="c3"]');
        clase = grupo.getAttribute('class');
        if (clase === undefined) clase = '';
        if (!clase.includes('app-container-collapsed')) {
            _Seccion_Capturada = 2;
            $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 2);
            fnDebug('Se detectó la sección 2 abierta');
        } else {

            // sección capturada 3
            grupo = document.querySelector('div[data-category="c5"]');
            clase = grupo.getAttribute('class');
            if (clase === undefined) clase = '';
            if (!clase.includes('app-container-collapsed')) {
                _Seccion_Capturada = 3;
                $app.touch.contextDataView().updateFieldValue('Seccion_Capturada', 3);
                fnDebug('Se detectó la sección 3 abierta');
            } else {
                fnDebug('NO fue posible detectar la sección');
            }
        }
    }

}

var fnLimpiarFormulario = (escaneoId, vista, resultado) =&gt; {
    if(vista == 'FormNuevo') {
        $app.input.execute({
            values: [
                // Seccion 1
                { name: 'Folio_Etiqueta_Embarque_SeccionUno', value: null }
                , { name: 'SOrde_SItem_Tarima', value: null }
                , { name: 'Material_Tarima', value: null }
                , { name: 'Sales_Order_Uno', value: null }
                , { name: 'Sales_Item_Uno', value: null }
                // Seccion 2
                , { name: 'Delivery_Delivery', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionDos', value: null }
                , { name: 'SOrde_SItem_Tarima_Dos', value: null }
                , { name: 'Material_Tarima_Dos', value: null }
                , { name: 'Sales_Order_Dos', value: null }
                , { name: 'Sales_Item_Dos', value: null }
                // Seccion 3
                , { name: 'SOrde_SItem_Packing_List', value: null }
                , { name: 'Delivery_Packing_List', value: null }
                , { name: 'Delivery_SeccionTres', value: null }
                , { name: 'Folio_Etiqueta_Embarque_SeccionTres', value: null }
                , { name: 'SOrde_SItem_Tarima_Tres', value: null }
                , { name: 'Material_Tarima_Tres', value: null }
                , { name: 'Cantidad_Material', value: null }
                , { name: 'Sales_Order_Tres', value: null }
                , { name: 'Sales_Item_Tres', value: null }
                , { name: 'Sales_Order_Packing', value: null }
                , { name: 'Sales_Item_Packing', value: null }
                // resultados
                , { name: 'Resultado_Validacion', value: null }
                //   ,{ name: 'Transaccion_Escaneo', value: null }
                , { name: 'Folio_Escaneo_Id', value: null }
                , { name: 'Folio_Escaneo_Anterior', value: escaneoId }
                , { name: 'Captura_Iniciada', value: false }
            ]
            ,raiseCalculate: false
        });
    } else if (vista == 'editForm1') {
        $app.input.execute({
             values: [ { name: 'Resultado_Validacion', value: resultado } ]
            ,raiseCalculate: false
        });        
    }
}

var fnAgregarEvidencia = (transaccion, folioEscaneo) =&gt; {
    $app.touch.show({
        controller: 'Evidencia_Escaneo_Validador_Embarque1',
        startCommand: 'New',
        startArgument: 'createForm2',
        filter: [
            { name: 'Transaccion_Escaneo', value: transaccion }
        ],
        defaultValues: [
            { name: 'Transaccion_Escaneo', value: transaccion }
            , { name: 'EscaneoValidadorEmbarqueId', value: folioEscaneo }
    
        ]
    });
}


// Declaracion de variables sistema*
var success = this.validateInput();
var commandName = this.arguments().CommandName;
var triggerFieldName = this.arguments().Trigger;
var viewName = this.arguments().View;
var _Validar = 1;
// declaracion de variables finales


// sección 1, 2, 3
var _Folio_Etiqueta_Embarque;
var _SOrden_SItem_Tarima;
var _Sales_Order_Uno;
var _Sales_Item_Uno;
var _Sales_Order_Tres;
var _Sales_Item_Tres;
var _Sales_Order_Packing;
var _Sales_Item_Packing;
var _Material_Tarima;
// Sección 2
var _Delivery;
// Exclusivos Sección 3
var _SOrden_SItem_PackingLIst;
var _Delivery_Packing_List;
var _Cantidad;
var soloNumeros = /^[0-9]+$/;
var alfanumerico = /^[A-Za-z0-9]{2,18}$/;
var _Folio_Escaneo_Id = [Folio_Escaneo_Id];
var _Transaccion_Escaneo = [Transaccion_Escaneo];

// dar valor por default delivery de sección 3 
// [Delivery_SeccionTres] = [Delivery_Packing_List];
$app.input.execute({
    values: [ { name: 'Delivery_SeccionTres', value: [Delivery_Packing_List] } ]
    ,raiseCalculate: false
});


if (_Seccion_Capturada !== undefined)
{

    if (_Seccion_Capturada === 1)
    {
        // Sección del paso uno Datos de sección
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionUno];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima];
        _Material_Tarima = [Material_Tarima];
        _Sales_Order_Uno=[Sales_Order_Uno];
        _Sales_Item_Uno=[Sales_Item_Uno];
        // El resto de campos queda null
        if (_Folio_Etiqueta_Embarque == null || _Sales_Order_Uno == null || _Sales_Item_Uno == null || _Material_Tarima == null) {
            // console.log("todo null");
            $app.alert('Error para validación 1 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque == null ||_Folio_Etiqueta_Embarque!== null &amp;&amp; _SOrden_SItem_Tarima == null &amp;&amp; _Material_Tarima==null)
        else {
            //console.log("algo capturaod");
            //Validar formato de datos de sección.
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    fnDebug("Es numérico");
                }
                else {
                    //console.log  ("No es numérico");
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionUno' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionUno', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Uno !== undefined &amp;&amp; _Sales_Order_Uno !==null) 
            {
                if (_Sales_Order_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Uno !== undefined &amp;&amp; _Sales_Item_Uno !==null) 
            {
                if (_Sales_Item_Uno.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Itemo' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Uno!== undefined &amp;&amp; _Sales_Item_Uno !== undefined &amp;&amp; _Validar == 1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Uno+'/'+_Sales_Item_Uno;
            }

            if (_Material_Tarima !== undefined) {
                // if (_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;= 18) {
                if (_Material_Tarima.length &lt;= 18) {
                    fnDebug("Material valido ");
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima' });
                    // this.result.focus('Material_Tarima', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)
        }//else
    }//if(_Seccion_Capturada === 1)

    if (_Seccion_Capturada === 2) {
        // Sección del paso dos
        _Delivery = [Delivery_Delivery];
        // Sección del paso uno pero en la sección dos
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionDos];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Dos];
        _Sales_Item_Dos=[Sales_Item_Dos];
        _Sales_Order_Dos=[Sales_Order_Dos];
        _Material_Tarima = [Material_Tarima_Dos];


        if (_Folio_Etiqueta_Embarque == null || _Delivery == null || _Sales_Order_Dos == null || _Sales_Item_Dos == null || _Material_Tarima == null) {
            $app.alert('Error para validación 2 complete los campos requeridos.');
            _Validar = 0;
        }// if(_Folio_Etiqueta_Embarque ==null || _Delivery==null||_SOrden_SItem_Tarima==null ||_Material_Tarima==null)
        else {
            if (_Delivery !== undefined) { //console.log ("Variable sin definir");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Delivery es dato númerico');
                    $app.input.focus({ fieldName: 'Delivery_Delivery' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionDos' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Dos !== undefined &amp;&amp; _Sales_Order_Dos !==null) 
            {
                if (_Sales_Order_Dos.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Dos' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Dos !== undefined &amp;&amp; _Sales_Item_Dos !==null) 
            {
                if (_Sales_Item_Dos.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Dos' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Dos!== undefined &amp;&amp; _Sales_Item_Dos !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_Tarima=_Sales_Order_Dos+'/'+_Sales_Item_Dos;
                 _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18 ){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo.');
                    $app.input.focus({ fieldName: 'Material_Tarima_Dos' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else


    }//if(_Seccion_Capturada === 2){
    
    if (_Seccion_Capturada === 3) {
        // obtener los datos del packing list
        _SOrden_SItem_PackingLIst = [SOrde_SItem_Packing_List];
        _Delivery_Packing_List = [Delivery_Packing_List];
        _Cantidad = [Cantidad_Material];
        // obtener datos del delivery en la seccion 3
        //_Delivery = [Delivery_Packing_List]; // [Delivery_SeccionTres]; Se pidio por el usuario que este campo se omita en la sección tres
        // obtener datos de la seccion1 pero en la seccion 3
        // _Delivery = [Delivery_SeccionTres];
        _Delivery = _Delivery_Packing_List;
        _Folio_Etiqueta_Embarque = [Folio_Etiqueta_Embarque_SeccionTres];
        _SOrden_SItem_Tarima = [SOrde_SItem_Tarima_Tres];
        _Material_Tarima = [Material_Tarima_Tres];
        _Sales_Item_Tres=[Sales_Item_Tres];
        _Sales_Order_Tres=[Sales_Order_Tres];
        _Sales_Order_Packing=[Sales_Order_Packing];
        _Sales_Item_Packing=[Sales_Item_Packing];



        if (_Sales_Order_Packing == null ||_Sales_Item_Packing == null || _Delivery_Packing_List == null || _Delivery == null || _Folio_Etiqueta_Embarque == null || _Sales_Order_Tres == null ||_Sales_Item_Tres == null || _Material_Tarima == null) {
            $app.alert('Error para validación 3 complete los campos requeridos.');
            _Validar = 0;
        }// if(_SOrden_SItem_PackingLIst==null||_Delivery_Packing_List==null||_Delivery==null||_Folio_Etiqueta_Embarque==null||_SOrden_SItem_Tarima==null||_Material_Tarima==null)
        else {
            if (_Sales_Order_Packing !== undefined &amp;&amp; _Sales_Order_Packing !==null) 
            {
                if (_Sales_Order_Packing.match(soloNumeros)) {
                  //  console.log("Es numérica la Sales Order");
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Packing' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Packing !== undefined &amp;&amp; _Sales_Item_Packing !==null) 
            {
                if (_Sales_Item_Packing.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Packing es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Packing' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
             if(_Sales_Order_Packing!== undefined &amp;&amp; _Sales_Item_Packing !== undefined  &amp;&amp; _Validar==1)
             {
                 _SOrden_SItem_PackingLIst=_Sales_Order_Packing+'/'+_Sales_Item_Packing;
                 _Validar=1;
            }

            if (_Delivery_Packing_List !== undefined) { //console.log ("DElivery 1");
                if (_Delivery_Packing_List.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery de Packing es númerico');
                    $app.input.focus({ fieldName: 'Delivery_Packing_List' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)

            if (_Delivery !== undefined) {
                console.log("DElivery 2");
                if (_Delivery.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    // console.log("no numerico");
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El tipo de dato requerido para Delivery es númerico');
                    $app.input.focus({ fieldName: 'Delivery_SeccionTres' });
                    //  this.result.focus('Delivery_Delivery', 'El tipo de dato requerido es númerico.');
                }
            } //if ( _Delivery  !== undefined)
            if (_Folio_Etiqueta_Embarque !== undefined) { //console.log ("Variable sin definir");
                if (_Folio_Etiqueta_Embarque.match(soloNumeros)) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El folio de embarque es númerico');
                    $app.input.focus({ fieldName: 'Folio_Etiqueta_Embarque_SeccionTres' });
                    //this.result.focus('Folio_Etiqueta_Embarque_SeccionDos', 'El tipo de dato requerido es númerico.');
                }
            } //if (_Folio_Etiqueta_Embarque !== undefined)

            if (_Sales_Order_Tres !== undefined &amp;&amp; _Sales_Order_Tres !==null) 
            {
                if (_Sales_Order_Tres.match(soloNumeros)) {
                    _Validar = 1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Order de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Order_Tres' });  
                }
            }// if(_Sales_Order_Uno.match !== undefined)
            if (_Sales_Item_Tres !== undefined &amp;&amp; _Sales_Item_Tres !==null) 
            {
                if (_Sales_Item_Tres.match(soloNumeros)) {
                    _Validar=1;
                }
                else 
                {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'Sales Item de Tarima es dato númerico.');
                    $app.input.focus({ fieldName: 'Sales_Item_Tres' });  
                }
            }// if (_Sales_Item_Uno !== undefined) 
            if(_Sales_Order_Tres!== undefined &amp;&amp; _Sales_Item_Tres !== undefined  &amp;&amp; _Validar==1)
            {
                _SOrden_SItem_Tarima=_Sales_Order_Tres+'/'+_Sales_Item_Tres;
                _Validar=1;
            }
    
            if (_Material_Tarima !== undefined) {
                // if(_Material_Tarima.match(alfanumerico) &amp;&amp; _Material_Tarima.length &lt;=18){
                if (_Material_Tarima.length &lt;= 18) {
                    _Validar = 1;
                }
                else {
                    _Validar = 0;
                    alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 'El Material consta de 18 caracteres máximo');
                    $app.input.focus({ fieldName: 'Material_Tarima_Tres' });
                    // this.result.focus('Material_Tarima_Dos', 'El tipo de dato requerido es alfanumérico y de 18 caracteres máximo.');
                }
            }//if(_Material_Tarima.match !== undefined)

        }//else

    }//if(_Seccion_Capturada === 3){

    //Pendiente ajustar parametros por cambios en el SP
    if (_Validar == 1) {

        validaretiquetas(
            _Folio_Etiqueta_Embarque
            , _Material_Tarima
            , _SOrden_SItem_Tarima
            , _Delivery
            , _SOrden_SItem_PackingLIst
            , _Delivery_Packing_List
            //,[Delivery_Dos]
            , _Cantidad
            , 1
            , _Seccion_Capturada
            , _Folio_Escaneo_Id
            , _Transaccion_Escaneo
        ).done(function (data) {

            // $appfactory.find('Selecion_Compresor_Estandar', 'Controller').sync();

            if (data.rowsAffected == 1) {
                fnDebug(data);

                if (data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id === 1) {
                    //Primero debe preguntar si desea generar evidencias--Aqui ya es un hecho que todo OK
                    
                    fnLimpiarFormulario(data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id, viewName, data.Escaneo_Validador_Embarque1.Resultado_Validacion);

                    alertify.confirm(
                        '&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', 
                        data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                        function () {
                            fnDebug('OK');
                            fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                        }
                        , function () {
                            fnDebug('CANCEL');
                        }).set('labels', { ok: 'SI', cancel: 'NO' });
                }//  if(data.Escaneo_Validador_Embarque1.Mensaje_Sistema_Id===1)
                else {

                    if (data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')) {//Significa que algo salio mal

                        alertify.confirm('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion + '&lt;strong&gt; ¿Desea capturar evidencia?&lt;/strong&gt; ',
                            function () {
                                fnDebug('OK');
                                fnAgregarEvidencia(data.Escaneo_Validador_Embarque1.Transaccion_Escaneo, data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id);
                            }
                            , function () {
                                fnDebug('CANCEL');
                            }
                        ).set('labels', { ok: 'SI', cancel: 'NO' });

                    }//if(data.Escaneo_Validador_Embarque1.Resultado_Validacion.includes('rincorrecto')
                    else {
                        alertify.alert('&lt;div class="alertifyModalHeader"&gt;&lt;h1&gt;Validación&lt;/h1&gt;&lt;/div&gt;', data.Escaneo_Validador_Embarque1.Resultado_Validacion,
                            function () { fnDebug('OK'); });
                    }
                    //Si algo salio mal o aun no termina la captura permanecen estos datos para ligar escaneos.
                    $app.input.execute({
                        values: [
                            { name: 'Resultado_Validacion', value: data.Escaneo_Validador_Embarque1.Resultado_Validacion }
                            , { name: 'Transaccion_Escaneo', value: data.Escaneo_Validador_Embarque1.Transaccion_Escaneo }
                            , { name: 'Folio_Escaneo_Id', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Folio_Escaneo_Anterior', value: data.Escaneo_Validador_Embarque1.Folio_Escaneo_Id }
                            , { name: 'Captura_Iniciada', value: true }
                        ]
                        ,raiseCalculate: false
                    });
                }
            }
            else {
                fnDebug("ELSE");
            }
        });
    }//if(_Validar=1)
}//if(_Seccion_Capturada !== undefined)
else {
    $app.alert('Indique la validación que desea aplicar.');
}//boton</Script></update></c><c y="NodeSet" t="2022-05-24T08:47:42"><controller name="Escaneo_Validador_Embarque1_1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /><update><DataViewFilterField2>EscaneoValidadorEmbarqueId</DataViewFilterField2></update></c><c y="NodeSet" t="2022-05-24T08:50:23"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="EscaneoValidadorEmbarqueId" /><copy><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="EscaneoValidadorEmbarqueId" /></copy></c><c y="NodeSet" t="2022-05-24T08:50:43"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="EscaneoValidadorEmbarqueId_1" /><rename>Escaneo_Validador_Embarque_Id</rename></c><c y="NodeSet" t="2022-05-24T08:50:55"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Escaneo_Validador_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-24T08:50:58"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="EscaneoValidadorEmbarqueId" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-24T08:51:09"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><update><Hidden>true</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2022-05-24T08:51:13"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="EscaneoValidadorEmbarqueId" /></move></c><c y="NodeSet" t="2022-05-24T08:51:35"><controller name="Escaneo_Validador_Embarque1_1" /><field name="Evidencia_Escaneo_Validador_Embarque1" /><update><DataViewFilterField2>Escaneo_Validador_Embarque_Id</DataViewFilterField2></update></c><c y="NodeSet" t="2022-05-24T08:58:49"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /><move><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-24T08:58:51"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><move><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Seccion_Capturada" /></move></c><c y="NodeSet" t="2022-05-24T08:59:39"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /><move><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="FolioBitacoraValidadorEmbarques" /></move></c><c y="NodeSet" t="2022-05-24T08:59:42"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="FolioBitacoraValidadorEmbarques" /><move><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Escaneo_Validador_Embarque_Id" /></move></c><c y="NodeSet" t="2022-05-24T08:59:48"><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="Mensaje_Sistema_Id" /><move><controller name="Bitacora_Validador_Embarques" /><view id="grid1" /><dataField fieldName="MensajeValidacionAplicada" /></move></c><c y="NodeSet" t="2022-06-03T09:36:34"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><insert type="rule"><Type>JavaScript</Type><CommandName>Custom</CommandName><CommandArgument>ExecJS001</CommandArgument><Phase>Before</Phase><Script>
this.preventDefault();
var contenido = '&lt;div&gt;&lt;video id="player" controls autoplay style="width:100%; height:auto;"&gt;&lt;/video&gt;&lt;/div&gt;'
contenido += '&lt;div style="width:100%; max-height:200px; overflow: hidden"&gt;&lt;canvas id="canvas" style="display: none;"&gt;&lt;/canvas&gt;&lt;/div&gt;'
// contenido += '&lt;div&gt;&lt;button id="capture"&gt;Capture&lt;/button&gt;&lt;button id="usarFoto"&gt;Usar Foto&lt;/button&gt;&lt;/div&gt;'


alertify.alert().set({
    onshow: function(){ 
        IniciarVideo();
    }
})

alertify.alert(
    'Cámara', 
    contenido,
    function () { 
        tomarFoto();
        establecerFotoForm();
    }
)

alertify.alert().set({
    onshow: function(){ 
        fnDebug("Reset onShow Setting");
    }
})
</Script></insert></c><c y="NodeSet" t="2022-06-03T09:37:19"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS001</CommandArgument><HeaderText>"Usar Cámara"</HeaderText><CausesValidation>true</CausesValidation><WhenLastCommandName>New</WhenLastCommandName></insert></c><c y="NodeSet" t="2022-06-03T09:37:42"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><insert type="action"><CommandName>Custom</CommandName><CommandArgument>ExecJS001</CommandArgument><HeaderText>"Usar Cámara"</HeaderText><CausesValidation>true</CausesValidation></insert></c><c y="NodeSet" t="2022-06-03T09:37:56"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /><update><WhenLastCommandName>Edit</WhenLastCommandName></update></c><c y="NodeSet" t="2022-06-03T09:38:04"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a4" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a101" /></move></c><c y="NodeSet" t="2022-06-03T09:38:15"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a6" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><actionGroup id="ag2" /><action id="a100" /></move></c><c y="NodeSet" t="2022-08-26T19:18:18"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><GenerateDataAccessObjects>false</GenerateDataAccessObjects><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {Escaneo_Validador_Embarque_Id}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T19:19:01"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {Escaneo_Validador_Embarque_Id}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T19:29:09"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><insert type="field"><Name>Picture</Name><Type>Byte[]</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>true</OnDemand><SourceFields>Evidencia_Escaneo_Validador_Embarque_Id</SourceFields><OnDemandHandler>PictureBlobHandler</OnDemandHandler><OnDemandStyle>Thumbnail</OnDemandStyle><Label>Picture</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-08-26T19:29:21"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:29:24"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:29:35"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><category id="c1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm2" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:29:40"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:29:49"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:29:52"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2022-08-26T19:39:28"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarque_Id}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T19:44:57"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T19:47:50"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: VpSar8Ub/lsp2Imi5YK6+pJwMiF/l/VsPHpqlJK1cuXfLGYl38iWLJ8t7lVWZwF20Fpsiqe0hszo0asM9+hKVw==
Path-Template: {Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T19:54:20"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: VpSar8Ub/lsp2Imi5YK6+pJwMiF/l/VsPHpqlJK1cuXfLGYl38iWLJ8t7lVWZwF20Fpsiqe0hszo0asM9+hKVw==
Path-Template: Evidencia/{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T20:41:22"><controller name="Evidencia_Escaneo_Validador_Embarque" /><insert type="field"><Name>Picture</Name><Type>Byte[]</Type><AllowNulls>true</AllowNulls><IsPrimaryKey>false</IsPrimaryKey><IsVirtual>false</IsVirtual><Computed>false</Computed><Calculated>false</Calculated><CausesCalculate>false</CausesCalculate><OnDemand>true</OnDemand><SourceFields>Evidencia_Escaneo_Validador_Embarque_Id</SourceFields><OnDemandHandler>PictureBlobHandler</OnDemandHandler><OnDemandStyle>Thumbnail</OnDemandStyle><Label>Picture</Label><ReadOnly>false</ReadOnly><ShowInSummary>false</ShowInSummary><HtmlEncode>true</HtmlEncode><FormatOnClient>true</FormatOnClient><SearchOnStart>false</SearchOnStart><AutoSelect>false</AutoSelect><ItemsLetters>false</ItemsLetters><AllowQBE>true</AllowQBE><AllowSorting>true</AllowSorting><MaskType>None</MaskType><AllowLEV>false</AllowLEV></insert></c><c y="NodeSet" t="2022-08-26T20:41:31"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Picture" /></move></c><c y="NodeSet" t="2022-08-26T20:41:34"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Picture" /></move></c><c y="NodeSet" t="2022-08-26T20:41:37"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="editForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2022-08-26T20:41:42"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="createForm1" /><category id="c1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2022-08-26T20:43:24"><controller name="Evidencia_Escaneo_Validador_Embarque" /><update><GenerateDataAccessObjects>false</GenerateDataAccessObjects><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: evidencia/{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T20:46:09"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-08-26T20:51:24"><controller name="Evidencia_Escaneo_Validador_Embarque" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: materiales
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: evidencia/{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T22:58:59"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Picture" /><update><OnDemandHandler>Evidencia_EscanoPictureBlobHandler</OnDemandHandler></update></c><c y="NodeSet" t="2022-08-26T23:14:38"><controller name="Evidencia_Escaneo_Validador_Embarque" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarqueId}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T23:26:29"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
   AND EvidenciaEscaneoValidadorEmbarqueId &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-08-26T23:26:47"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
   AND EvidenciaEscaneoValidadorEmbarqueId &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-08-26T23:44:20"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @Escaneo_Validador_Embarque_Id
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @EvidenciaEscaneoValidadorEmbarqueId 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-08-26T23:46:53"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--</Script></update></c><c y="NodeSet" t="2022-08-26T23:52:25"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarqueId}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T23:52:38"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayoke
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarqueId}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-26T23:53:06"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Picture" /><update><OnDemandHandler>Evidencia_EscaneoPictureBlobHandler</OnDemandHandler></update></c><c y="NodeSet" t="2022-08-26T23:53:26"><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Picture" /><update><OnDemandHandler>Evidencia_EscaneoPictureBlobHandler</OnDemandHandler></update></c><c y="NodeSet" t="2022-08-27T00:27:06"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r100" /><update><Script>-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--

DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = @Nuevo_Nombre;</Script></update></c><c y="NodeSet" t="2022-08-27T00:27:22"><controller name="Evidencia_Escaneo_Validador_Embarque" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--


DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = @Nuevo_Nombre;</Script></update></c><c y="NodeSet" t="2022-08-27T00:27:38"><controller name="Documento_Material" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1433,1,1,@Documento_Material_Id) 
   RETURN 
END

-- REspaldar el nombre original del archivo 
SET @Nombre_Documento = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);








</Script></update></c><c y="NodeSet" t="2022-08-27T00:27:50"><controller name="Documento_Material" /><rule id="r102" /><update><Script>DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Documento_Material 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Documento_Material_Id)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Documento_Material_Id)) -- Verificar si aplica campo
AND Documento_Material_Id &lt;&gt; @Documento_Material_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1434,1,1,@Documento_Material_Id) 
   RETURN 
END



-- REspaldar el nombre original del archivo 
SET @Nombre_Documento = @PictureFileName;

DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = (SELECT @Nuevo_Nombre);
</Script></update></c><c y="NodeSet" t="2022-08-27T01:00:54"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r100" /><update><Script>--Verificar que exista la transacción en 
DECLARE @Already_Exists_Transaccion BIT 
SET @Already_Exists_Transaccion = 0 
SELECT 
   TOP 1 @Already_Exists_Transaccion  = 1 
FROM 
   APP.Escaneo_Validador_Embarque 
WHERE 
   Estatus_Registro_Id=1 AND Transaccion_Escaneo=@Transaccion_Escaneo
IF @Already_Exists_Transaccion = 0 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = 'Es indispensable validar la información antes de generar evidencias';
   SET @Result_ShowAlert =  'Es indispensable validar la información antes de generar evidencias';
   RETURN 
END
-- Insert/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT 
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Transaccion_Escaneo = @Transaccion_Escaneo
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--


DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = @Nuevo_Nombre;

</Script></update></c><c y="NodeSet" t="2022-08-27T01:01:03"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><rule id="r102" /><update><Script>-- Update/Before
DECLARE @Already_Exists BIT 
SET @Already_Exists = 0 
SELECT
   TOP 1 @Already_Exists  = 1 
FROM 
   APP.Evidencia_Escaneo_Validador_Embarque 
WHERE 
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Comentario)) = dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Comentario)) -- Verificar si aplica campo
   AND Escaneo_Validador_Embarque_Id = @EscaneoValidadorEmbarqueId
   AND Transaccion_Escaneo = @Transaccion_Escaneo
   AND Evidencia_Escaneo_Validador_Embarque_Id &lt;&gt; @Evidencia_Escaneo_Validador_Embarque_Id 
IF @Already_Exists = 1 
BEGIN 
   SET @BusinessRules_PreventDefault = 1 
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1613,1,232,@Comentario) 
   RETURN 
END
--


DECLARE @Nuevo_Nombre VARCHAR(250);
SET @Nuevo_Nombre = REPLACE(@PictureFileName, ' ','');
SET @PictureFileName = @Nuevo_Nombre;</Script></update></c><c y="NodeSet" t="2022-08-27T16:32:55"><controller name="Etiqueta_Embarque" /><rule id="r100" /><update><Script>-- BR </Script></update></c><c y="NodeSet" t="2022-08-27T16:33:33"><controller name="Etiqueta_Embarque" /><rule id="r102" /><update><Script>-- BR
</Script></update></c><c y="NodeSet" t="2022-08-27T16:33:39"><controller name="Etiqueta_Embarque" /><rule id="r102" /><update><Script>-- BR
</Script></update></c><c y="NodeSet" t="2022-08-27T16:34:31"><controller name="Etiqueta_Embarque1" /><rule id="r100" /><update><Script>
SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)

DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:34:41"><controller name="Etiqueta_Embarque1" /><rule id="r100" /><update><Script>SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)

DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:34:51"><controller name="Etiqueta_Embarque1" /><rule id="r102" /><update><Script>
SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:35:15"><controller name="Etiqueta_Embarque1" /><rule id="r102" /><update><Script>SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:35:28"><controller name="Etiqueta_Embarque1_1" /><rule id="r100" /><update><Script>DECLARE @Already_Exists BIT
SET @Already_Exists = 0
SELECT
   TOP 1 @Already_Exists  = 1
FROM
   APP.Etiqueta_Embarque
WHERE
   dbo.fn_Sustituir_Caracteres_Especiales(Lower(Etiqueta_Embarque_Id))=dbo.fn_Sustituir_Caracteres_Especiales(Lower(@Etiqueta_Embarque_Id))
IF @Already_Exists = 1
BEGIN
   SET @BusinessRules_PreventDefault = 1
   SET @Result_ShowViewMessage = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   SET @Result_ShowAlert = [dbo].[fn_Obtener_Mensaje_Sistema](1411,1,10,@Etiqueta_Embarque_Id)
   RETURN
END

SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)

DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:35:34"><controller name="Etiqueta_Embarque1_1" /><rule id="r100" /><update><Script>

SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)

DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-27T16:35:43"><controller name="Etiqueta_Embarque1_1" /><rule id="r102" /><update><Script>
SET @Cantidad_De_Bultos = ISNULL(@Cantidad_De_Bultos,0)


DECLARE @Insertar_Registro_Etiqueta_Detalle BIT -- 1 = insertar solo un registro (no son ombigatorias las cantidades)
												-- 0 = Insertar de forma automatica la cantidad calculada (Es obligatorio mayor acero)

SET @Insertar_Registro_Etiqueta_Detalle = ISNULL((
  SELECT TOP 1 CONVERT(BIT,cs.Valor_Cuantitativo)
  FROM dbo.Configuracion_Sistema cs 
  WHERE cs.Configuracion_Sistema_Id = 1002
),1)

IF @Insertar_Registro_Etiqueta_Detalle = 0 BEGIN

	IF ISNULL(@Cantidad_De_Etiquetas, 0) = 0 BEGIN
		SET @BusinessRules_PreventDefault = 1
	   	SET @Result_ShowViewMessage = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	SET @Result_ShowAlert = 'Ingrese una cantidad válida para generar los detalles de etiqueta'
	   	RETURN
	END

END</Script></update></c><c y="NodeSet" t="2022-08-28T14:41:31"><controller name="Evidencia_Escaneo_Validador_Embarque" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayokeprod
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarqueId}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2022-08-28T14:41:46"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><update><BlobAdapterConfig>Field: Picture
Storage-System: Azure
Account: cooperetiquetastrg
Container: evidenciapokayokeprod
Key: rVnYLmTRPjtViq31qdfPdljnut0H93qrxNCKMDnv1jhT4hV3AnHlt8FgbasITUm/r4AGhXoguXVn+ALLTFlfqA==
Path-Template: {EscaneoValidadorEmbarqueId}/{Evidencia_Escaneo_Validador_Embarque_Id}-{PictureFileName}</BlobAdapterConfig></update></c><c y="NodeSet" t="2023-01-11T12:49:56"><controller name="Solicitud2" /><view id="createForm1" /><dataField fieldName="Motivo_Solicitud" /><update><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-01-11T12:50:37"><controller name="Solicitud2" /><view id="editForm1" /><dataField fieldName="Motivo_Solicitud" /><update><Hidden>false</Hidden><Visibility /><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-01-11T13:05:49"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="grid1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><field name="Picture" /></move></c><c y="NodeSet" t="2023-01-11T13:05:51"><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque" /><view id="grid1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2023-01-11T13:06:25"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><field name="Picture" /></move></c><c y="NodeSet" t="2023-01-11T13:06:39"><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Comentario" /><move><controller name="Evidencia_Escaneo_Validador_Embarque1" /><view id="grid1" /><dataField fieldName="Picture" /></move></c><c y="NodeSet" t="2023-09-21T22:36:30"><controller name="Grid_Material_Pte_Por_Surtir_V" /><view id="grid1" /><dataField fieldName="Unidad_Material" /><update><Columns>8</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:36:44"><controller name="Grid_Material_Pte_Por_Surtir_V" /><view id="grid1" /><dataField fieldName="Ubicacion_Almacenamiento" /><update><Columns>25</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:37:12"><controller name="Grid_Material_Pte_Por_Surtir_V" /><view id="grid1" /><dataField fieldName="Orden_Produccion_Solicitud_Material" /><update><Columns>25</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:37:29"><controller name="Grid_Material_Pte_Por_Surtir_V" /><view id="grid1" /><dataField fieldName="SolicitadoPor" /><update><Columns>70</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:39:46"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Unidad_Material" /><update><Columns>30</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:40:03"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Ubicacion_Almacenamiento" /><update><Columns>25</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:40:19"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Orden_Produccion_Solicitud_Material" /><update><Columns>25</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:40:30"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Solicitado_Por" /><update><Columns>70</Columns><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-21T22:40:42"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><view id="grid1" /><dataField fieldName="Solicitado_Por" /><update><Hidden>false</Hidden><DataViewShowInSummary>false</DataViewShowInSummary></update></c><c y="NodeSet" t="2023-09-22T16:41:43"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><field name="Orden_Produccion_Solicitud_Material" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:41:52"><controller name="Grid_Material_Pte_Por_Surtir_Con_Area_Asignada_V" /><field name="Solicitado_Por" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:43:02"><controller name="Grid_Material_Pte_Por_Surtir_V" /><field name="Ubicacion_Almacenamiento_Id" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:43:12"><controller name="Grid_Material_Pte_Por_Surtir_V" /><field name="Ubicacion_Almacenamiento" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:43:46"><controller name="Grid_Material_Pte_Por_Surtir_V" /><field name="Orden_Produccion_Solicitud_Material" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:43:54"><controller name="Grid_Material_Pte_Por_Surtir_V" /><field name="SolicitadoPor" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:48:35"><controller name="Grid_Orden_Detalle_De_Multiple_Orden_Prod_V" /><field name="Cantidad_Producto" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:49:30"><controller name="Grid_Orden_Detalle_De_Multiple_Orden_Prod_V" /><field name="Cantidad_Mat_Total_Para_Producir" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:49:57"><controller name="Grid_Orden_Detalle_De_Multiple_Orden_Prod_V" /><field name="Area_Servicio_Id" /><update><ReadOnly>true</ReadOnly></update></c><c y="NodeSet" t="2023-09-22T16:51:35"><controller name="Grid_Orden_Produccion_V" /><field name="EstaBloqueado" /><update><ReadOnly>true</ReadOnly></update></c></log><log type="Application"><c y="NodeSet" t="2022-05-18T15:46:54"><pages /><insert type="page"><Name>Etiquetaembarqueempaque</Name><Generate>Always</Generate><UseExtenders>false</UseExtenders><Offline>false</Offline><Kiosk>false</Kiosk><Path>Etiqueta embarque empaque</Path><Title>Etiqueta embarque empaque</Title><Roles>usuario</Roles></insert></c><c y="NodeSet" t="2022-05-18T15:47:08"><page name="Perfil_Material" /><before><page name="Etiquetaembarqueempaque" /></before></c><c y="NodeSet" t="2022-05-18T15:47:24"><page name="Etiquetaembarqueempaque" /><update><Roles>usuarioEtiquetaEmbarque</Roles></update></c><c y="NodeSet" t="2022-05-18T15:47:48"><page name="Etiquetaembarqueempaque" /><copy><page name="Etiqueta_Embarque" /><container id="c101" /></copy></c><c y="NodeSet" t="2022-05-18T15:47:57"><page name="Etiquetaembarqueempaque" /><copy><page name="Etiqueta_Embarque" /><container id="c102" /></copy></c><c y="NodeSet" t="2022-05-18T15:48:58"><page name="Etiquetaembarqueempaque" /><dataView id="view1" /><update><Controller>Etiqueta_Embarque1_1</Controller><Tag>view-style-grid, 
view-style-list, 
view-style-cards-disabled,
view-style-charts-disabled,
view-style-calendar-disabled,
inline-editing-none,
inline-editing-option-none
</Tag></update></c><c y="NodeSet" t="2022-05-18T15:49:38"><page name="Etiquetaembarqueempaque" /><dataView id="view2" /><update><Controller>Etiqueta_Embarque_Detalle1_1</Controller></update></c><c y="NodeSet" t="2022-05-18T16:24:17"><page name="Etiquetaembarqueempaque" /><update><Roles>UsuarioEtiquetaEmbarqueEmpaque</Roles></update></c><c y="NodeSet" t="2022-05-24T08:36:01"><page name="Validar_Etiquetas" /><before><page name="Consultar_Evidencias_de_escaneo" /></before></c></log></logs>